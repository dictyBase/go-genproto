// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pubsub.proto

package pubsub

import (
	fmt "fmt"
	identity "github.com/dictyBase/go-genproto/dictybaseapis/identity"
	user "github.com/dictyBase/go-genproto/dictybaseapis/user"
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Definition for communicating the existence of a resource
// and if there's any error during the communication
type Reply struct {
	// Flag to indicate the presence of resource
	Exist bool `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	// Status error model, look here
	// for detail https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
	Status               *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{0}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

func (m *Reply) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

//
// Definition for replying various identity definition
type IdentityReply struct {
	// single user
	Identity *identity.Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Status error model, look here
	// for detail https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Flag to indicate the presence of resource
	Exist                bool     `protobuf:"varint,4,opt,name=exist,proto3" json:"exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityReply) Reset()         { *m = IdentityReply{} }
func (m *IdentityReply) String() string { return proto.CompactTextString(m) }
func (*IdentityReply) ProtoMessage()    {}
func (*IdentityReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{1}
}

func (m *IdentityReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityReply.Unmarshal(m, b)
}
func (m *IdentityReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityReply.Marshal(b, m, deterministic)
}
func (m *IdentityReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityReply.Merge(m, src)
}
func (m *IdentityReply) XXX_Size() int {
	return xxx_messageInfo_IdentityReply.Size(m)
}
func (m *IdentityReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityReply.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityReply proto.InternalMessageInfo

func (m *IdentityReply) GetIdentity() *identity.Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *IdentityReply) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *IdentityReply) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

//
// Definition for requesting identity information
type IdentityReq struct {
	// Unique id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// An unique identifier provided by the third party.
	// Generally it's an email id, however it could be something else specifically
	// provided by an provider.
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Name of the provider, for example, orcid, google, facebook etc.
	Provider             string   `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityReq) Reset()         { *m = IdentityReq{} }
func (m *IdentityReq) String() string { return proto.CompactTextString(m) }
func (*IdentityReq) ProtoMessage()    {}
func (*IdentityReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{2}
}

func (m *IdentityReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityReq.Unmarshal(m, b)
}
func (m *IdentityReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityReq.Marshal(b, m, deterministic)
}
func (m *IdentityReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityReq.Merge(m, src)
}
func (m *IdentityReq) XXX_Size() int {
	return xxx_messageInfo_IdentityReq.Size(m)
}
func (m *IdentityReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityReq.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityReq proto.InternalMessageInfo

func (m *IdentityReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IdentityReq) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *IdentityReq) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

//
// Definition for replying various user definition
type UserReply struct {
	// single user
	User *user.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// user collection(list of users)
	Users *user.UserCollection `protobuf:"bytes,2,opt,name=users,proto3" json:"users,omitempty"`
	// Status error model, look here
	// for detail https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
	Status *status.Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// Flag to indicate the presence of resource
	Exist                bool     `protobuf:"varint,4,opt,name=exist,proto3" json:"exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserReply) Reset()         { *m = UserReply{} }
func (m *UserReply) String() string { return proto.CompactTextString(m) }
func (*UserReply) ProtoMessage()    {}
func (*UserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{3}
}

func (m *UserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReply.Unmarshal(m, b)
}
func (m *UserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReply.Marshal(b, m, deterministic)
}
func (m *UserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReply.Merge(m, src)
}
func (m *UserReply) XXX_Size() int {
	return xxx_messageInfo_UserReply.Size(m)
}
func (m *UserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserReply proto.InternalMessageInfo

func (m *UserReply) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserReply) GetUsers() *user.UserCollection {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *UserReply) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UserReply) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

// Defintion for communicating an identifer
type IdRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91df006b05e20cf7, []int{4}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Reply)(nil), "dictybase.pubsub.Reply")
	proto.RegisterType((*IdentityReply)(nil), "dictybase.pubsub.IdentityReply")
	proto.RegisterType((*IdentityReq)(nil), "dictybase.pubsub.IdentityReq")
	proto.RegisterType((*UserReply)(nil), "dictybase.pubsub.UserReply")
	proto.RegisterType((*IdRequest)(nil), "dictybase.pubsub.IdRequest")
}

func init() { proto.RegisterFile("pubsub.proto", fileDescriptor_91df006b05e20cf7) }

var fileDescriptor_91df006b05e20cf7 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xbd, 0x6e, 0xdb, 0x30,
	0x10, 0xc7, 0x41, 0xf9, 0x03, 0xf2, 0xa9, 0x2d, 0x0a, 0xc2, 0x40, 0x5d, 0xb7, 0x30, 0x5c, 0x4d,
	0x46, 0x81, 0x52, 0x80, 0xdb, 0xa1, 0x40, 0xbb, 0xd4, 0xee, 0xa2, 0x4d, 0x90, 0xdb, 0xc1, 0xd9,
	0x2c, 0x89, 0x51, 0x08, 0x28, 0xa6, 0xcc, 0x8f, 0x20, 0x7e, 0x86, 0xbc, 0x45, 0xf6, 0xbc, 0x5f,
	0xc6, 0x40, 0xa4, 0x2c, 0x09, 0x46, 0x96, 0x64, 0x11, 0x45, 0xde, 0x8f, 0x77, 0xff, 0xff, 0xf1,
	0xe0, 0x4d, 0xa9, 0x13, 0xa9, 0x13, 0x52, 0x0a, 0xae, 0x38, 0x7e, 0x9f, 0xb1, 0x54, 0x1d, 0x93,
	0x9d, 0xa4, 0xc4, 0x9e, 0x4f, 0x3f, 0xe4, 0x9c, 0xe7, 0x05, 0x0d, 0x44, 0x99, 0x06, 0x52, 0xed,
	0x94, 0x96, 0x16, 0x9d, 0x7e, 0x6c, 0xd0, 0x40, 0x4b, 0x2a, 0xcc, 0xa7, 0x0e, 0x7d, 0x69, 0x43,
	0x2c, 0xa3, 0x7b, 0xc5, 0xd4, 0xb1, 0xf9, 0xb1, 0x88, 0x1f, 0xc2, 0x20, 0xa6, 0x65, 0x71, 0xc4,
	0x63, 0x18, 0xd0, 0x5b, 0x26, 0xd5, 0x04, 0xcd, 0xd1, 0xc2, 0x8d, 0xed, 0x06, 0x7f, 0x85, 0xa1,
	0x2d, 0x36, 0x71, 0xe6, 0x68, 0xe1, 0x2d, 0x31, 0xb1, 0x32, 0x88, 0x28, 0x53, 0xb2, 0x31, 0x91,
	0xb8, 0x26, 0xfc, 0x3b, 0x04, 0x6f, 0xc3, 0x3a, 0xbb, 0xcd, 0xf9, 0x13, 0xdc, 0x53, 0x39, 0x93,
	0xd6, 0x5b, 0x7e, 0x26, 0xad, 0xb1, 0x46, 0x49, 0x73, 0xa9, 0xa1, 0x5f, 0x52, 0xb7, 0x55, 0xde,
	0xef, 0x28, 0xf7, 0xb7, 0xe0, 0xb5, 0x62, 0x0e, 0xf8, 0x1d, 0x38, 0x2c, 0x33, 0x22, 0x7a, 0xb1,
	0xc3, 0x32, 0x3c, 0x03, 0xb0, 0xc5, 0x2e, 0x19, 0x15, 0xa6, 0xc8, 0x28, 0xee, 0x9c, 0xe0, 0x29,
	0xb8, 0xa5, 0xe0, 0x37, 0x2c, 0xa3, 0x62, 0xd2, 0x33, 0xd1, 0x66, 0xef, 0x3f, 0x20, 0x18, 0xfd,
	0x97, 0x54, 0x58, 0x93, 0x0b, 0xe8, 0x57, 0x2d, 0xaf, 0x0d, 0x8e, 0x3b, 0x06, 0xcd, 0x4b, 0x18,
	0xd0, 0x10, 0xf8, 0x07, 0x0c, 0xaa, 0xf5, 0xe4, 0x69, 0xf6, 0x1c, 0xba, 0xe6, 0x45, 0x41, 0x53,
	0xc5, 0xf8, 0x3e, 0xb6, 0x70, 0xa7, 0x15, 0xbd, 0x57, 0xb6, 0xe2, 0x13, 0x8c, 0xc2, 0x2c, 0xa6,
	0x07, 0x4d, 0xa5, 0x3a, 0x6f, 0xc4, 0xea, 0x00, 0x63, 0x2e, 0x72, 0x72, 0x3e, 0x6f, 0x2b, 0x2f,
	0xd2, 0xc9, 0x46, 0x27, 0x51, 0x35, 0x25, 0x11, 0xba, 0xf8, 0x9d, 0x33, 0x75, 0xa5, 0x13, 0x92,
	0xf2, 0xeb, 0xc0, 0xb0, 0xab, 0x6a, 0xaa, 0x72, 0xfe, 0x2d, 0xa7, 0x7b, 0x33, 0x49, 0x41, 0x93,
	0x61, 0x57, 0x32, 0x19, 0xd8, 0x2c, 0xbf, 0xec, 0xf2, 0x88, 0xd0, 0xbd, 0xe3, 0xfe, 0x0d, 0xd7,
	0xff, 0xb6, 0x7f, 0xa2, 0x30, 0x19, 0x9a, 0x0b, 0xdf, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9e,
	0xa4, 0x7b, 0x3b, 0xf3, 0x02, 0x00, 0x00,
}
