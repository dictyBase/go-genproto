// Code generated by protoc-gen-go. DO NOT EDIT.
// source: publication.proto

package publication

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PublicationId struct {
	// Unique identifier for the publication
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicationId) Reset()         { *m = PublicationId{} }
func (m *PublicationId) String() string { return proto.CompactTextString(m) }
func (*PublicationId) ProtoMessage()    {}
func (*PublicationId) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{0}
}

func (m *PublicationId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicationId.Unmarshal(m, b)
}
func (m *PublicationId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicationId.Marshal(b, m, deterministic)
}
func (m *PublicationId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicationId.Merge(m, src)
}
func (m *PublicationId) XXX_Size() int {
	return xxx_messageInfo_PublicationId.Size(m)
}
func (m *PublicationId) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicationId.DiscardUnknown(m)
}

var xxx_messageInfo_PublicationId proto.InternalMessageInfo

func (m *PublicationId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Definition of an individual publication
type Publication struct {
	Data                 *Publication_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Publication) Reset()         { *m = Publication{} }
func (m *Publication) String() string { return proto.CompactTextString(m) }
func (*Publication) ProtoMessage()    {}
func (*Publication) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{1}
}

func (m *Publication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Publication.Unmarshal(m, b)
}
func (m *Publication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Publication.Marshal(b, m, deterministic)
}
func (m *Publication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Publication.Merge(m, src)
}
func (m *Publication) XXX_Size() int {
	return xxx_messageInfo_Publication.Size(m)
}
func (m *Publication) XXX_DiscardUnknown() {
	xxx_messageInfo_Publication.DiscardUnknown(m)
}

var xxx_messageInfo_Publication proto.InternalMessageInfo

func (m *Publication) GetData() *Publication_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Publication_Data struct {
	// Resource name, by default should be publication
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the publication
	Id                   string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *PublicationAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Publication_Data) Reset()         { *m = Publication_Data{} }
func (m *Publication_Data) String() string { return proto.CompactTextString(m) }
func (*Publication_Data) ProtoMessage()    {}
func (*Publication_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{1, 0}
}

func (m *Publication_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Publication_Data.Unmarshal(m, b)
}
func (m *Publication_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Publication_Data.Marshal(b, m, deterministic)
}
func (m *Publication_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Publication_Data.Merge(m, src)
}
func (m *Publication_Data) XXX_Size() int {
	return xxx_messageInfo_Publication_Data.Size(m)
}
func (m *Publication_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Publication_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Publication_Data proto.InternalMessageInfo

func (m *Publication_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Publication_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Publication_Data) GetAttributes() *PublicationAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Definition of various publication attributes
type PublicationAttributes struct {
	// Digital object identifier for publication
	Doi string `protobuf:"bytes,1,opt,name=doi,proto3" json:"doi,omitempty"`
	// Title of publication
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Abstract of publication
	Abstract string `protobuf:"bytes,3,opt,name=abstract,proto3" json:"abstract,omitempty"`
	// Journal where the publication was published
	Journal string `protobuf:"bytes,4,opt,name=journal,proto3" json:"journal,omitempty"`
	// Date publication was published
	PubDate *timestamp.Timestamp `protobuf:"bytes,5,opt,name=pub_date,json=pubDate,proto3" json:"pub_date,omitempty"`
	// Volume of the publication
	Volume string `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	// Pages containing the publication
	Pages string `protobuf:"bytes,7,opt,name=pages,proto3" json:"pages,omitempty"`
	// International Standard Serial Number of publication
	Issn string `protobuf:"bytes,8,opt,name=issn,proto3" json:"issn,omitempty"`
	// Type of publication (i.e. "journal_article")
	PubType string `protobuf:"bytes,9,opt,name=pub_type,json=pubType,proto3" json:"pub_type,omitempty"`
	// Source of the publication (i.e. "pubmed")
	Source string `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`
	// Issue of the publication
	Issue string `protobuf:"bytes,11,opt,name=issue,proto3" json:"issue,omitempty"`
	// Status of the publication
	Status string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// List of authors of the publication
	Authors              []*Author `protobuf:"bytes,13,rep,name=authors,proto3" json:"authors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PublicationAttributes) Reset()         { *m = PublicationAttributes{} }
func (m *PublicationAttributes) String() string { return proto.CompactTextString(m) }
func (*PublicationAttributes) ProtoMessage()    {}
func (*PublicationAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{2}
}

func (m *PublicationAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicationAttributes.Unmarshal(m, b)
}
func (m *PublicationAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicationAttributes.Marshal(b, m, deterministic)
}
func (m *PublicationAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicationAttributes.Merge(m, src)
}
func (m *PublicationAttributes) XXX_Size() int {
	return xxx_messageInfo_PublicationAttributes.Size(m)
}
func (m *PublicationAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicationAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_PublicationAttributes proto.InternalMessageInfo

func (m *PublicationAttributes) GetDoi() string {
	if m != nil {
		return m.Doi
	}
	return ""
}

func (m *PublicationAttributes) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PublicationAttributes) GetAbstract() string {
	if m != nil {
		return m.Abstract
	}
	return ""
}

func (m *PublicationAttributes) GetJournal() string {
	if m != nil {
		return m.Journal
	}
	return ""
}

func (m *PublicationAttributes) GetPubDate() *timestamp.Timestamp {
	if m != nil {
		return m.PubDate
	}
	return nil
}

func (m *PublicationAttributes) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *PublicationAttributes) GetPages() string {
	if m != nil {
		return m.Pages
	}
	return ""
}

func (m *PublicationAttributes) GetIssn() string {
	if m != nil {
		return m.Issn
	}
	return ""
}

func (m *PublicationAttributes) GetPubType() string {
	if m != nil {
		return m.PubType
	}
	return ""
}

func (m *PublicationAttributes) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *PublicationAttributes) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *PublicationAttributes) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PublicationAttributes) GetAuthors() []*Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

// Definition for creating a new publication
type NewPublication struct {
	Data                 *NewPublication_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NewPublication) Reset()         { *m = NewPublication{} }
func (m *NewPublication) String() string { return proto.CompactTextString(m) }
func (*NewPublication) ProtoMessage()    {}
func (*NewPublication) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{3}
}

func (m *NewPublication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPublication.Unmarshal(m, b)
}
func (m *NewPublication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPublication.Marshal(b, m, deterministic)
}
func (m *NewPublication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPublication.Merge(m, src)
}
func (m *NewPublication) XXX_Size() int {
	return xxx_messageInfo_NewPublication.Size(m)
}
func (m *NewPublication) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPublication.DiscardUnknown(m)
}

var xxx_messageInfo_NewPublication proto.InternalMessageInfo

func (m *NewPublication) GetData() *NewPublication_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type NewPublication_Data struct {
	// Resource name, by default should be publication
	Type                 string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Attributes           *PublicationAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NewPublication_Data) Reset()         { *m = NewPublication_Data{} }
func (m *NewPublication_Data) String() string { return proto.CompactTextString(m) }
func (*NewPublication_Data) ProtoMessage()    {}
func (*NewPublication_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{3, 0}
}

func (m *NewPublication_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewPublication_Data.Unmarshal(m, b)
}
func (m *NewPublication_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewPublication_Data.Marshal(b, m, deterministic)
}
func (m *NewPublication_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewPublication_Data.Merge(m, src)
}
func (m *NewPublication_Data) XXX_Size() int {
	return xxx_messageInfo_NewPublication_Data.Size(m)
}
func (m *NewPublication_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_NewPublication_Data.DiscardUnknown(m)
}

var xxx_messageInfo_NewPublication_Data proto.InternalMessageInfo

func (m *NewPublication_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NewPublication_Data) GetAttributes() *PublicationAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Definition for updating an existing publication
type PublicationUpdate struct {
	Data                 *PublicationUpdate_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PublicationUpdate) Reset()         { *m = PublicationUpdate{} }
func (m *PublicationUpdate) String() string { return proto.CompactTextString(m) }
func (*PublicationUpdate) ProtoMessage()    {}
func (*PublicationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{4}
}

func (m *PublicationUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicationUpdate.Unmarshal(m, b)
}
func (m *PublicationUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicationUpdate.Marshal(b, m, deterministic)
}
func (m *PublicationUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicationUpdate.Merge(m, src)
}
func (m *PublicationUpdate) XXX_Size() int {
	return xxx_messageInfo_PublicationUpdate.Size(m)
}
func (m *PublicationUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicationUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_PublicationUpdate proto.InternalMessageInfo

func (m *PublicationUpdate) GetData() *PublicationUpdate_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type PublicationUpdate_Data struct {
	// Resource name, by default should be publication
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the publication
	Id                   string                       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *PublicationUpdateAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *PublicationUpdate_Data) Reset()         { *m = PublicationUpdate_Data{} }
func (m *PublicationUpdate_Data) String() string { return proto.CompactTextString(m) }
func (*PublicationUpdate_Data) ProtoMessage()    {}
func (*PublicationUpdate_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{4, 0}
}

func (m *PublicationUpdate_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicationUpdate_Data.Unmarshal(m, b)
}
func (m *PublicationUpdate_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicationUpdate_Data.Marshal(b, m, deterministic)
}
func (m *PublicationUpdate_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicationUpdate_Data.Merge(m, src)
}
func (m *PublicationUpdate_Data) XXX_Size() int {
	return xxx_messageInfo_PublicationUpdate_Data.Size(m)
}
func (m *PublicationUpdate_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicationUpdate_Data.DiscardUnknown(m)
}

var xxx_messageInfo_PublicationUpdate_Data proto.InternalMessageInfo

func (m *PublicationUpdate_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PublicationUpdate_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PublicationUpdate_Data) GetAttributes() *PublicationUpdateAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Defines attributes for updating an existing publication
type PublicationUpdateAttributes struct {
	// Date of publication
	PubDate *timestamp.Timestamp `protobuf:"bytes,1,opt,name=pub_date,json=pubDate,proto3" json:"pub_date,omitempty"`
	// Volume of the publication
	Volume string `protobuf:"bytes,2,opt,name=volume,proto3" json:"volume,omitempty"`
	// Pages containing the publication
	Pages string `protobuf:"bytes,3,opt,name=pages,proto3" json:"pages,omitempty"`
	// Type of publication (i.e. "journal_article")
	PubType string `protobuf:"bytes,4,opt,name=pub_type,json=pubType,proto3" json:"pub_type,omitempty"`
	// Source of the publication (i.e. "pubmed")
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	// Status of the publication
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	// List of authors of the publication
	Authors              []*Author `protobuf:"bytes,7,rep,name=authors,proto3" json:"authors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PublicationUpdateAttributes) Reset()         { *m = PublicationUpdateAttributes{} }
func (m *PublicationUpdateAttributes) String() string { return proto.CompactTextString(m) }
func (*PublicationUpdateAttributes) ProtoMessage()    {}
func (*PublicationUpdateAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{5}
}

func (m *PublicationUpdateAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicationUpdateAttributes.Unmarshal(m, b)
}
func (m *PublicationUpdateAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicationUpdateAttributes.Marshal(b, m, deterministic)
}
func (m *PublicationUpdateAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicationUpdateAttributes.Merge(m, src)
}
func (m *PublicationUpdateAttributes) XXX_Size() int {
	return xxx_messageInfo_PublicationUpdateAttributes.Size(m)
}
func (m *PublicationUpdateAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicationUpdateAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_PublicationUpdateAttributes proto.InternalMessageInfo

func (m *PublicationUpdateAttributes) GetPubDate() *timestamp.Timestamp {
	if m != nil {
		return m.PubDate
	}
	return nil
}

func (m *PublicationUpdateAttributes) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *PublicationUpdateAttributes) GetPages() string {
	if m != nil {
		return m.Pages
	}
	return ""
}

func (m *PublicationUpdateAttributes) GetPubType() string {
	if m != nil {
		return m.PubType
	}
	return ""
}

func (m *PublicationUpdateAttributes) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *PublicationUpdateAttributes) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PublicationUpdateAttributes) GetAuthors() []*Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

// List of publications
type PublicationCollection struct {
	Data                 []*PublicationCollection_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta                 *Meta                         `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PublicationCollection) Reset()         { *m = PublicationCollection{} }
func (m *PublicationCollection) String() string { return proto.CompactTextString(m) }
func (*PublicationCollection) ProtoMessage()    {}
func (*PublicationCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{6}
}

func (m *PublicationCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicationCollection.Unmarshal(m, b)
}
func (m *PublicationCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicationCollection.Marshal(b, m, deterministic)
}
func (m *PublicationCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicationCollection.Merge(m, src)
}
func (m *PublicationCollection) XXX_Size() int {
	return xxx_messageInfo_PublicationCollection.Size(m)
}
func (m *PublicationCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicationCollection.DiscardUnknown(m)
}

var xxx_messageInfo_PublicationCollection proto.InternalMessageInfo

func (m *PublicationCollection) GetData() []*PublicationCollection_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PublicationCollection) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type PublicationCollection_Data struct {
	// Resource name, by default should be publication
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the publication
	Id                   string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *PublicationAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PublicationCollection_Data) Reset()         { *m = PublicationCollection_Data{} }
func (m *PublicationCollection_Data) String() string { return proto.CompactTextString(m) }
func (*PublicationCollection_Data) ProtoMessage()    {}
func (*PublicationCollection_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{6, 0}
}

func (m *PublicationCollection_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicationCollection_Data.Unmarshal(m, b)
}
func (m *PublicationCollection_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicationCollection_Data.Marshal(b, m, deterministic)
}
func (m *PublicationCollection_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicationCollection_Data.Merge(m, src)
}
func (m *PublicationCollection_Data) XXX_Size() int {
	return xxx_messageInfo_PublicationCollection_Data.Size(m)
}
func (m *PublicationCollection_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicationCollection_Data.DiscardUnknown(m)
}

var xxx_messageInfo_PublicationCollection_Data proto.InternalMessageInfo

func (m *PublicationCollection_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PublicationCollection_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PublicationCollection_Data) GetAttributes() *PublicationAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Defines fields for manipulating output of Publication collection
type ListPublicationParameters struct {
	// A unique pointer to the next set of result in the list
	Cursor int64 `protobuf:"varint,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// The `filter` field restricts the data return by the collection. To use
	// it, supply one or multiple allowed fields to filter followed
	// by a filter expression. It uses the following syntax...
	//        field_name operator expression
	//
	// The following fields of `PublicationAttributes` definition are allowed to
	// be used for filtering
	//   * journal            - Journal where the publication was published (string)
	//   * year               - Year publication was published (string)
	//   * pub_date           - Date of publication (string)
	//   * pub_type           - Type of publication (string)
	//   * source             - Source of the publication (string)
	//   * issue              - Issue of the publication (string)
	//   * status             - Status of the publication (string)
	//   * author             - Authors of the publication (string)
	//
	// field_name - Any one of the allowed field_name of the `PublicationAttributes` definition.
	// operator - Defines the type of filter match to use. It could be any of
	// the following four and all of them should be URL-encoded for http request.
	//
	//        Operators for strings
	//              =~   Contains substring
	//              !~   Not contains substring
	//              ===  Equals
	//              !==  Not equals
	//
	//        Operators for number
	//              ==  Equals
	//              >   Greater than
	//              <   Less than
	//              =<  Less than equal to
	//              >=  Greater than equal to
	//
	// expression - The value that will be included or excluded from the
	// result. URL-reserved characters must be URL-encoded for http request.
	//
	//           filter: "pub_type===journal_article"
	//           filter: "source===pubmed"
	//
	// Filter can be combined using OR or AND boolean logic.
	//   * The OR is represented using a comma(,).
	//   * The AND is represented using a semi-colon(;).
	//   * AND and OR operators can be combined and AND takes precedence over OR.
	//
	//           filter: "year==2008;journal===Genesis"
	//
	// Can also accept multiple authors.
	//           filter: "author===Vandelay;author===VanNostrand"
	//
	Filter               string   `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPublicationParameters) Reset()         { *m = ListPublicationParameters{} }
func (m *ListPublicationParameters) String() string { return proto.CompactTextString(m) }
func (*ListPublicationParameters) ProtoMessage()    {}
func (*ListPublicationParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{7}
}

func (m *ListPublicationParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPublicationParameters.Unmarshal(m, b)
}
func (m *ListPublicationParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPublicationParameters.Marshal(b, m, deterministic)
}
func (m *ListPublicationParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPublicationParameters.Merge(m, src)
}
func (m *ListPublicationParameters) XXX_Size() int {
	return xxx_messageInfo_ListPublicationParameters.Size(m)
}
func (m *ListPublicationParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPublicationParameters.DiscardUnknown(m)
}

var xxx_messageInfo_ListPublicationParameters proto.InternalMessageInfo

func (m *ListPublicationParameters) GetCursor() int64 {
	if m != nil {
		return m.Cursor
	}
	return 0
}

func (m *ListPublicationParameters) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListPublicationParameters) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// Definition of an individual author
type Author struct {
	// Last name of the author
	LastName string `protobuf:"bytes,1,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// First name of the author
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// Any initials of the author
	Initials string `protobuf:"bytes,3,opt,name=initials,proto3" json:"initials,omitempty"`
	// Ranking of the author
	Rank                 int64    `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{8}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Author) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Author) GetInitials() string {
	if m != nil {
		return m.Initials
	}
	return ""
}

func (m *Author) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

// Metadata definition for traversing the collection
type Meta struct {
	// A unique pointer to the next set of result in the collection. Set the
	// cursor value parameter to the value of next_cursor to retrieve the next
	// set of collection using the same method
	NextCursor int64 `protobuf:"varint,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Total number of records in the collection.
	Total                int64    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_45514f0006af7851, []int{9}
}

func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetNextCursor() int64 {
	if m != nil {
		return m.NextCursor
	}
	return 0
}

func (m *Meta) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Meta) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*PublicationId)(nil), "dictybase.publication.PublicationId")
	proto.RegisterType((*Publication)(nil), "dictybase.publication.Publication")
	proto.RegisterType((*Publication_Data)(nil), "dictybase.publication.Publication.Data")
	proto.RegisterType((*PublicationAttributes)(nil), "dictybase.publication.PublicationAttributes")
	proto.RegisterType((*NewPublication)(nil), "dictybase.publication.NewPublication")
	proto.RegisterType((*NewPublication_Data)(nil), "dictybase.publication.NewPublication.Data")
	proto.RegisterType((*PublicationUpdate)(nil), "dictybase.publication.PublicationUpdate")
	proto.RegisterType((*PublicationUpdate_Data)(nil), "dictybase.publication.PublicationUpdate.Data")
	proto.RegisterType((*PublicationUpdateAttributes)(nil), "dictybase.publication.PublicationUpdateAttributes")
	proto.RegisterType((*PublicationCollection)(nil), "dictybase.publication.PublicationCollection")
	proto.RegisterType((*PublicationCollection_Data)(nil), "dictybase.publication.PublicationCollection.Data")
	proto.RegisterType((*ListPublicationParameters)(nil), "dictybase.publication.ListPublicationParameters")
	proto.RegisterType((*Author)(nil), "dictybase.publication.Author")
	proto.RegisterType((*Meta)(nil), "dictybase.publication.Meta")
}

func init() { proto.RegisterFile("publication.proto", fileDescriptor_45514f0006af7851) }

var fileDescriptor_45514f0006af7851 = []byte{
	// 930 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x4d, 0x6f, 0x1b, 0x45,
	0x18, 0xce, 0xae, 0x1d, 0x7f, 0xbc, 0xa6, 0x51, 0x3c, 0xa2, 0xd6, 0xc6, 0xa1, 0x4a, 0xb4, 0x02,
	0x35, 0x42, 0x8d, 0x0d, 0x41, 0xd0, 0x03, 0xa7, 0xc4, 0xa1, 0xc8, 0x52, 0x5b, 0x45, 0x9b, 0x20,
	0x01, 0x42, 0x0a, 0xb3, 0xde, 0x89, 0x33, 0x74, 0x77, 0x67, 0xb5, 0xf3, 0x6e, 0xd2, 0xdc, 0xa1,
	0xe2, 0x2f, 0x70, 0xe5, 0xa7, 0x70, 0xe6, 0x3f, 0x20, 0x71, 0xe1, 0x2f, 0x70, 0x44, 0x33, 0xb3,
	0x76, 0xc6, 0xc5, 0x8e, 0x5d, 0x38, 0xf4, 0x36, 0xef, 0xcc, 0xf3, 0xbc, 0x9f, 0xcf, 0xcc, 0x2e,
	0xb4, 0xb3, 0x22, 0x8c, 0xf9, 0x88, 0x22, 0x17, 0x69, 0x2f, 0xcb, 0x05, 0x0a, 0x72, 0x3f, 0xe2,
	0x23, 0xbc, 0x09, 0xa9, 0x64, 0x3d, 0xeb, 0xb0, 0xfb, 0xde, 0x58, 0x88, 0x71, 0xcc, 0xfa, 0x34,
	0xe3, 0x7d, 0x9a, 0xa6, 0x02, 0xf5, 0xb6, 0x34, 0xa4, 0xee, 0x4e, 0x79, 0xaa, 0xad, 0xb0, 0xb8,
	0xe8, 0x23, 0x4f, 0x98, 0x44, 0x9a, 0x64, 0x25, 0x60, 0xfb, 0x75, 0x00, 0x4b, 0x32, 0xbc, 0x29,
	0x0f, 0x3f, 0x1b, 0x73, 0xbc, 0x2c, 0xc2, 0xde, 0x48, 0x24, 0xfd, 0xe4, 0x9a, 0xe3, 0x0b, 0x71,
	0xdd, 0x1f, 0x8b, 0x7d, 0x7d, 0xb8, 0x7f, 0x45, 0x63, 0x1e, 0x51, 0x14, 0xb9, 0xec, 0x4f, 0x97,
	0x86, 0xe7, 0x3f, 0x84, 0x7b, 0x27, 0xb7, 0x29, 0x0e, 0x23, 0xd2, 0x01, 0x97, 0x47, 0x9e, 0xb3,
	0xeb, 0xec, 0x35, 0x8f, 0x6a, 0x7f, 0xfe, 0xb1, 0xe3, 0x7e, 0xed, 0x04, 0x2e, 0x8f, 0xfc, 0xdf,
	0x1d, 0x68, 0x59, 0x48, 0x32, 0x80, 0x6a, 0x44, 0x91, 0x6a, 0x64, 0xeb, 0xe0, 0x61, 0x6f, 0x6e,
	0xc9, 0x3d, 0x8b, 0xd1, 0x3b, 0xa6, 0x48, 0x8d, 0xcb, 0x5d, 0x27, 0xd0, 0xe4, 0xee, 0x4b, 0xa8,
	0xaa, 0x5d, 0x42, 0xa0, 0x8a, 0x37, 0x19, 0x33, 0x61, 0x03, 0xbd, 0x26, 0x1b, 0x3a, 0x11, 0x57,
	0xef, 0xb8, 0x3c, 0x22, 0x4f, 0x01, 0x28, 0x62, 0xce, 0xc3, 0x02, 0x99, 0xf4, 0x2a, 0x3a, 0xec,
	0xa3, 0xe5, 0x61, 0x0f, 0xa7, 0x9c, 0xc0, 0xe2, 0xfb, 0x3f, 0x57, 0xe0, 0xfe, 0x5c, 0x14, 0xd9,
	0x84, 0x4a, 0x24, 0x78, 0x99, 0x8a, 0x5a, 0x92, 0x77, 0x61, 0x1d, 0x39, 0xc6, 0xac, 0x4c, 0xc6,
	0x18, 0xa4, 0x0b, 0x0d, 0x1a, 0x4a, 0xcc, 0xe9, 0x08, 0x75, 0x36, 0xcd, 0x60, 0x6a, 0x13, 0x0f,
	0xea, 0x3f, 0x88, 0x22, 0x4f, 0x69, 0xec, 0x55, 0xf5, 0xd1, 0xc4, 0x24, 0x9f, 0x42, 0x23, 0x2b,
	0xc2, 0xf3, 0x88, 0x22, 0xf3, 0xd6, 0x75, 0x0d, 0xdd, 0x9e, 0x99, 0x6b, 0x6f, 0x32, 0xd7, 0xde,
	0xd9, 0x64, 0xf0, 0x41, 0x3d, 0x2b, 0xc2, 0x63, 0x8a, 0x8c, 0x74, 0xa0, 0x76, 0x25, 0xe2, 0x22,
	0x61, 0x5e, 0x4d, 0xfb, 0x2b, 0x2d, 0x95, 0x5a, 0x46, 0xc7, 0x4c, 0x7a, 0x75, 0x93, 0x9a, 0x36,
	0x54, 0x3b, 0xb9, 0x94, 0xa9, 0xd7, 0x30, 0xed, 0x54, 0x6b, 0xb2, 0x65, 0x02, 0xeb, 0x36, 0x37,
	0x4d, 0x4e, 0x59, 0x11, 0x9e, 0xa9, 0x4e, 0x77, 0xa0, 0x26, 0x45, 0x91, 0x8f, 0x98, 0x07, 0xc6,
	0xb9, 0xb1, 0x94, 0x73, 0x2e, 0x65, 0xc1, 0xbc, 0x96, 0x71, 0xae, 0x0d, 0x8d, 0x46, 0x8a, 0x85,
	0xf4, 0xde, 0x29, 0xd1, 0xda, 0x22, 0x8f, 0xa1, 0x4e, 0x0b, 0xbc, 0x14, 0xb9, 0xf4, 0xee, 0xed,
	0x56, 0xf6, 0x5a, 0x07, 0x0f, 0x16, 0x0c, 0xe7, 0x50, 0xa3, 0x82, 0x09, 0xda, 0xff, 0xcd, 0x81,
	0x8d, 0xe7, 0xec, 0xda, 0x16, 0xd7, 0x93, 0x19, 0x71, 0x7d, 0xb8, 0xc0, 0xd1, 0x2c, 0x69, 0x9e,
	0xbe, 0x2e, 0xef, 0xd0, 0xd7, 0xac, 0x9e, 0xdc, 0xff, 0xa9, 0xa7, 0xbf, 0x1c, 0x68, 0x5b, 0xa8,
	0xaf, 0x32, 0x35, 0x61, 0x32, 0x9c, 0xa9, 0x63, 0x7f, 0xb9, 0x77, 0xc3, 0x9b, 0x57, 0xca, 0x2b,
	0xe7, 0x8e, 0x5a, 0x3a, 0xb7, 0x77, 0xc5, 0xbe, 0xb4, 0x24, 0x98, 0x73, 0x67, 0x0e, 0x56, 0xcd,
	0x62, 0x41, 0xa5, 0xaf, 0x5c, 0xd8, 0xbe, 0x03, 0x3b, 0xa3, 0x70, 0xe7, 0xbf, 0x28, 0xdc, 0x9d,
	0xaf, 0xf0, 0x8a, 0xad, 0x70, 0x5b, 0xcd, 0xd5, 0x45, 0x6a, 0x5e, 0x9f, 0x51, 0xf3, 0xad, 0x6e,
	0x6b, 0x8b, 0x74, 0x5b, 0x7f, 0x23, 0xdd, 0xfe, 0xe2, 0xce, 0x3c, 0x21, 0x03, 0x11, 0xc7, 0x6c,
	0xa4, 0xe5, 0xfb, 0x6c, 0x3a, 0x76, 0xe5, 0xef, 0xe3, 0xe5, 0x0d, 0xbf, 0xe5, 0xce, 0x19, 0x3d,
	0x79, 0x0c, 0xd5, 0x84, 0x21, 0x2d, 0xe7, 0xb7, 0xbd, 0xc0, 0xdd, 0x33, 0x66, 0x13, 0x15, 0xe1,
	0x2d, 0x3e, 0xaf, 0x14, 0xb6, 0x9e, 0x72, 0x89, 0x16, 0xf0, 0x84, 0xe6, 0x34, 0x61, 0xc8, 0x72,
	0xa9, 0x26, 0x31, 0x2a, 0x72, 0x29, 0x72, 0x9d, 0x50, 0x25, 0x28, 0x2d, 0x35, 0xea, 0x98, 0x27,
	0x1c, 0x75, 0x56, 0x95, 0xc0, 0x18, 0x0a, 0x7d, 0xc1, 0x63, 0x64, 0x79, 0xa9, 0x80, 0xd2, 0xf2,
	0x11, 0x6a, 0x66, 0x22, 0x64, 0x1b, 0x9a, 0x31, 0x95, 0x78, 0x9e, 0xd2, 0x64, 0x52, 0x63, 0x43,
	0x6d, 0x3c, 0xa7, 0x09, 0x23, 0x0f, 0x00, 0x2e, 0x78, 0x3e, 0x39, 0x35, 0xf5, 0x36, 0xf5, 0x8e,
	0x3e, 0xee, 0x42, 0x83, 0xa7, 0x1c, 0x39, 0x8d, 0x27, 0x0a, 0x9b, 0xda, 0xaa, 0x6d, 0x39, 0x4d,
	0x5f, 0x68, 0x81, 0x55, 0x02, 0xbd, 0xf6, 0x4f, 0xa1, 0xaa, 0x1a, 0x4d, 0x76, 0xa0, 0x95, 0xb2,
	0x97, 0x78, 0x3e, 0x53, 0x08, 0xa8, 0xad, 0xc1, 0x5d, 0xc5, 0xa8, 0x4f, 0x89, 0x40, 0x1a, 0xeb,
	0x58, 0x95, 0xc0, 0x18, 0x07, 0x3f, 0x56, 0x81, 0x58, 0xad, 0x3a, 0x65, 0xf9, 0x15, 0x1f, 0x31,
	0xf2, 0x1d, 0x6c, 0x7c, 0xc9, 0xec, 0x1e, 0x92, 0xf7, 0x97, 0x0f, 0x64, 0x18, 0x75, 0xfd, 0xe5,
	0x28, 0x7f, 0x8d, 0x7c, 0x0f, 0xed, 0x41, 0xce, 0x28, 0x32, 0x3b, 0xc0, 0x07, 0x2b, 0x3d, 0xb5,
	0x2b, 0x46, 0x18, 0x41, 0xdb, 0xbc, 0x0e, 0x76, 0x84, 0xbd, 0x55, 0x9f, 0x9f, 0x15, 0x83, 0x9c,
	0x42, 0xfb, 0x98, 0xc5, 0x6c, 0x36, 0xc8, 0x6a, 0x7d, 0xea, 0xfc, 0xeb, 0x5d, 0xfa, 0x42, 0xfd,
	0x51, 0xf9, 0x6b, 0x04, 0x61, 0xf3, 0x35, 0xf9, 0x4a, 0xf2, 0xd1, 0x02, 0x9f, 0x0b, 0x75, 0xde,
	0x7d, 0xf4, 0x26, 0x17, 0xdf, 0x5f, 0x3b, 0xfa, 0xc9, 0x81, 0x2d, 0x91, 0x8f, 0xe7, 0xb3, 0x8e,
	0x36, 0xed, 0x20, 0x2a, 0xe1, 0x13, 0xe7, 0xdb, 0x27, 0xd6, 0x5f, 0x9f, 0x66, 0x1d, 0x51, 0xc9,
	0xd4, 0x7f, 0xdf, 0x98, 0xa5, 0xba, 0xa8, 0xfe, 0xd4, 0x17, 0xcd, 0xb8, 0xec, 0x5b, 0xfe, 0x3e,
	0xb7, 0xd6, 0x7f, 0x3b, 0xce, 0xaf, 0x6e, 0xe3, 0x78, 0x38, 0x38, 0xfb, 0xe6, 0xf0, 0x64, 0x18,
	0xd6, 0x34, 0xf5, 0x93, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x57, 0xcb, 0xf2, 0xda, 0x0a,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublicationServiceClient is the client API for PublicationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicationServiceClient interface {
	// Retrieves publication by ID
	GetPublication(ctx context.Context, in *PublicationId, opts ...grpc.CallOption) (*Publication, error)
	// Create new publication
	CreatePublication(ctx context.Context, in *NewPublication, opts ...grpc.CallOption) (*Publication, error)
	// Update an existing publication
	UpdatePublication(ctx context.Context, in *PublicationUpdate, opts ...grpc.CallOption) (*Publication, error)
	// Delete an existing publication
	DeletePublication(ctx context.Context, in *PublicationId, opts ...grpc.CallOption) (*empty.Empty, error)
	// List all publications
	ListPublications(ctx context.Context, in *ListPublicationParameters, opts ...grpc.CallOption) (*PublicationCollection, error)
}

type publicationServiceClient struct {
	cc *grpc.ClientConn
}

func NewPublicationServiceClient(cc *grpc.ClientConn) PublicationServiceClient {
	return &publicationServiceClient{cc}
}

func (c *publicationServiceClient) GetPublication(ctx context.Context, in *PublicationId, opts ...grpc.CallOption) (*Publication, error) {
	out := new(Publication)
	err := c.cc.Invoke(ctx, "/dictybase.publication.PublicationService/GetPublication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicationServiceClient) CreatePublication(ctx context.Context, in *NewPublication, opts ...grpc.CallOption) (*Publication, error) {
	out := new(Publication)
	err := c.cc.Invoke(ctx, "/dictybase.publication.PublicationService/CreatePublication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicationServiceClient) UpdatePublication(ctx context.Context, in *PublicationUpdate, opts ...grpc.CallOption) (*Publication, error) {
	out := new(Publication)
	err := c.cc.Invoke(ctx, "/dictybase.publication.PublicationService/UpdatePublication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicationServiceClient) DeletePublication(ctx context.Context, in *PublicationId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/dictybase.publication.PublicationService/DeletePublication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicationServiceClient) ListPublications(ctx context.Context, in *ListPublicationParameters, opts ...grpc.CallOption) (*PublicationCollection, error) {
	out := new(PublicationCollection)
	err := c.cc.Invoke(ctx, "/dictybase.publication.PublicationService/ListPublications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicationServiceServer is the server API for PublicationService service.
type PublicationServiceServer interface {
	// Retrieves publication by ID
	GetPublication(context.Context, *PublicationId) (*Publication, error)
	// Create new publication
	CreatePublication(context.Context, *NewPublication) (*Publication, error)
	// Update an existing publication
	UpdatePublication(context.Context, *PublicationUpdate) (*Publication, error)
	// Delete an existing publication
	DeletePublication(context.Context, *PublicationId) (*empty.Empty, error)
	// List all publications
	ListPublications(context.Context, *ListPublicationParameters) (*PublicationCollection, error)
}

func RegisterPublicationServiceServer(s *grpc.Server, srv PublicationServiceServer) {
	s.RegisterService(&_PublicationService_serviceDesc, srv)
}

func _PublicationService_GetPublication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicationServiceServer).GetPublication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.publication.PublicationService/GetPublication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicationServiceServer).GetPublication(ctx, req.(*PublicationId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicationService_CreatePublication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPublication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicationServiceServer).CreatePublication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.publication.PublicationService/CreatePublication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicationServiceServer).CreatePublication(ctx, req.(*NewPublication))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicationService_UpdatePublication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicationUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicationServiceServer).UpdatePublication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.publication.PublicationService/UpdatePublication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicationServiceServer).UpdatePublication(ctx, req.(*PublicationUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicationService_DeletePublication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicationServiceServer).DeletePublication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.publication.PublicationService/DeletePublication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicationServiceServer).DeletePublication(ctx, req.(*PublicationId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicationService_ListPublications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPublicationParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicationServiceServer).ListPublications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.publication.PublicationService/ListPublications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicationServiceServer).ListPublications(ctx, req.(*ListPublicationParameters))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.publication.PublicationService",
	HandlerType: (*PublicationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPublication",
			Handler:    _PublicationService_GetPublication_Handler,
		},
		{
			MethodName: "CreatePublication",
			Handler:    _PublicationService_CreatePublication_Handler,
		},
		{
			MethodName: "UpdatePublication",
			Handler:    _PublicationService_UpdatePublication_Handler,
		},
		{
			MethodName: "DeletePublication",
			Handler:    _PublicationService_DeletePublication_Handler,
		},
		{
			MethodName: "ListPublications",
			Handler:    _PublicationService_ListPublications_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "publication.proto",
}
