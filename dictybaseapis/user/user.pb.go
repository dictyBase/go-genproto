// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user // import "github.com/dictyBase/go-genproto/dictybaseapis/user"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import jsonapi "github.com/dictyBase/go-genproto/dictybaseapis/api/jsonapi"
import any "github.com/golang/protobuf/ptypes/any"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import field_mask "google.golang.org/genproto/protobuf/field_mask"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpdateUserRequest struct {
	Data *UpdateUserRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	// Unique id, required
	Id int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// An optional mask specifying which fields to update.
	// Presence of this field allow partial updates.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{0}
}
func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(dst, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetData() *UpdateUserRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateUserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateUserRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type UpdateUserRequest_Data struct {
	Type                 string                     `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id                   int64                      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes           *UserAttributes            `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Relationships        *ExistingUserRelationships `protobuf:"bytes,4,opt,name=relationships" json:"relationships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UpdateUserRequest_Data) Reset()         { *m = UpdateUserRequest_Data{} }
func (m *UpdateUserRequest_Data) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_Data) ProtoMessage()    {}
func (*UpdateUserRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{0, 0}
}
func (m *UpdateUserRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_Data.Unmarshal(m, b)
}
func (m *UpdateUserRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_Data.Marshal(b, m, deterministic)
}
func (dst *UpdateUserRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_Data.Merge(dst, src)
}
func (m *UpdateUserRequest_Data) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_Data.Size(m)
}
func (m *UpdateUserRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_Data proto.InternalMessageInfo

func (m *UpdateUserRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UpdateUserRequest_Data) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateUserRequest_Data) GetAttributes() *UserAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *UpdateUserRequest_Data) GetRelationships() *ExistingUserRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

type CreateUserRequest struct {
	Data                 *CreateUserRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{1}
}
func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (dst *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(dst, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetData() *CreateUserRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The payload for new user
type CreateUserRequest_Data struct {
	Type                 string                `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Attributes           *UserAttributes       `protobuf:"bytes,2,opt,name=attributes" json:"attributes,omitempty"`
	Relationships        *NewUserRelationships `protobuf:"bytes,3,opt,name=relationships" json:"relationships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateUserRequest_Data) Reset()         { *m = CreateUserRequest_Data{} }
func (m *CreateUserRequest_Data) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest_Data) ProtoMessage()    {}
func (*CreateUserRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{1, 0}
}
func (m *CreateUserRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest_Data.Unmarshal(m, b)
}
func (m *CreateUserRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest_Data.Marshal(b, m, deterministic)
}
func (dst *CreateUserRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest_Data.Merge(dst, src)
}
func (m *CreateUserRequest_Data) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest_Data.Size(m)
}
func (m *CreateUserRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest_Data proto.InternalMessageInfo

func (m *CreateUserRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateUserRequest_Data) GetAttributes() *UserAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *CreateUserRequest_Data) GetRelationships() *NewUserRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

// A user resource.
type User struct {
	Data                 *UserData      `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Links                *jsonapi.Links `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	Included             []*any.Any     `protobuf:"bytes,3,rep,name=included" json:"included,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetData() *UserData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *User) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *User) GetIncluded() []*any.Any {
	if m != nil {
		return m.Included
	}
	return nil
}

// A user collection resource.
type UserCollection struct {
	Data                 []*UserData              `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Links                *jsonapi.PaginationLinks `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	Meta                 *jsonapi.Meta            `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
	Included             []*any.Any               `protobuf:"bytes,4,rep,name=included" json:"included,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UserCollection) Reset()         { *m = UserCollection{} }
func (m *UserCollection) String() string { return proto.CompactTextString(m) }
func (*UserCollection) ProtoMessage()    {}
func (*UserCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{3}
}
func (m *UserCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCollection.Unmarshal(m, b)
}
func (m *UserCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCollection.Marshal(b, m, deterministic)
}
func (dst *UserCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCollection.Merge(dst, src)
}
func (m *UserCollection) XXX_Size() int {
	return xxx_messageInfo_UserCollection.Size(m)
}
func (m *UserCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCollection.DiscardUnknown(m)
}

var xxx_messageInfo_UserCollection proto.InternalMessageInfo

func (m *UserCollection) GetData() []*UserData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UserCollection) GetLinks() *jsonapi.PaginationLinks {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *UserCollection) GetMeta() *jsonapi.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UserCollection) GetIncluded() []*any.Any {
	if m != nil {
		return m.Included
	}
	return nil
}

// A top level container for user data.
type UserData struct {
	// The resource name.
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Unique id.
	Id                   int64                      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes           *UserAttributes            `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Links                *jsonapi.Links             `protobuf:"bytes,4,opt,name=links" json:"links,omitempty"`
	Relationships        *ExistingUserRelationships `protobuf:"bytes,5,opt,name=relationships" json:"relationships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UserData) Reset()         { *m = UserData{} }
func (m *UserData) String() string { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()    {}
func (*UserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{4}
}
func (m *UserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserData.Unmarshal(m, b)
}
func (m *UserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserData.Marshal(b, m, deterministic)
}
func (dst *UserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserData.Merge(dst, src)
}
func (m *UserData) XXX_Size() int {
	return xxx_messageInfo_UserData.Size(m)
}
func (m *UserData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserData.DiscardUnknown(m)
}

var xxx_messageInfo_UserData proto.InternalMessageInfo

func (m *UserData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UserData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserData) GetAttributes() *UserAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *UserData) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *UserData) GetRelationships() *ExistingUserRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

// A container for user fields.
type UserAttributes struct {
	// First name.
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	// Last name.
	LastName string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	// Email.
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	// Organization in which the user belong.
	Organization string `protobuf:"bytes,4,opt,name=organization" json:"organization,omitempty"`
	// Group in which the user belong.
	GroupName string `protobuf:"bytes,5,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	// Address.
	FirstAddress string `protobuf:"bytes,6,opt,name=first_address,json=firstAddress" json:"first_address,omitempty"`
	// More address.
	SecondAddress string `protobuf:"bytes,7,opt,name=second_address,json=secondAddress" json:"second_address,omitempty"`
	// City.
	City string `protobuf:"bytes,8,opt,name=city" json:"city,omitempty"`
	// State.
	State string `protobuf:"bytes,9,opt,name=state" json:"state,omitempty"`
	// Zipcode.
	Zipcode string `protobuf:"bytes,10,opt,name=zipcode" json:"zipcode,omitempty"`
	// Country.
	Country string `protobuf:"bytes,11,opt,name=country" json:"country,omitempty"`
	// Phone no.
	Phone string `protobuf:"bytes,12,opt,name=phone" json:"phone,omitempty"`
	// Current status of user.
	IsActive bool `protobuf:"varint,13,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	// Timestamp for creation and update
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserAttributes) Reset()         { *m = UserAttributes{} }
func (m *UserAttributes) String() string { return proto.CompactTextString(m) }
func (*UserAttributes) ProtoMessage()    {}
func (*UserAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{5}
}
func (m *UserAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAttributes.Unmarshal(m, b)
}
func (m *UserAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAttributes.Marshal(b, m, deterministic)
}
func (dst *UserAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAttributes.Merge(dst, src)
}
func (m *UserAttributes) XXX_Size() int {
	return xxx_messageInfo_UserAttributes.Size(m)
}
func (m *UserAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_UserAttributes proto.InternalMessageInfo

func (m *UserAttributes) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UserAttributes) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UserAttributes) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserAttributes) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *UserAttributes) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *UserAttributes) GetFirstAddress() string {
	if m != nil {
		return m.FirstAddress
	}
	return ""
}

func (m *UserAttributes) GetSecondAddress() string {
	if m != nil {
		return m.SecondAddress
	}
	return ""
}

func (m *UserAttributes) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *UserAttributes) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *UserAttributes) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func (m *UserAttributes) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *UserAttributes) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserAttributes) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *UserAttributes) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *UserAttributes) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// The relationship definition for existing users.
type ExistingUserRelationships struct {
	Roles                *ExistingUserRelationships_Roles `protobuf:"bytes,1,opt,name=roles" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ExistingUserRelationships) Reset()         { *m = ExistingUserRelationships{} }
func (m *ExistingUserRelationships) String() string { return proto.CompactTextString(m) }
func (*ExistingUserRelationships) ProtoMessage()    {}
func (*ExistingUserRelationships) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{6}
}
func (m *ExistingUserRelationships) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingUserRelationships.Unmarshal(m, b)
}
func (m *ExistingUserRelationships) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingUserRelationships.Marshal(b, m, deterministic)
}
func (dst *ExistingUserRelationships) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingUserRelationships.Merge(dst, src)
}
func (m *ExistingUserRelationships) XXX_Size() int {
	return xxx_messageInfo_ExistingUserRelationships.Size(m)
}
func (m *ExistingUserRelationships) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingUserRelationships.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingUserRelationships proto.InternalMessageInfo

func (m *ExistingUserRelationships) GetRoles() *ExistingUserRelationships_Roles {
	if m != nil {
		return m.Roles
	}
	return nil
}

// Relationships with role resource.
type ExistingUserRelationships_Roles struct {
	// Http links with role resource.
	Links *jsonapi.Links `protobuf:"bytes,1,opt,name=links" json:"links,omitempty"`
	// A role [resource identifier object](http://jsonapi.org/format/#document-resource-identifier-objects).
	Data                 []*jsonapi.Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ExistingUserRelationships_Roles) Reset()         { *m = ExistingUserRelationships_Roles{} }
func (m *ExistingUserRelationships_Roles) String() string { return proto.CompactTextString(m) }
func (*ExistingUserRelationships_Roles) ProtoMessage()    {}
func (*ExistingUserRelationships_Roles) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{6, 0}
}
func (m *ExistingUserRelationships_Roles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingUserRelationships_Roles.Unmarshal(m, b)
}
func (m *ExistingUserRelationships_Roles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingUserRelationships_Roles.Marshal(b, m, deterministic)
}
func (dst *ExistingUserRelationships_Roles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingUserRelationships_Roles.Merge(dst, src)
}
func (m *ExistingUserRelationships_Roles) XXX_Size() int {
	return xxx_messageInfo_ExistingUserRelationships_Roles.Size(m)
}
func (m *ExistingUserRelationships_Roles) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingUserRelationships_Roles.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingUserRelationships_Roles proto.InternalMessageInfo

func (m *ExistingUserRelationships_Roles) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ExistingUserRelationships_Roles) GetData() []*jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The relationship definition for creating new users.
type NewUserRelationships struct {
	Roles                *NewUserRelationships_Roles `protobuf:"bytes,1,opt,name=roles" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NewUserRelationships) Reset()         { *m = NewUserRelationships{} }
func (m *NewUserRelationships) String() string { return proto.CompactTextString(m) }
func (*NewUserRelationships) ProtoMessage()    {}
func (*NewUserRelationships) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{7}
}
func (m *NewUserRelationships) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserRelationships.Unmarshal(m, b)
}
func (m *NewUserRelationships) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserRelationships.Marshal(b, m, deterministic)
}
func (dst *NewUserRelationships) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserRelationships.Merge(dst, src)
}
func (m *NewUserRelationships) XXX_Size() int {
	return xxx_messageInfo_NewUserRelationships.Size(m)
}
func (m *NewUserRelationships) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserRelationships.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserRelationships proto.InternalMessageInfo

func (m *NewUserRelationships) GetRoles() *NewUserRelationships_Roles {
	if m != nil {
		return m.Roles
	}
	return nil
}

// Relationships with role resource.
type NewUserRelationships_Roles struct {
	// A role [resource identifier object](http://jsonapi.org/format/#document-resource-identifier-objects).
	Data                 []*jsonapi.Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NewUserRelationships_Roles) Reset()         { *m = NewUserRelationships_Roles{} }
func (m *NewUserRelationships_Roles) String() string { return proto.CompactTextString(m) }
func (*NewUserRelationships_Roles) ProtoMessage()    {}
func (*NewUserRelationships_Roles) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{7, 0}
}
func (m *NewUserRelationships_Roles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserRelationships_Roles.Unmarshal(m, b)
}
func (m *NewUserRelationships_Roles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserRelationships_Roles.Marshal(b, m, deterministic)
}
func (dst *NewUserRelationships_Roles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserRelationships_Roles.Merge(dst, src)
}
func (m *NewUserRelationships_Roles) XXX_Size() int {
	return xxx_messageInfo_NewUserRelationships_Roles.Size(m)
}
func (m *NewUserRelationships_Roles) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserRelationships_Roles.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserRelationships_Roles proto.InternalMessageInfo

func (m *NewUserRelationships_Roles) GetData() []*jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateRoleRequest struct {
	Data *UpdateRoleRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	// Unique id, required
	Id int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// An optional mask specifying which fields to update.
	// Presence of this field allow partial updates.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRoleRequest) Reset()         { *m = UpdateRoleRequest{} }
func (m *UpdateRoleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRoleRequest) ProtoMessage()    {}
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{8}
}
func (m *UpdateRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRoleRequest.Unmarshal(m, b)
}
func (m *UpdateRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRoleRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRoleRequest.Merge(dst, src)
}
func (m *UpdateRoleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRoleRequest.Size(m)
}
func (m *UpdateRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRoleRequest proto.InternalMessageInfo

func (m *UpdateRoleRequest) GetData() *UpdateRoleRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateRoleRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRoleRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type UpdateRoleRequest_Data struct {
	Type                 string                     `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id                   int64                      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes           *RoleAttributes            `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Relationships        *ExistingRoleRelationships `protobuf:"bytes,4,opt,name=relationships" json:"relationships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UpdateRoleRequest_Data) Reset()         { *m = UpdateRoleRequest_Data{} }
func (m *UpdateRoleRequest_Data) String() string { return proto.CompactTextString(m) }
func (*UpdateRoleRequest_Data) ProtoMessage()    {}
func (*UpdateRoleRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{8, 0}
}
func (m *UpdateRoleRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRoleRequest_Data.Unmarshal(m, b)
}
func (m *UpdateRoleRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRoleRequest_Data.Marshal(b, m, deterministic)
}
func (dst *UpdateRoleRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRoleRequest_Data.Merge(dst, src)
}
func (m *UpdateRoleRequest_Data) XXX_Size() int {
	return xxx_messageInfo_UpdateRoleRequest_Data.Size(m)
}
func (m *UpdateRoleRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRoleRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRoleRequest_Data proto.InternalMessageInfo

func (m *UpdateRoleRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UpdateRoleRequest_Data) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRoleRequest_Data) GetAttributes() *RoleAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *UpdateRoleRequest_Data) GetRelationships() *ExistingRoleRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

type CreateRoleRequest struct {
	Data                 *CreateRoleRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateRoleRequest) Reset()         { *m = CreateRoleRequest{} }
func (m *CreateRoleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRoleRequest) ProtoMessage()    {}
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{9}
}
func (m *CreateRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoleRequest.Unmarshal(m, b)
}
func (m *CreateRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoleRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoleRequest.Merge(dst, src)
}
func (m *CreateRoleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRoleRequest.Size(m)
}
func (m *CreateRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoleRequest proto.InternalMessageInfo

func (m *CreateRoleRequest) GetData() *CreateRoleRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The payload for new role
type CreateRoleRequest_Data struct {
	Type                 string                `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Attributes           *RoleAttributes       `protobuf:"bytes,2,opt,name=attributes" json:"attributes,omitempty"`
	Relationships        *NewRoleRelationships `protobuf:"bytes,3,opt,name=relationships" json:"relationships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateRoleRequest_Data) Reset()         { *m = CreateRoleRequest_Data{} }
func (m *CreateRoleRequest_Data) String() string { return proto.CompactTextString(m) }
func (*CreateRoleRequest_Data) ProtoMessage()    {}
func (*CreateRoleRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{9, 0}
}
func (m *CreateRoleRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoleRequest_Data.Unmarshal(m, b)
}
func (m *CreateRoleRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoleRequest_Data.Marshal(b, m, deterministic)
}
func (dst *CreateRoleRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoleRequest_Data.Merge(dst, src)
}
func (m *CreateRoleRequest_Data) XXX_Size() int {
	return xxx_messageInfo_CreateRoleRequest_Data.Size(m)
}
func (m *CreateRoleRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoleRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoleRequest_Data proto.InternalMessageInfo

func (m *CreateRoleRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateRoleRequest_Data) GetAttributes() *RoleAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *CreateRoleRequest_Data) GetRelationships() *NewRoleRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

// A definition for managing user roles.
type Role struct {
	Data                 *RoleData      `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Links                *jsonapi.Links `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	Included             []*any.Any     `protobuf:"bytes,3,rep,name=included" json:"included,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{10}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (dst *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(dst, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetData() *RoleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Role) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Role) GetIncluded() []*any.Any {
	if m != nil {
		return m.Included
	}
	return nil
}

// A role collection definition.
type RoleCollection struct {
	Data                 []*RoleData    `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Links                *jsonapi.Links `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	Included             []*any.Any     `protobuf:"bytes,3,rep,name=included" json:"included,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RoleCollection) Reset()         { *m = RoleCollection{} }
func (m *RoleCollection) String() string { return proto.CompactTextString(m) }
func (*RoleCollection) ProtoMessage()    {}
func (*RoleCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{11}
}
func (m *RoleCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleCollection.Unmarshal(m, b)
}
func (m *RoleCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleCollection.Marshal(b, m, deterministic)
}
func (dst *RoleCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleCollection.Merge(dst, src)
}
func (m *RoleCollection) XXX_Size() int {
	return xxx_messageInfo_RoleCollection.Size(m)
}
func (m *RoleCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleCollection.DiscardUnknown(m)
}

var xxx_messageInfo_RoleCollection proto.InternalMessageInfo

func (m *RoleCollection) GetData() []*RoleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RoleCollection) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *RoleCollection) GetIncluded() []*any.Any {
	if m != nil {
		return m.Included
	}
	return nil
}

// A top level container for role data.
type RoleData struct {
	Type                 string                     `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id                   int64                      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes           *RoleAttributes            `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Links                *jsonapi.Links             `protobuf:"bytes,4,opt,name=links" json:"links,omitempty"`
	Relationships        *ExistingRoleRelationships `protobuf:"bytes,5,opt,name=relationships" json:"relationships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RoleData) Reset()         { *m = RoleData{} }
func (m *RoleData) String() string { return proto.CompactTextString(m) }
func (*RoleData) ProtoMessage()    {}
func (*RoleData) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{12}
}
func (m *RoleData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleData.Unmarshal(m, b)
}
func (m *RoleData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleData.Marshal(b, m, deterministic)
}
func (dst *RoleData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleData.Merge(dst, src)
}
func (m *RoleData) XXX_Size() int {
	return xxx_messageInfo_RoleData.Size(m)
}
func (m *RoleData) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleData.DiscardUnknown(m)
}

var xxx_messageInfo_RoleData proto.InternalMessageInfo

func (m *RoleData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RoleData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoleData) GetAttributes() *RoleAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *RoleData) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *RoleData) GetRelationships() *ExistingRoleRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

// A container for role fields.
type RoleAttributes struct {
	Role        string `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Timestamp for creation and update
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RoleAttributes) Reset()         { *m = RoleAttributes{} }
func (m *RoleAttributes) String() string { return proto.CompactTextString(m) }
func (*RoleAttributes) ProtoMessage()    {}
func (*RoleAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{13}
}
func (m *RoleAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleAttributes.Unmarshal(m, b)
}
func (m *RoleAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleAttributes.Marshal(b, m, deterministic)
}
func (dst *RoleAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleAttributes.Merge(dst, src)
}
func (m *RoleAttributes) XXX_Size() int {
	return xxx_messageInfo_RoleAttributes.Size(m)
}
func (m *RoleAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_RoleAttributes proto.InternalMessageInfo

func (m *RoleAttributes) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *RoleAttributes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RoleAttributes) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RoleAttributes) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// The relationship definition for existing roles.
type ExistingRoleRelationships struct {
	Permissions          *ExistingRoleRelationships_Permissions `protobuf:"bytes,1,opt,name=permissions" json:"permissions,omitempty"`
	Users                *ExistingRoleRelationships_Users       `protobuf:"bytes,2,opt,name=users" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ExistingRoleRelationships) Reset()         { *m = ExistingRoleRelationships{} }
func (m *ExistingRoleRelationships) String() string { return proto.CompactTextString(m) }
func (*ExistingRoleRelationships) ProtoMessage()    {}
func (*ExistingRoleRelationships) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{14}
}
func (m *ExistingRoleRelationships) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingRoleRelationships.Unmarshal(m, b)
}
func (m *ExistingRoleRelationships) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingRoleRelationships.Marshal(b, m, deterministic)
}
func (dst *ExistingRoleRelationships) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingRoleRelationships.Merge(dst, src)
}
func (m *ExistingRoleRelationships) XXX_Size() int {
	return xxx_messageInfo_ExistingRoleRelationships.Size(m)
}
func (m *ExistingRoleRelationships) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingRoleRelationships.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingRoleRelationships proto.InternalMessageInfo

func (m *ExistingRoleRelationships) GetPermissions() *ExistingRoleRelationships_Permissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *ExistingRoleRelationships) GetUsers() *ExistingRoleRelationships_Users {
	if m != nil {
		return m.Users
	}
	return nil
}

// Relationships with permission definition.
type ExistingRoleRelationships_Permissions struct {
	Links                *jsonapi.Links  `protobuf:"bytes,1,opt,name=links" json:"links,omitempty"`
	Data                 []*jsonapi.Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ExistingRoleRelationships_Permissions) Reset()         { *m = ExistingRoleRelationships_Permissions{} }
func (m *ExistingRoleRelationships_Permissions) String() string { return proto.CompactTextString(m) }
func (*ExistingRoleRelationships_Permissions) ProtoMessage()    {}
func (*ExistingRoleRelationships_Permissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{14, 0}
}
func (m *ExistingRoleRelationships_Permissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingRoleRelationships_Permissions.Unmarshal(m, b)
}
func (m *ExistingRoleRelationships_Permissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingRoleRelationships_Permissions.Marshal(b, m, deterministic)
}
func (dst *ExistingRoleRelationships_Permissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingRoleRelationships_Permissions.Merge(dst, src)
}
func (m *ExistingRoleRelationships_Permissions) XXX_Size() int {
	return xxx_messageInfo_ExistingRoleRelationships_Permissions.Size(m)
}
func (m *ExistingRoleRelationships_Permissions) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingRoleRelationships_Permissions.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingRoleRelationships_Permissions proto.InternalMessageInfo

func (m *ExistingRoleRelationships_Permissions) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ExistingRoleRelationships_Permissions) GetData() []*jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// Relationships with user definition.
type ExistingRoleRelationships_Users struct {
	Links                *jsonapi.Links  `protobuf:"bytes,1,opt,name=links" json:"links,omitempty"`
	Data                 []*jsonapi.Data `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ExistingRoleRelationships_Users) Reset()         { *m = ExistingRoleRelationships_Users{} }
func (m *ExistingRoleRelationships_Users) String() string { return proto.CompactTextString(m) }
func (*ExistingRoleRelationships_Users) ProtoMessage()    {}
func (*ExistingRoleRelationships_Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{14, 1}
}
func (m *ExistingRoleRelationships_Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingRoleRelationships_Users.Unmarshal(m, b)
}
func (m *ExistingRoleRelationships_Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingRoleRelationships_Users.Marshal(b, m, deterministic)
}
func (dst *ExistingRoleRelationships_Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingRoleRelationships_Users.Merge(dst, src)
}
func (m *ExistingRoleRelationships_Users) XXX_Size() int {
	return xxx_messageInfo_ExistingRoleRelationships_Users.Size(m)
}
func (m *ExistingRoleRelationships_Users) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingRoleRelationships_Users.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingRoleRelationships_Users proto.InternalMessageInfo

func (m *ExistingRoleRelationships_Users) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ExistingRoleRelationships_Users) GetData() []*jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The relationship definition for creating new roles.
type NewRoleRelationships struct {
	Permissions          *NewRoleRelationships_Permissions `protobuf:"bytes,1,opt,name=permissions" json:"permissions,omitempty"`
	Users                *NewRoleRelationships_Users       `protobuf:"bytes,2,opt,name=users" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *NewRoleRelationships) Reset()         { *m = NewRoleRelationships{} }
func (m *NewRoleRelationships) String() string { return proto.CompactTextString(m) }
func (*NewRoleRelationships) ProtoMessage()    {}
func (*NewRoleRelationships) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{15}
}
func (m *NewRoleRelationships) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRoleRelationships.Unmarshal(m, b)
}
func (m *NewRoleRelationships) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRoleRelationships.Marshal(b, m, deterministic)
}
func (dst *NewRoleRelationships) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoleRelationships.Merge(dst, src)
}
func (m *NewRoleRelationships) XXX_Size() int {
	return xxx_messageInfo_NewRoleRelationships.Size(m)
}
func (m *NewRoleRelationships) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoleRelationships.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoleRelationships proto.InternalMessageInfo

func (m *NewRoleRelationships) GetPermissions() *NewRoleRelationships_Permissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *NewRoleRelationships) GetUsers() *NewRoleRelationships_Users {
	if m != nil {
		return m.Users
	}
	return nil
}

type NewRoleRelationships_Permissions struct {
	Data                 []*jsonapi.Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NewRoleRelationships_Permissions) Reset()         { *m = NewRoleRelationships_Permissions{} }
func (m *NewRoleRelationships_Permissions) String() string { return proto.CompactTextString(m) }
func (*NewRoleRelationships_Permissions) ProtoMessage()    {}
func (*NewRoleRelationships_Permissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{15, 0}
}
func (m *NewRoleRelationships_Permissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRoleRelationships_Permissions.Unmarshal(m, b)
}
func (m *NewRoleRelationships_Permissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRoleRelationships_Permissions.Marshal(b, m, deterministic)
}
func (dst *NewRoleRelationships_Permissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoleRelationships_Permissions.Merge(dst, src)
}
func (m *NewRoleRelationships_Permissions) XXX_Size() int {
	return xxx_messageInfo_NewRoleRelationships_Permissions.Size(m)
}
func (m *NewRoleRelationships_Permissions) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoleRelationships_Permissions.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoleRelationships_Permissions proto.InternalMessageInfo

func (m *NewRoleRelationships_Permissions) GetData() []*jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type NewRoleRelationships_Users struct {
	Data                 []*jsonapi.Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NewRoleRelationships_Users) Reset()         { *m = NewRoleRelationships_Users{} }
func (m *NewRoleRelationships_Users) String() string { return proto.CompactTextString(m) }
func (*NewRoleRelationships_Users) ProtoMessage()    {}
func (*NewRoleRelationships_Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{15, 1}
}
func (m *NewRoleRelationships_Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRoleRelationships_Users.Unmarshal(m, b)
}
func (m *NewRoleRelationships_Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRoleRelationships_Users.Marshal(b, m, deterministic)
}
func (dst *NewRoleRelationships_Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoleRelationships_Users.Merge(dst, src)
}
func (m *NewRoleRelationships_Users) XXX_Size() int {
	return xxx_messageInfo_NewRoleRelationships_Users.Size(m)
}
func (m *NewRoleRelationships_Users) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoleRelationships_Users.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoleRelationships_Users proto.InternalMessageInfo

func (m *NewRoleRelationships_Users) GetData() []*jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdatePermissionRequest struct {
	Data *UpdatePermissionRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	// Unique id, required
	Id int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	// An optional mask specifying which fields to update.
	// Presence of this field allow partial updates.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdatePermissionRequest) Reset()         { *m = UpdatePermissionRequest{} }
func (m *UpdatePermissionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePermissionRequest) ProtoMessage()    {}
func (*UpdatePermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{16}
}
func (m *UpdatePermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePermissionRequest.Unmarshal(m, b)
}
func (m *UpdatePermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePermissionRequest.Marshal(b, m, deterministic)
}
func (dst *UpdatePermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePermissionRequest.Merge(dst, src)
}
func (m *UpdatePermissionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePermissionRequest.Size(m)
}
func (m *UpdatePermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePermissionRequest proto.InternalMessageInfo

func (m *UpdatePermissionRequest) GetData() *UpdatePermissionRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdatePermissionRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePermissionRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type UpdatePermissionRequest_Data struct {
	Type                 string                `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id                   int64                 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes           *PermissionAttributes `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdatePermissionRequest_Data) Reset()         { *m = UpdatePermissionRequest_Data{} }
func (m *UpdatePermissionRequest_Data) String() string { return proto.CompactTextString(m) }
func (*UpdatePermissionRequest_Data) ProtoMessage()    {}
func (*UpdatePermissionRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{16, 0}
}
func (m *UpdatePermissionRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePermissionRequest_Data.Unmarshal(m, b)
}
func (m *UpdatePermissionRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePermissionRequest_Data.Marshal(b, m, deterministic)
}
func (dst *UpdatePermissionRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePermissionRequest_Data.Merge(dst, src)
}
func (m *UpdatePermissionRequest_Data) XXX_Size() int {
	return xxx_messageInfo_UpdatePermissionRequest_Data.Size(m)
}
func (m *UpdatePermissionRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePermissionRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePermissionRequest_Data proto.InternalMessageInfo

func (m *UpdatePermissionRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UpdatePermissionRequest_Data) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePermissionRequest_Data) GetAttributes() *PermissionAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type CreatePermissionRequest struct {
	Data                 *CreatePermissionRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CreatePermissionRequest) Reset()         { *m = CreatePermissionRequest{} }
func (m *CreatePermissionRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePermissionRequest) ProtoMessage()    {}
func (*CreatePermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{17}
}
func (m *CreatePermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePermissionRequest.Unmarshal(m, b)
}
func (m *CreatePermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePermissionRequest.Marshal(b, m, deterministic)
}
func (dst *CreatePermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePermissionRequest.Merge(dst, src)
}
func (m *CreatePermissionRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePermissionRequest.Size(m)
}
func (m *CreatePermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePermissionRequest proto.InternalMessageInfo

func (m *CreatePermissionRequest) GetData() *CreatePermissionRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The payload for new user
type CreatePermissionRequest_Data struct {
	Type                 string                `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Attributes           *PermissionAttributes `protobuf:"bytes,2,opt,name=attributes" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreatePermissionRequest_Data) Reset()         { *m = CreatePermissionRequest_Data{} }
func (m *CreatePermissionRequest_Data) String() string { return proto.CompactTextString(m) }
func (*CreatePermissionRequest_Data) ProtoMessage()    {}
func (*CreatePermissionRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{17, 0}
}
func (m *CreatePermissionRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePermissionRequest_Data.Unmarshal(m, b)
}
func (m *CreatePermissionRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePermissionRequest_Data.Marshal(b, m, deterministic)
}
func (dst *CreatePermissionRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePermissionRequest_Data.Merge(dst, src)
}
func (m *CreatePermissionRequest_Data) XXX_Size() int {
	return xxx_messageInfo_CreatePermissionRequest_Data.Size(m)
}
func (m *CreatePermissionRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePermissionRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePermissionRequest_Data proto.InternalMessageInfo

func (m *CreatePermissionRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreatePermissionRequest_Data) GetAttributes() *PermissionAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// A resource for managing user permission.
type Permission struct {
	Data                 *PermissionData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Links                *jsonapi.Links  `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{18}
}
func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (dst *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(dst, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetData() *PermissionData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Permission) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

// A permission collection resource.
type PermissionCollection struct {
	Data                 []*PermissionData `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Links                *jsonapi.Links    `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PermissionCollection) Reset()         { *m = PermissionCollection{} }
func (m *PermissionCollection) String() string { return proto.CompactTextString(m) }
func (*PermissionCollection) ProtoMessage()    {}
func (*PermissionCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{19}
}
func (m *PermissionCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionCollection.Unmarshal(m, b)
}
func (m *PermissionCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionCollection.Marshal(b, m, deterministic)
}
func (dst *PermissionCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionCollection.Merge(dst, src)
}
func (m *PermissionCollection) XXX_Size() int {
	return xxx_messageInfo_PermissionCollection.Size(m)
}
func (m *PermissionCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionCollection.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionCollection proto.InternalMessageInfo

func (m *PermissionCollection) GetData() []*PermissionData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PermissionCollection) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

// A top level container for permission data.
type PermissionData struct {
	// The resource name.
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Unique id.
	Id                   int64                 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes           *PermissionAttributes `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Links                *jsonapi.Links        `protobuf:"bytes,4,opt,name=links" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PermissionData) Reset()         { *m = PermissionData{} }
func (m *PermissionData) String() string { return proto.CompactTextString(m) }
func (*PermissionData) ProtoMessage()    {}
func (*PermissionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{20}
}
func (m *PermissionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionData.Unmarshal(m, b)
}
func (m *PermissionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionData.Marshal(b, m, deterministic)
}
func (dst *PermissionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionData.Merge(dst, src)
}
func (m *PermissionData) XXX_Size() int {
	return xxx_messageInfo_PermissionData.Size(m)
}
func (m *PermissionData) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionData.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionData proto.InternalMessageInfo

func (m *PermissionData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PermissionData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PermissionData) GetAttributes() *PermissionAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *PermissionData) GetLinks() *jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

// A container for permission fields.
type PermissionAttributes struct {
	// Kind of permission, for example read, write, admin etc.
	Permission string `protobuf:"bytes,1,opt,name=permission" json:"permission,omitempty"`
	// Brief description of the type of permission.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Timestamp for creation and update
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	// Resource(object) on which this permission is granted
	Resource             string   `protobuf:"bytes,5,opt,name=resource" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionAttributes) Reset()         { *m = PermissionAttributes{} }
func (m *PermissionAttributes) String() string { return proto.CompactTextString(m) }
func (*PermissionAttributes) ProtoMessage()    {}
func (*PermissionAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_3d9d20b2e3ba511e, []int{21}
}
func (m *PermissionAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionAttributes.Unmarshal(m, b)
}
func (m *PermissionAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionAttributes.Marshal(b, m, deterministic)
}
func (dst *PermissionAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionAttributes.Merge(dst, src)
}
func (m *PermissionAttributes) XXX_Size() int {
	return xxx_messageInfo_PermissionAttributes.Size(m)
}
func (m *PermissionAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionAttributes proto.InternalMessageInfo

func (m *PermissionAttributes) GetPermission() string {
	if m != nil {
		return m.Permission
	}
	return ""
}

func (m *PermissionAttributes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PermissionAttributes) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PermissionAttributes) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *PermissionAttributes) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func init() {
	proto.RegisterType((*UpdateUserRequest)(nil), "dictybase.user.UpdateUserRequest")
	proto.RegisterType((*UpdateUserRequest_Data)(nil), "dictybase.user.UpdateUserRequest.Data")
	proto.RegisterType((*CreateUserRequest)(nil), "dictybase.user.CreateUserRequest")
	proto.RegisterType((*CreateUserRequest_Data)(nil), "dictybase.user.CreateUserRequest.Data")
	proto.RegisterType((*User)(nil), "dictybase.user.User")
	proto.RegisterType((*UserCollection)(nil), "dictybase.user.UserCollection")
	proto.RegisterType((*UserData)(nil), "dictybase.user.UserData")
	proto.RegisterType((*UserAttributes)(nil), "dictybase.user.UserAttributes")
	proto.RegisterType((*ExistingUserRelationships)(nil), "dictybase.user.ExistingUserRelationships")
	proto.RegisterType((*ExistingUserRelationships_Roles)(nil), "dictybase.user.ExistingUserRelationships.Roles")
	proto.RegisterType((*NewUserRelationships)(nil), "dictybase.user.NewUserRelationships")
	proto.RegisterType((*NewUserRelationships_Roles)(nil), "dictybase.user.NewUserRelationships.Roles")
	proto.RegisterType((*UpdateRoleRequest)(nil), "dictybase.user.UpdateRoleRequest")
	proto.RegisterType((*UpdateRoleRequest_Data)(nil), "dictybase.user.UpdateRoleRequest.Data")
	proto.RegisterType((*CreateRoleRequest)(nil), "dictybase.user.CreateRoleRequest")
	proto.RegisterType((*CreateRoleRequest_Data)(nil), "dictybase.user.CreateRoleRequest.Data")
	proto.RegisterType((*Role)(nil), "dictybase.user.Role")
	proto.RegisterType((*RoleCollection)(nil), "dictybase.user.RoleCollection")
	proto.RegisterType((*RoleData)(nil), "dictybase.user.RoleData")
	proto.RegisterType((*RoleAttributes)(nil), "dictybase.user.RoleAttributes")
	proto.RegisterType((*ExistingRoleRelationships)(nil), "dictybase.user.ExistingRoleRelationships")
	proto.RegisterType((*ExistingRoleRelationships_Permissions)(nil), "dictybase.user.ExistingRoleRelationships.Permissions")
	proto.RegisterType((*ExistingRoleRelationships_Users)(nil), "dictybase.user.ExistingRoleRelationships.Users")
	proto.RegisterType((*NewRoleRelationships)(nil), "dictybase.user.NewRoleRelationships")
	proto.RegisterType((*NewRoleRelationships_Permissions)(nil), "dictybase.user.NewRoleRelationships.Permissions")
	proto.RegisterType((*NewRoleRelationships_Users)(nil), "dictybase.user.NewRoleRelationships.Users")
	proto.RegisterType((*UpdatePermissionRequest)(nil), "dictybase.user.UpdatePermissionRequest")
	proto.RegisterType((*UpdatePermissionRequest_Data)(nil), "dictybase.user.UpdatePermissionRequest.Data")
	proto.RegisterType((*CreatePermissionRequest)(nil), "dictybase.user.CreatePermissionRequest")
	proto.RegisterType((*CreatePermissionRequest_Data)(nil), "dictybase.user.CreatePermissionRequest.Data")
	proto.RegisterType((*Permission)(nil), "dictybase.user.Permission")
	proto.RegisterType((*PermissionCollection)(nil), "dictybase.user.PermissionCollection")
	proto.RegisterType((*PermissionData)(nil), "dictybase.user.PermissionData")
	proto.RegisterType((*PermissionAttributes)(nil), "dictybase.user.PermissionAttributes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	// Check the existence of user
	ExistUser(ctx context.Context, in *jsonapi.IdRequest, opts ...grpc.CallOption) (*jsonapi.ExistResponse, error)
	// Gets the specified user
	GetUser(ctx context.Context, in *jsonapi.GetRequest, opts ...grpc.CallOption) (*User, error)
	// Gets the specified user by their email id
	GetUserByEmail(ctx context.Context, in *jsonapi.GetEmailRequest, opts ...grpc.CallOption) (*User, error)
	// Gets all related roles
	GetRelatedRoles(ctx context.Context, in *jsonapi.RelationshipRequest, opts ...grpc.CallOption) (*RoleCollection, error)
	// List all users. Only *roles* relationship is allowed for inclusion.
	ListUsers(ctx context.Context, in *jsonapi.ListRequest, opts ...grpc.CallOption) (*UserCollection, error)
	// Create an user
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	// Create relationship links with roles
	CreateRoleRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update an user
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	// Update relationship links with roles
	UpdateRoleRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete an user
	DeleteUser(ctx context.Context, in *jsonapi.DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete relationship links with roles
	DeleteRoleRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
	// Basic health check that always return success
	Healthz(ctx context.Context, in *jsonapi.HealthzIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) ExistUser(ctx context.Context, in *jsonapi.IdRequest, opts ...grpc.CallOption) (*jsonapi.ExistResponse, error) {
	out := new(jsonapi.ExistResponse)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/ExistUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *jsonapi.GetRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByEmail(ctx context.Context, in *jsonapi.GetEmailRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/GetUserByEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetRelatedRoles(ctx context.Context, in *jsonapi.RelationshipRequest, opts ...grpc.CallOption) (*RoleCollection, error) {
	out := new(RoleCollection)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/GetRelatedRoles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUsers(ctx context.Context, in *jsonapi.ListRequest, opts ...grpc.CallOption) (*UserCollection, error) {
	out := new(UserCollection)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/ListUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateRoleRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/CreateRoleRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateRoleRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/UpdateRoleRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *jsonapi.DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteRoleRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/DeleteRoleRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Healthz(ctx context.Context, in *jsonapi.HealthzIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.UserService/Healthz", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	// Check the existence of user
	ExistUser(context.Context, *jsonapi.IdRequest) (*jsonapi.ExistResponse, error)
	// Gets the specified user
	GetUser(context.Context, *jsonapi.GetRequest) (*User, error)
	// Gets the specified user by their email id
	GetUserByEmail(context.Context, *jsonapi.GetEmailRequest) (*User, error)
	// Gets all related roles
	GetRelatedRoles(context.Context, *jsonapi.RelationshipRequest) (*RoleCollection, error)
	// List all users. Only *roles* relationship is allowed for inclusion.
	ListUsers(context.Context, *jsonapi.ListRequest) (*UserCollection, error)
	// Create an user
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	// Create relationship links with roles
	CreateRoleRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
	// Update an user
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	// Update relationship links with roles
	UpdateRoleRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
	// Delete an user
	DeleteUser(context.Context, *jsonapi.DeleteRequest) (*empty.Empty, error)
	// Delete relationship links with roles
	DeleteRoleRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
	// Basic health check that always return success
	Healthz(context.Context, *jsonapi.HealthzIdRequest) (*empty.Empty, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_ExistUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ExistUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/ExistUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ExistUser(ctx, req.(*jsonapi.IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*jsonapi.GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.GetEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/GetUserByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByEmail(ctx, req.(*jsonapi.GetEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetRelatedRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.RelationshipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetRelatedRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/GetRelatedRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetRelatedRoles(ctx, req.(*jsonapi.RelationshipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListUsers(ctx, req.(*jsonapi.ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateRoleRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateRoleRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/CreateRoleRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateRoleRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateRoleRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateRoleRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/UpdateRoleRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateRoleRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*jsonapi.DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteRoleRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteRoleRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/DeleteRoleRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteRoleRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Healthz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.HealthzIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Healthz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.UserService/Healthz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Healthz(ctx, req.(*jsonapi.HealthzIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExistUser",
			Handler:    _UserService_ExistUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "GetUserByEmail",
			Handler:    _UserService_GetUserByEmail_Handler,
		},
		{
			MethodName: "GetRelatedRoles",
			Handler:    _UserService_GetRelatedRoles_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _UserService_ListUsers_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "CreateRoleRelationship",
			Handler:    _UserService_CreateRoleRelationship_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "UpdateRoleRelationship",
			Handler:    _UserService_UpdateRoleRelationship_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
		{
			MethodName: "DeleteRoleRelationship",
			Handler:    _UserService_DeleteRoleRelationship_Handler,
		},
		{
			MethodName: "Healthz",
			Handler:    _UserService_Healthz_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

// Client API for RoleService service

type RoleServiceClient interface {
	// Gets the specified role
	GetRole(ctx context.Context, in *jsonapi.GetRequest, opts ...grpc.CallOption) (*Role, error)
	// Gets all related users
	GetRelatedUsers(ctx context.Context, in *jsonapi.RelationshipRequestWithPagination, opts ...grpc.CallOption) (*UserCollection, error)
	// Gets all related permissions
	GetRelatedPermissions(ctx context.Context, in *jsonapi.RelationshipRequest, opts ...grpc.CallOption) (*PermissionCollection, error)
	// List all roles. Both *users* and *permissions* relationships are allowed in the include parameter.
	ListRoles(ctx context.Context, in *jsonapi.SimpleListRequest, opts ...grpc.CallOption) (*RoleCollection, error)
	// Create an role
	CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...grpc.CallOption) (*Role, error)
	// Create user relationship with role
	CreateUserRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*jsonapi.IdResponse, error)
	// Create permission relationship with role
	CreatePermissionRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update an role
	UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...grpc.CallOption) (*Role, error)
	// Update existing user relationship with role
	UpdateUserRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update existing permission relationship with role
	UpdatePermissionRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete an role
	DeleteRole(ctx context.Context, in *jsonapi.DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete existing user relationship with role
	DeleteUserRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete existing permission relationship with role
	DeletePermissionRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error)
}

type roleServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoleServiceClient(cc *grpc.ClientConn) RoleServiceClient {
	return &roleServiceClient{cc}
}

func (c *roleServiceClient) GetRole(ctx context.Context, in *jsonapi.GetRequest, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/GetRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) GetRelatedUsers(ctx context.Context, in *jsonapi.RelationshipRequestWithPagination, opts ...grpc.CallOption) (*UserCollection, error) {
	out := new(UserCollection)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/GetRelatedUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) GetRelatedPermissions(ctx context.Context, in *jsonapi.RelationshipRequest, opts ...grpc.CallOption) (*PermissionCollection, error) {
	out := new(PermissionCollection)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/GetRelatedPermissions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) ListRoles(ctx context.Context, in *jsonapi.SimpleListRequest, opts ...grpc.CallOption) (*RoleCollection, error) {
	out := new(RoleCollection)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/ListRoles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/CreateRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) CreateUserRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*jsonapi.IdResponse, error) {
	out := new(jsonapi.IdResponse)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/CreateUserRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) CreatePermissionRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/CreatePermissionRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/UpdateRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateUserRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/UpdateUserRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdatePermissionRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/UpdatePermissionRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRole(ctx context.Context, in *jsonapi.DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/DeleteRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteUserRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/DeleteUserRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeletePermissionRelationship(ctx context.Context, in *jsonapi.DataCollection, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/DeletePermissionRelationship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoleService service

type RoleServiceServer interface {
	// Gets the specified role
	GetRole(context.Context, *jsonapi.GetRequest) (*Role, error)
	// Gets all related users
	GetRelatedUsers(context.Context, *jsonapi.RelationshipRequestWithPagination) (*UserCollection, error)
	// Gets all related permissions
	GetRelatedPermissions(context.Context, *jsonapi.RelationshipRequest) (*PermissionCollection, error)
	// List all roles. Both *users* and *permissions* relationships are allowed in the include parameter.
	ListRoles(context.Context, *jsonapi.SimpleListRequest) (*RoleCollection, error)
	// Create an role
	CreateRole(context.Context, *CreateRoleRequest) (*Role, error)
	// Create user relationship with role
	CreateUserRelationship(context.Context, *jsonapi.DataCollection) (*jsonapi.IdResponse, error)
	// Create permission relationship with role
	CreatePermissionRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
	// Update an role
	UpdateRole(context.Context, *UpdateRoleRequest) (*Role, error)
	// Update existing user relationship with role
	UpdateUserRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
	// Update existing permission relationship with role
	UpdatePermissionRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
	// Delete an role
	DeleteRole(context.Context, *jsonapi.DeleteRequest) (*empty.Empty, error)
	// Delete existing user relationship with role
	DeleteUserRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
	// Delete existing permission relationship with role
	DeletePermissionRelationship(context.Context, *jsonapi.DataCollection) (*empty.Empty, error)
}

func RegisterRoleServiceServer(s *grpc.Server, srv RoleServiceServer) {
	s.RegisterService(&_RoleService_serviceDesc, srv)
}

func _RoleService_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetRole(ctx, req.(*jsonapi.GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_GetRelatedUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.RelationshipRequestWithPagination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetRelatedUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/GetRelatedUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetRelatedUsers(ctx, req.(*jsonapi.RelationshipRequestWithPagination))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_GetRelatedPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.RelationshipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetRelatedPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/GetRelatedPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetRelatedPermissions(ctx, req.(*jsonapi.RelationshipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_ListRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.SimpleListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).ListRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/ListRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).ListRoles(ctx, req.(*jsonapi.SimpleListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).CreateRole(ctx, req.(*CreateRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_CreateUserRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).CreateUserRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/CreateUserRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).CreateUserRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_CreatePermissionRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).CreatePermissionRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/CreatePermissionRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).CreatePermissionRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdateRole(ctx, req.(*UpdateRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdateUserRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdateUserRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/UpdateUserRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdateUserRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdatePermissionRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdatePermissionRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/UpdatePermissionRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdatePermissionRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteRole(ctx, req.(*jsonapi.DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteUserRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteUserRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/DeleteUserRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteUserRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeletePermissionRelationship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DataCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeletePermissionRelationship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/DeletePermissionRelationship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeletePermissionRelationship(ctx, req.(*jsonapi.DataCollection))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.user.RoleService",
	HandlerType: (*RoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRole",
			Handler:    _RoleService_GetRole_Handler,
		},
		{
			MethodName: "GetRelatedUsers",
			Handler:    _RoleService_GetRelatedUsers_Handler,
		},
		{
			MethodName: "GetRelatedPermissions",
			Handler:    _RoleService_GetRelatedPermissions_Handler,
		},
		{
			MethodName: "ListRoles",
			Handler:    _RoleService_ListRoles_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _RoleService_CreateRole_Handler,
		},
		{
			MethodName: "CreateUserRelationship",
			Handler:    _RoleService_CreateUserRelationship_Handler,
		},
		{
			MethodName: "CreatePermissionRelationship",
			Handler:    _RoleService_CreatePermissionRelationship_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _RoleService_UpdateRole_Handler,
		},
		{
			MethodName: "UpdateUserRelationship",
			Handler:    _RoleService_UpdateUserRelationship_Handler,
		},
		{
			MethodName: "UpdatePermissionRelationship",
			Handler:    _RoleService_UpdatePermissionRelationship_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _RoleService_DeleteRole_Handler,
		},
		{
			MethodName: "DeleteUserRelationship",
			Handler:    _RoleService_DeleteUserRelationship_Handler,
		},
		{
			MethodName: "DeletePermissionRelationship",
			Handler:    _RoleService_DeletePermissionRelationship_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

// Client API for PermissionService service

type PermissionServiceClient interface {
	// Gets the specified permission
	GetPermission(ctx context.Context, in *jsonapi.GetRequestWithFields, opts ...grpc.CallOption) (*Permission, error)
	// List all permissions
	ListPermissions(ctx context.Context, in *jsonapi.SimpleListRequest, opts ...grpc.CallOption) (*PermissionCollection, error)
	// Create an permission
	CreatePermission(ctx context.Context, in *CreatePermissionRequest, opts ...grpc.CallOption) (*Permission, error)
	// Update an permission
	UpdatePermission(ctx context.Context, in *UpdatePermissionRequest, opts ...grpc.CallOption) (*Permission, error)
	// Delete an permission
	DeletePermission(ctx context.Context, in *jsonapi.DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type permissionServiceClient struct {
	cc *grpc.ClientConn
}

func NewPermissionServiceClient(cc *grpc.ClientConn) PermissionServiceClient {
	return &permissionServiceClient{cc}
}

func (c *permissionServiceClient) GetPermission(ctx context.Context, in *jsonapi.GetRequestWithFields, opts ...grpc.CallOption) (*Permission, error) {
	out := new(Permission)
	err := grpc.Invoke(ctx, "/dictybase.user.PermissionService/GetPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) ListPermissions(ctx context.Context, in *jsonapi.SimpleListRequest, opts ...grpc.CallOption) (*PermissionCollection, error) {
	out := new(PermissionCollection)
	err := grpc.Invoke(ctx, "/dictybase.user.PermissionService/ListPermissions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) CreatePermission(ctx context.Context, in *CreatePermissionRequest, opts ...grpc.CallOption) (*Permission, error) {
	out := new(Permission)
	err := grpc.Invoke(ctx, "/dictybase.user.PermissionService/CreatePermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) UpdatePermission(ctx context.Context, in *UpdatePermissionRequest, opts ...grpc.CallOption) (*Permission, error) {
	out := new(Permission)
	err := grpc.Invoke(ctx, "/dictybase.user.PermissionService/UpdatePermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) DeletePermission(ctx context.Context, in *jsonapi.DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.PermissionService/DeletePermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PermissionService service

type PermissionServiceServer interface {
	// Gets the specified permission
	GetPermission(context.Context, *jsonapi.GetRequestWithFields) (*Permission, error)
	// List all permissions
	ListPermissions(context.Context, *jsonapi.SimpleListRequest) (*PermissionCollection, error)
	// Create an permission
	CreatePermission(context.Context, *CreatePermissionRequest) (*Permission, error)
	// Update an permission
	UpdatePermission(context.Context, *UpdatePermissionRequest) (*Permission, error)
	// Delete an permission
	DeletePermission(context.Context, *jsonapi.DeleteRequest) (*empty.Empty, error)
}

func RegisterPermissionServiceServer(s *grpc.Server, srv PermissionServiceServer) {
	s.RegisterService(&_PermissionService_serviceDesc, srv)
}

func _PermissionService_GetPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.GetRequestWithFields)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).GetPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.PermissionService/GetPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).GetPermission(ctx, req.(*jsonapi.GetRequestWithFields))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_ListPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.SimpleListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).ListPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.PermissionService/ListPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).ListPermissions(ctx, req.(*jsonapi.SimpleListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_CreatePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).CreatePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.PermissionService/CreatePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).CreatePermission(ctx, req.(*CreatePermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_UpdatePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).UpdatePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.PermissionService/UpdatePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).UpdatePermission(ctx, req.(*UpdatePermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_DeletePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(jsonapi.DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).DeletePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.PermissionService/DeletePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).DeletePermission(ctx, req.(*jsonapi.DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PermissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.user.PermissionService",
	HandlerType: (*PermissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPermission",
			Handler:    _PermissionService_GetPermission_Handler,
		},
		{
			MethodName: "ListPermissions",
			Handler:    _PermissionService_ListPermissions_Handler,
		},
		{
			MethodName: "CreatePermission",
			Handler:    _PermissionService_CreatePermission_Handler,
		},
		{
			MethodName: "UpdatePermission",
			Handler:    _PermissionService_UpdatePermission_Handler,
		},
		{
			MethodName: "DeletePermission",
			Handler:    _PermissionService_DeletePermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_3d9d20b2e3ba511e) }

var fileDescriptor_user_3d9d20b2e3ba511e = []byte{
	// 1913 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4f, 0x6f, 0x1c, 0x49,
	0x15, 0xa7, 0x67, 0xc6, 0xf1, 0xcc, 0x1b, 0x7b, 0x62, 0xd7, 0x1a, 0x7b, 0x3c, 0x31, 0x89, 0xb7,
	0x37, 0x09, 0x66, 0x58, 0xa6, 0xa3, 0x41, 0x48, 0x61, 0x17, 0xad, 0x62, 0xc7, 0x26, 0x04, 0xed,
	0x2e, 0x56, 0x6f, 0xa2, 0x00, 0x02, 0x99, 0xf6, 0x74, 0x65, 0x5c, 0xb8, 0xa7, 0xbb, 0xe9, 0xaa,
	0x49, 0x32, 0x89, 0xc2, 0x01, 0x24, 0x0e, 0x1c, 0x00, 0xc1, 0x2d, 0x12, 0x17, 0x84, 0x72, 0xe4,
	0x0b, 0x00, 0xdf, 0x21, 0x12, 0x07, 0x24, 0x2e, 0x5c, 0x38, 0x71, 0xe5, 0x92, 0x23, 0xaa, 0xaa,
	0xee, 0xe9, 0xea, 0xe9, 0xe9, 0x99, 0x1e, 0xc7, 0x76, 0xb4, 0x17, 0x7b, 0xba, 0xea, 0xfd, 0x7f,
	0xf5, 0x7e, 0xef, 0x55, 0x01, 0xf4, 0x29, 0x0e, 0x5a, 0x7e, 0xe0, 0x31, 0x0f, 0xd5, 0x6c, 0xd2,
	0x61, 0x83, 0x43, 0x8b, 0xe2, 0x16, 0x5f, 0x6d, 0x6c, 0x74, 0x3d, 0xaf, 0xeb, 0x60, 0xc3, 0xf2,
	0x89, 0x61, 0xb9, 0xae, 0xc7, 0x2c, 0x46, 0x3c, 0x97, 0x4a, 0xea, 0xc6, 0x66, 0xb8, 0x2b, 0xbe,
	0x0e, 0xfb, 0x0f, 0x8d, 0x87, 0x04, 0x3b, 0xf6, 0x41, 0xcf, 0xa2, 0xc7, 0x21, 0xc5, 0x95, 0x51,
	0x0a, 0x46, 0x7a, 0x98, 0x32, 0xab, 0xe7, 0x87, 0x04, 0x97, 0x46, 0x09, 0x70, 0xcf, 0x67, 0x83,
	0x70, 0x73, 0x7d, 0x74, 0xd3, 0x72, 0xa3, 0xad, 0xf7, 0x86, 0x86, 0x0a, 0xdb, 0x7e, 0x4a, 0x3d,
	0x97, 0xff, 0xf7, 0xad, 0x81, 0xe3, 0x59, 0xf6, 0x64, 0xa2, 0x00, 0xff, 0xac, 0x8f, 0x29, 0x93,
	0x44, 0xfa, 0xbf, 0x0a, 0xb0, 0x7c, 0xdf, 0xb7, 0x2d, 0x86, 0xef, 0x53, 0x1c, 0x98, 0x72, 0x0f,
	0x7d, 0x00, 0x25, 0xdb, 0x62, 0x56, 0x5d, 0xdb, 0xd4, 0xb6, 0xaa, 0xed, 0xeb, 0xad, 0x64, 0x5c,
	0x5a, 0x29, 0x86, 0xd6, 0xae, 0xc5, 0x2c, 0x53, 0xf0, 0xa0, 0x1a, 0x14, 0x88, 0x5d, 0x2f, 0x6c,
	0x6a, 0x5b, 0x45, 0xb3, 0x40, 0x6c, 0xf4, 0x21, 0x54, 0xfb, 0x82, 0x5e, 0x44, 0xa6, 0x5e, 0x14,
	0x22, 0x1b, 0x2d, 0xe9, 0x5c, 0x2b, 0x72, 0xae, 0xf5, 0x6d, 0x1e, 0xbc, 0x4f, 0x2c, 0x7a, 0x6c,
	0x82, 0x24, 0xe7, 0xbf, 0x1b, 0x7f, 0xd5, 0xa0, 0xc4, 0x65, 0x23, 0x04, 0x25, 0x36, 0xf0, 0xb1,
	0xb0, 0xa8, 0x62, 0x8a, 0xdf, 0x29, 0x4d, 0x1f, 0x01, 0x58, 0x8c, 0x05, 0xe4, 0xb0, 0xcf, 0x30,
	0x0d, 0x15, 0x5d, 0x4e, 0xd9, 0x4e, 0x71, 0xb0, 0x3d, 0xa4, 0x32, 0x15, 0x0e, 0xf4, 0x3d, 0x58,
	0x0c, 0xb0, 0x23, 0x73, 0x7c, 0x44, 0x7c, 0x5a, 0x2f, 0x09, 0x11, 0x5f, 0x19, 0x15, 0xb1, 0xf7,
	0x84, 0x50, 0x46, 0xdc, 0xae, 0x0c, 0x80, 0xc2, 0x60, 0x26, 0xf9, 0xf5, 0xd7, 0x1a, 0x2c, 0xdf,
	0x0e, 0xf0, 0x6c, 0xc1, 0x4d, 0x31, 0x28, 0xc1, 0x6d, 0xbc, 0x9c, 0x14, 0x8f, 0xa4, 0xff, 0x85,
	0x99, 0xfd, 0xff, 0xee, 0xa8, 0xff, 0x32, 0x84, 0x57, 0x47, 0x45, 0x7c, 0x8a, 0x1f, 0x4f, 0x75,
	0xfd, 0x85, 0x06, 0x25, 0x4e, 0x84, 0xde, 0x4f, 0x78, 0x5b, 0x1f, 0x67, 0x8e, 0x72, 0x78, 0xda,
	0x30, 0xe7, 0x10, 0xf7, 0x38, 0xb2, 0x7e, 0x43, 0x21, 0xb7, 0x7c, 0xd2, 0x0a, 0xcf, 0x70, 0xeb,
	0x63, 0x4e, 0x63, 0x4a, 0x52, 0x74, 0x03, 0xca, 0xc4, 0xed, 0x38, 0x7d, 0x1b, 0xdb, 0xf5, 0xe2,
	0x66, 0x71, 0xab, 0xda, 0x5e, 0x49, 0x9d, 0xae, 0x6d, 0x77, 0x60, 0x0e, 0xa9, 0xf4, 0x7f, 0x6b,
	0x50, 0xe3, 0x8a, 0x6f, 0x7b, 0x8e, 0x83, 0x3b, 0xdc, 0x68, 0xc5, 0xcc, 0x62, 0x0e, 0x33, 0xbf,
	0x95, 0x34, 0xf3, 0x7a, 0x86, 0x99, 0xfb, 0x56, 0x97, 0xb8, 0x22, 0x28, 0x09, 0x83, 0x0d, 0x28,
	0xf5, 0x30, 0xb3, 0xc2, 0xf0, 0x5e, 0xca, 0x60, 0xfe, 0x04, 0x73, 0x75, 0x9c, 0x30, 0xe1, 0x61,
	0x29, 0x97, 0x87, 0xff, 0xd3, 0xa0, 0x1c, 0xd9, 0x7c, 0x2e, 0xb5, 0x33, 0x4c, 0x5c, 0x29, 0x7f,
	0xe2, 0x52, 0xf5, 0x36, 0xf7, 0xa6, 0xf5, 0x56, 0x94, 0x79, 0x8d, 0x6d, 0x44, 0x5f, 0x02, 0x78,
	0x48, 0x02, 0xca, 0x0e, 0x5c, 0xab, 0x17, 0x45, 0xa0, 0x22, 0x56, 0x3e, 0xb5, 0x7a, 0x18, 0x5d,
	0x82, 0x8a, 0x63, 0x45, 0xbb, 0x05, 0xb1, 0x5b, 0xe6, 0x0b, 0x62, 0x73, 0x05, 0xe6, 0x70, 0xcf,
	0x22, 0x8e, 0x08, 0x47, 0xc5, 0x94, 0x1f, 0x48, 0x87, 0x05, 0x2f, 0xe8, 0x5a, 0x2e, 0x79, 0x2a,
	0x34, 0x0b, 0x87, 0x2b, 0x66, 0x62, 0x8d, 0x6b, 0xed, 0x06, 0x5e, 0xdf, 0x97, 0x72, 0xe7, 0xa4,
	0x56, 0xb1, 0x22, 0x04, 0xbf, 0x07, 0x8b, 0xd2, 0x28, 0xcb, 0xb6, 0x03, 0x4c, 0x69, 0xfd, 0x82,
	0x94, 0x21, 0x16, 0xb7, 0xe5, 0x1a, 0xba, 0x06, 0x35, 0x8a, 0x3b, 0x9e, 0x6b, 0x0f, 0xa9, 0xe6,
	0x05, 0xd5, 0xa2, 0x5c, 0x8d, 0xc8, 0x10, 0x94, 0x3a, 0x84, 0x0d, 0xea, 0x65, 0x99, 0x5c, 0xfe,
	0x9b, 0x1b, 0x4e, 0x99, 0xc5, 0x70, 0xbd, 0x22, 0x0d, 0x17, 0x1f, 0xa8, 0x0e, 0xf3, 0x4f, 0x89,
	0xdf, 0xf1, 0x6c, 0x5c, 0x07, 0xb1, 0x1e, 0x7d, 0xf2, 0x9d, 0x8e, 0xd7, 0x77, 0x59, 0x30, 0xa8,
	0x57, 0xe5, 0x4e, 0xf8, 0xc9, 0x25, 0xf9, 0x47, 0x9e, 0x8b, 0xeb, 0x0b, 0x52, 0x92, 0xf8, 0xe0,
	0x51, 0x23, 0xf4, 0xc0, 0xea, 0x30, 0xf2, 0x08, 0xd7, 0x17, 0x37, 0xb5, 0xad, 0xb2, 0x59, 0x26,
	0x74, 0x5b, 0x7c, 0xa3, 0x6f, 0x02, 0x74, 0x04, 0x84, 0xd9, 0x07, 0x16, 0xab, 0xd7, 0x32, 0xe0,
	0xfe, 0x5e, 0xd4, 0x09, 0xcd, 0x4a, 0x48, 0xbd, 0xcd, 0x38, 0xab, 0xc4, 0x7e, 0xc1, 0x7a, 0x71,
	0x3a, 0x6b, 0x48, 0xbd, 0xcd, 0xf4, 0x57, 0x1a, 0xac, 0x67, 0x9e, 0x13, 0xb4, 0x07, 0x73, 0x81,
	0xe7, 0x60, 0x1a, 0xa2, 0x90, 0x91, 0xfb, 0x84, 0xb5, 0x4c, 0xce, 0x66, 0x4a, 0xee, 0x86, 0x03,
	0x73, 0xe2, 0x3b, 0x3e, 0xed, 0x5a, 0xfe, 0xd3, 0x6e, 0x84, 0x08, 0x53, 0x10, 0x05, 0x9c, 0x55,
	0xf5, 0x31, 0xc8, 0xe8, 0xbf, 0xd7, 0x60, 0x65, 0x1c, 0xd4, 0xa2, 0x5b, 0x49, 0x6f, 0x9a, 0x79,
	0xf0, 0x39, 0xe9, 0xc8, 0xcd, 0xc8, 0x11, 0x23, 0x01, 0x7b, 0x39, 0x8c, 0x8a, 0xe7, 0x05, 0x2e,
	0x60, 0xa6, 0x79, 0x41, 0x61, 0xf8, 0x1c, 0xcd, 0x0b, 0xdc, 0xea, 0x53, 0x9a, 0x17, 0x64, 0x00,
	0x72, 0xcd, 0x0b, 0x33, 0x04, 0x37, 0xc5, 0x70, 0xba, 0xf3, 0xc2, 0x04, 0xff, 0x67, 0x98, 0x17,
	0xa6, 0xba, 0xce, 0xe7, 0x05, 0x4e, 0x34, 0x6d, 0x5e, 0xe0, 0x34, 0xe7, 0x3e, 0x2f, 0xfc, 0x59,
	0x83, 0x1a, 0x57, 0x9c, 0x7f, 0x5e, 0x78, 0x2b, 0x66, 0xf2, 0xa6, 0x1f, 0x29, 0x3e, 0x97, 0x02,
	0x38, 0x8f, 0xa6, 0x3f, 0xf5, 0xe4, 0xfc, 0x2d, 0x4c, 0x8e, 0xd2, 0xf4, 0x11, 0x94, 0x38, 0xce,
	0x45, 0xbe, 0xf3, 0xdf, 0x68, 0x13, 0xaa, 0x36, 0xa6, 0x9d, 0x80, 0xf8, 0xa2, 0x6b, 0xcb, 0x5e,
	0xaf, 0x2e, 0xbd, 0xa5, 0xc6, 0xf5, 0xc7, 0x62, 0xdc, 0xb8, 0x52, 0xbe, 0xa2, 0x07, 0x50, 0xf5,
	0x71, 0xd0, 0x23, 0x94, 0xf2, 0xa5, 0xb0, 0x28, 0xbe, 0x91, 0x3b, 0x56, 0xad, 0xfd, 0x98, 0xd9,
	0x54, 0x25, 0xf1, 0x8e, 0xc8, 0x59, 0xa3, 0x13, 0x69, 0xe4, 0x17, 0xc9, 0x5b, 0x0b, 0x35, 0x25,
	0x77, 0x23, 0x80, 0xaa, 0xa2, 0xe2, 0x5c, 0xfa, 0x22, 0xef, 0xc2, 0xc2, 0x86, 0xf3, 0xe9, 0xc2,
	0x2f, 0x0b, 0xa2, 0x0b, 0xa7, 0x53, 0x63, 0x8e, 0x4b, 0xcd, 0x8d, 0x3c, 0xd8, 0x97, 0x9d, 0x95,
	0x5b, 0xc9, 0xac, 0x34, 0x73, 0x49, 0x4b, 0x24, 0xe4, 0xa3, 0x64, 0x42, 0x66, 0xed, 0xef, 0x7c,
	0x32, 0x90, 0xc1, 0x9d, 0x79, 0x32, 0x78, 0x51, 0x80, 0x35, 0xd9, 0xe8, 0x63, 0x03, 0xa2, 0x16,
	0x76, 0x2b, 0x01, 0xea, 0xef, 0x8f, 0x9f, 0x0f, 0x52, 0x6c, 0x67, 0x36, 0x25, 0xf8, 0x33, 0x0c,
	0x09, 0xbb, 0x63, 0x30, 0x32, 0xd5, 0xe1, 0x62, 0xd3, 0xc7, 0x23, 0xa5, 0xfe, 0x77, 0x0d, 0xd6,
	0x64, 0xa3, 0x9e, 0x39, 0x38, 0x19, 0x6c, 0x6a, 0xd2, 0x7e, 0x32, 0xc1, 0x9f, 0xdd, 0x31, 0x4d,
	0x7e, 0x76, 0xfb, 0x19, 0x40, 0x4c, 0x83, 0xda, 0x09, 0x8b, 0x2f, 0x67, 0x4b, 0x7b, 0xb3, 0x16,
	0xa8, 0xff, 0x1c, 0x56, 0x62, 0x59, 0x4a, 0xf3, 0x6d, 0x27, 0xce, 0xe6, 0xd9, 0xe9, 0xff, 0x8b,
	0x06, 0xb5, 0xa4, 0xb0, 0xf3, 0x3b, 0x32, 0x27, 0x69, 0xae, 0xfa, 0x7f, 0x35, 0x35, 0x62, 0x4a,
	0x47, 0xbc, 0x0c, 0x10, 0xe3, 0x4c, 0x68, 0xbc, 0xb2, 0x32, 0x73, 0x77, 0x2c, 0x9e, 0xbc, 0x3b,
	0x96, 0x66, 0xe8, 0x8e, 0xa8, 0x01, 0xe5, 0x00, 0x53, 0xaf, 0x1f, 0x74, 0xa2, 0x6b, 0xf4, 0xf0,
	0xbb, 0xfd, 0x3b, 0x80, 0x2a, 0xc7, 0xaa, 0xcf, 0x70, 0xf0, 0x88, 0x74, 0x30, 0xba, 0x0f, 0x15,
	0xd1, 0xb5, 0xc4, 0xb3, 0xd3, 0x66, 0x46, 0xb8, 0xee, 0xda, 0x61, 0xfd, 0x34, 0xae, 0x66, 0x50,
	0x08, 0x19, 0x26, 0xa6, 0xbe, 0xe7, 0x52, 0xac, 0x7f, 0x01, 0x3d, 0x80, 0xf9, 0x3b, 0x58, 0x0a,
	0x7d, 0x37, 0x83, 0xe5, 0x0e, 0x66, 0x91, 0xd4, 0x95, 0x71, 0x6f, 0x26, 0xfa, 0x3b, 0xbf, 0xf8,
	0xc7, 0x7f, 0xfe, 0x50, 0x58, 0x44, 0x55, 0x43, 0xa0, 0xb4, 0xf1, 0x8c, 0xd8, 0xcf, 0x91, 0x03,
	0xb5, 0x50, 0xf0, 0xce, 0x60, 0x4f, 0x3c, 0x2d, 0x5c, 0xcf, 0x96, 0x2f, 0x08, 0x26, 0x2b, 0xd9,
	0x10, 0x4a, 0x56, 0xd1, 0x4a, 0xa8, 0x44, 0x3c, 0x57, 0x18, 0xcf, 0xc4, 0xbf, 0xe7, 0xe8, 0x09,
	0x5c, 0x14, 0x66, 0x3a, 0x3c, 0xb2, 0xf2, 0xf2, 0xd7, 0xcc, 0x50, 0xa7, 0xb6, 0x97, 0x48, 0xe5,
	0xd8, 0xb1, 0x30, 0x2e, 0x49, 0x7d, 0x5d, 0x28, 0x7f, 0x07, 0x2d, 0x2b, 0x1e, 0x1a, 0xe2, 0xb2,
	0x89, 0x0e, 0xa0, 0xf2, 0x71, 0x98, 0x16, 0x8a, 0xf4, 0xcc, 0x63, 0x4c, 0x59, 0xa6, 0xae, 0xe4,
	0x5b, 0x9d, 0x5e, 0x13, 0xba, 0xca, 0xe8, 0x82, 0xd4, 0x85, 0xbe, 0x0f, 0x10, 0x3f, 0x9a, 0x26,
	0x92, 0x34, 0xfe, 0x41, 0x35, 0x23, 0x7e, 0xcb, 0x42, 0x6c, 0x55, 0x0f, 0xc5, 0x7e, 0xa0, 0x35,
	0xd1, 0x2f, 0x35, 0x58, 0x55, 0xef, 0x57, 0x71, 0x5c, 0xd0, 0xb5, 0x09, 0x1d, 0x31, 0xb6, 0xb5,
	0xb1, 0x9a, 0x3a, 0xe7, 0x7b, 0x3d, 0x9f, 0x0d, 0xf4, 0xa6, 0x50, 0x76, 0x55, 0xbf, 0x92, 0x88,
	0x97, 0xda, 0xd7, 0x65, 0xf4, 0xb8, 0x15, 0x3f, 0x06, 0x88, 0x5f, 0xdc, 0xd3, 0xfe, 0xa5, 0x5e,
	0xe3, 0x33, 0xfc, 0x5b, 0x15, 0x2a, 0x97, 0xda, 0xea, 0x21, 0x8c, 0x9c, 0x54, 0x6f, 0xe8, 0xa7,
	0xee, 0x64, 0x3b, 0x8f, 0x93, 0x07, 0x00, 0xbb, 0xd8, 0xc1, 0xa1, 0x93, 0x59, 0xc5, 0x29, 0x49,
	0x22, 0x3f, 0xb3, 0xf4, 0x86, 0xe5, 0xd6, 0x4c, 0x94, 0x1b, 0x77, 0x33, 0x64, 0x3f, 0x1b, 0x37,
	0x9b, 0x79, 0xdc, 0xfc, 0x11, 0xcc, 0x7f, 0x07, 0x5b, 0x0e, 0x3b, 0x7a, 0x8a, 0xbe, 0x9c, 0xa1,
	0x35, 0xdc, 0x8f, 0x91, 0x2a, 0x4b, 0xef, 0x92, 0xd0, 0x0b, 0xa8, 0x6c, 0x1c, 0x49, 0x96, 0xf6,
	0xab, 0x05, 0xa8, 0x72, 0xef, 0x22, 0x48, 0x94, 0xd8, 0x25, 0xee, 0xd5, 0x27, 0xc1, 0x2e, 0xce,
	0xa8, 0x60, 0x97, 0x70, 0x42, 0x06, 0xf3, 0x57, 0x9a, 0x0a, 0x27, 0xb2, 0xb4, 0x6f, 0xe6, 0x87,
	0x93, 0x07, 0x84, 0x1d, 0xc5, 0x8f, 0xe3, 0x53, 0x0b, 0x3e, 0x06, 0x97, 0xd8, 0x84, 0xb0, 0xf6,
	0x7f, 0xad, 0xc1, 0x17, 0x63, 0x43, 0xd4, 0xd1, 0x77, 0x16, 0x74, 0x9b, 0xd0, 0x9d, 0x15, 0x33,
	0xae, 0x08, 0x33, 0xd6, 0xd1, 0x9a, 0x6a, 0x86, 0x3a, 0xbe, 0x63, 0x89, 0x74, 0x12, 0x5d, 0xb7,
	0x32, 0xf4, 0x7f, 0x46, 0x7a, 0xbe, 0x83, 0x27, 0xe2, 0xdd, 0x08, 0xb6, 0xc6, 0x78, 0x27, 0x01,
	0x75, 0x88, 0x77, 0xa9, 0xc4, 0x8e, 0x7f, 0x10, 0xca, 0x48, 0x6c, 0x8c, 0x77, 0xc3, 0xd3, 0xf9,
	0x9b, 0x21, 0xde, 0x8d, 0x3e, 0x20, 0xe6, 0xad, 0x91, 0x77, 0x27, 0xf4, 0xdd, 0xb0, 0xa5, 0xc6,
	0xd0, 0xa7, 0x84, 0x31, 0x59, 0x2e, 0x43, 0x00, 0xfe, 0xad, 0x06, 0x1b, 0xe9, 0x01, 0xf8, 0xf4,
	0x4a, 0xf7, 0x86, 0xb0, 0xa5, 0xa9, 0x5f, 0xcb, 0xb6, 0x45, 0x49, 0x70, 0x02, 0x8c, 0xc7, 0x07,
	0x3f, 0xf5, 0xd4, 0x99, 0x11, 0xfc, 0x18, 0x8c, 0x63, 0xc5, 0x49, 0x30, 0x3e, 0x69, 0x06, 0xa6,
	0x83, 0x71, 0xbe, 0xb0, 0xa7, 0x2f, 0x65, 0xa7, 0x1e, 0xf6, 0x76, 0xfe, 0xb0, 0x0f, 0xdb, 0x83,
	0x08, 0xfb, 0x69, 0xb5, 0x07, 0x05, 0xd1, 0xe2, 0xf6, 0x70, 0x46, 0x81, 0x6f, 0xe6, 0x0d, 0xbc,
	0xb4, 0xe2, 0x4c, 0x03, 0xdf, 0xcc, 0x1d, 0xf8, 0xf6, 0x3f, 0x4b, 0xb0, 0x1c, 0xdb, 0x12, 0x35,
	0x16, 0x0a, 0x8b, 0x77, 0x30, 0x53, 0xae, 0x84, 0x5f, 0x9d, 0xda, 0x5e, 0x38, 0xe6, 0x8b, 0xeb,
	0x38, 0x6d, 0x34, 0xb2, 0xe1, 0x56, 0xc1, 0x7a, 0xc5, 0x10, 0x99, 0xa2, 0xc7, 0x70, 0x91, 0xc3,
	0xa6, 0x0a, 0xf2, 0xf9, 0x41, 0x36, 0x1f, 0xc4, 0xaf, 0x08, 0xed, 0x35, 0xb4, 0x90, 0xc0, 0x75,
	0x1f, 0x96, 0x46, 0x41, 0x28, 0xd1, 0xbd, 0x27, 0xdd, 0xd3, 0x27, 0x3a, 0xbb, 0x26, 0xd4, 0x2d,
	0xeb, 0x0b, 0xa3, 0xc7, 0xbd, 0x0f, 0x4b, 0xa3, 0xf5, 0x97, 0xd6, 0x98, 0xf1, 0x6c, 0x32, 0x51,
	0x63, 0x78, 0x49, 0x68, 0xa7, 0xc3, 0xcb, 0xd5, 0x1e, 0xc3, 0xd2, 0xe8, 0xe9, 0x7b, 0xc3, 0x5a,
	0x0b, 0xd3, 0xd9, 0x4c, 0xeb, 0xdb, 0x21, 0x80, 0xbc, 0xa0, 0x3b, 0x62, 0xeb, 0x4e, 0x85, 0x97,
	0xdf, 0x3e, 0x17, 0xb2, 0xaf, 0xfd, 0xf0, 0x66, 0x97, 0xb0, 0xa3, 0xfe, 0x61, 0xab, 0xe3, 0xf5,
	0x0c, 0x41, 0xb7, 0x63, 0x51, 0x6c, 0x74, 0xbd, 0xaf, 0x75, 0xb1, 0x2b, 0x14, 0x19, 0x43, 0x6e,
	0xcb, 0x27, 0xb2, 0x8e, 0x3e, 0xe4, 0x7f, 0x5e, 0x6b, 0xda, 0x9f, 0x0a, 0xe5, 0xdd, 0xbb, 0xb7,
	0xef, 0xfd, 0x60, 0x7b, 0xff, 0xee, 0xe1, 0x05, 0x41, 0xfc, 0xf5, 0xff, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x3e, 0xe2, 0xb2, 0x3e, 0xed, 0x23, 0x00, 0x00,
}
