// Code generated by protoc-gen-go. DO NOT EDIT.
// source: role.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "google.golang.org/genproto/protobuf/field_mask"
import google_protobuf4 "github.com/golang/protobuf/ptypes/any"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import dictybase_api_jsonapi "github.com/dictyBase/go-genproto/dictybaseapis/api/jsonapi"
import dictybase_api_jsonapi1 "github.com/dictyBase/go-genproto/dictybaseapis/api/jsonapi"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UpdateRoleRequest struct {
	Data *UpdateRoleRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	// An optional mask specifying which fields to update.
	// Presence of this field allow partial updates.
	UpdateMask *google_protobuf1.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (m *UpdateRoleRequest) Reset()                    { *m = UpdateRoleRequest{} }
func (m *UpdateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRoleRequest) ProtoMessage()               {}
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *UpdateRoleRequest) GetData() *UpdateRoleRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateRoleRequest) GetUpdateMask() *google_protobuf1.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type UpdateRoleRequest_Data struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Unique id, required
	Id            int64                      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes    *RoleAttributes            `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Relationships *ExistingRoleRelationships `protobuf:"bytes,4,opt,name=relationships" json:"relationships,omitempty"`
}

func (m *UpdateRoleRequest_Data) Reset()                    { *m = UpdateRoleRequest_Data{} }
func (m *UpdateRoleRequest_Data) String() string            { return proto.CompactTextString(m) }
func (*UpdateRoleRequest_Data) ProtoMessage()               {}
func (*UpdateRoleRequest_Data) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *UpdateRoleRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UpdateRoleRequest_Data) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRoleRequest_Data) GetAttributes() *RoleAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *UpdateRoleRequest_Data) GetRelationships() *ExistingRoleRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

type CreateRoleRequest struct {
	Data *CreateRoleRequest_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *CreateRoleRequest) Reset()                    { *m = CreateRoleRequest{} }
func (m *CreateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleRequest) ProtoMessage()               {}
func (*CreateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateRoleRequest) GetData() *CreateRoleRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The payload for new user
type CreateRoleRequest_Data struct {
	Type          string                `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Attributes    *RoleAttributes       `protobuf:"bytes,2,opt,name=attributes" json:"attributes,omitempty"`
	Relationships *NewRoleRelationships `protobuf:"bytes,3,opt,name=relationships" json:"relationships,omitempty"`
}

func (m *CreateRoleRequest_Data) Reset()                    { *m = CreateRoleRequest_Data{} }
func (m *CreateRoleRequest_Data) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleRequest_Data) ProtoMessage()               {}
func (*CreateRoleRequest_Data) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

func (m *CreateRoleRequest_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateRoleRequest_Data) GetAttributes() *RoleAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *CreateRoleRequest_Data) GetRelationships() *NewRoleRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

// A resource for managing user roles.
type Role struct {
	Data     *RoleData                    `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Links    *dictybase_api_jsonapi.Links `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	Included []*google_protobuf4.Any      `protobuf:"bytes,3,rep,name=included" json:"included,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Role) GetData() *RoleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Role) GetLinks() *dictybase_api_jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Role) GetIncluded() []*google_protobuf4.Any {
	if m != nil {
		return m.Included
	}
	return nil
}

// A role collection resource.
type RoleCollection struct {
	Data     []*RoleData                  `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Links    *dictybase_api_jsonapi.Links `protobuf:"bytes,2,opt,name=links" json:"links,omitempty"`
	Included []*google_protobuf4.Any      `protobuf:"bytes,3,rep,name=included" json:"included,omitempty"`
}

func (m *RoleCollection) Reset()                    { *m = RoleCollection{} }
func (m *RoleCollection) String() string            { return proto.CompactTextString(m) }
func (*RoleCollection) ProtoMessage()               {}
func (*RoleCollection) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *RoleCollection) GetData() []*RoleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RoleCollection) GetLinks() *dictybase_api_jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *RoleCollection) GetIncluded() []*google_protobuf4.Any {
	if m != nil {
		return m.Included
	}
	return nil
}

// A top level container for role data.
type RoleData struct {
	Type          string                       `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id            int64                        `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Attributes    *RoleAttributes              `protobuf:"bytes,3,opt,name=attributes" json:"attributes,omitempty"`
	Links         *dictybase_api_jsonapi.Links `protobuf:"bytes,4,opt,name=links" json:"links,omitempty"`
	Relationships *ExistingRoleRelationships   `protobuf:"bytes,5,opt,name=relationships" json:"relationships,omitempty"`
}

func (m *RoleData) Reset()                    { *m = RoleData{} }
func (m *RoleData) String() string            { return proto.CompactTextString(m) }
func (*RoleData) ProtoMessage()               {}
func (*RoleData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *RoleData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RoleData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoleData) GetAttributes() *RoleAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *RoleData) GetLinks() *dictybase_api_jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *RoleData) GetRelationships() *ExistingRoleRelationships {
	if m != nil {
		return m.Relationships
	}
	return nil
}

// A container for role fields.
type RoleAttributes struct {
	Role        string `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Timestamp for creation and update
	CreatedAt *google_protobuf3.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *google_protobuf3.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *RoleAttributes) Reset()                    { *m = RoleAttributes{} }
func (m *RoleAttributes) String() string            { return proto.CompactTextString(m) }
func (*RoleAttributes) ProtoMessage()               {}
func (*RoleAttributes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *RoleAttributes) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *RoleAttributes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RoleAttributes) GetCreatedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RoleAttributes) GetUpdatedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// The relationship definition for existing roles.
type ExistingRoleRelationships struct {
	Permissions *ExistingRoleRelationships_Permissions `protobuf:"bytes,1,opt,name=permissions" json:"permissions,omitempty"`
	Users       *ExistingRoleRelationships_Users       `protobuf:"bytes,2,opt,name=users" json:"users,omitempty"`
}

func (m *ExistingRoleRelationships) Reset()                    { *m = ExistingRoleRelationships{} }
func (m *ExistingRoleRelationships) String() string            { return proto.CompactTextString(m) }
func (*ExistingRoleRelationships) ProtoMessage()               {}
func (*ExistingRoleRelationships) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ExistingRoleRelationships) GetPermissions() *ExistingRoleRelationships_Permissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *ExistingRoleRelationships) GetUsers() *ExistingRoleRelationships_Users {
	if m != nil {
		return m.Users
	}
	return nil
}

// Relationships with permission resource.
type ExistingRoleRelationships_Permissions struct {
	Links *dictybase_api_jsonapi.Links `protobuf:"bytes,1,opt,name=links" json:"links,omitempty"`
	Data  *dictybase_api_jsonapi.Data  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *ExistingRoleRelationships_Permissions) Reset()         { *m = ExistingRoleRelationships_Permissions{} }
func (m *ExistingRoleRelationships_Permissions) String() string { return proto.CompactTextString(m) }
func (*ExistingRoleRelationships_Permissions) ProtoMessage()    {}
func (*ExistingRoleRelationships_Permissions) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 0}
}

func (m *ExistingRoleRelationships_Permissions) GetLinks() *dictybase_api_jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ExistingRoleRelationships_Permissions) GetData() *dictybase_api_jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// Relationships with user resource.
type ExistingRoleRelationships_Users struct {
	Links *dictybase_api_jsonapi.Links `protobuf:"bytes,1,opt,name=links" json:"links,omitempty"`
	Data  *dictybase_api_jsonapi.Data  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *ExistingRoleRelationships_Users) Reset()         { *m = ExistingRoleRelationships_Users{} }
func (m *ExistingRoleRelationships_Users) String() string { return proto.CompactTextString(m) }
func (*ExistingRoleRelationships_Users) ProtoMessage()    {}
func (*ExistingRoleRelationships_Users) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 1}
}

func (m *ExistingRoleRelationships_Users) GetLinks() *dictybase_api_jsonapi.Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *ExistingRoleRelationships_Users) GetData() *dictybase_api_jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// The relationship definition for creating new roles.
type NewRoleRelationships struct {
	Permissions *NewRoleRelationships_Permissions `protobuf:"bytes,1,opt,name=permissions" json:"permissions,omitempty"`
	Users       *NewRoleRelationships_Users       `protobuf:"bytes,2,opt,name=users" json:"users,omitempty"`
}

func (m *NewRoleRelationships) Reset()                    { *m = NewRoleRelationships{} }
func (m *NewRoleRelationships) String() string            { return proto.CompactTextString(m) }
func (*NewRoleRelationships) ProtoMessage()               {}
func (*NewRoleRelationships) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *NewRoleRelationships) GetPermissions() *NewRoleRelationships_Permissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *NewRoleRelationships) GetUsers() *NewRoleRelationships_Users {
	if m != nil {
		return m.Users
	}
	return nil
}

type NewRoleRelationships_Permissions struct {
	Data *dictybase_api_jsonapi.Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *NewRoleRelationships_Permissions) Reset()         { *m = NewRoleRelationships_Permissions{} }
func (m *NewRoleRelationships_Permissions) String() string { return proto.CompactTextString(m) }
func (*NewRoleRelationships_Permissions) ProtoMessage()    {}
func (*NewRoleRelationships_Permissions) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{7, 0}
}

func (m *NewRoleRelationships_Permissions) GetData() *dictybase_api_jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type NewRoleRelationships_Users struct {
	Data *dictybase_api_jsonapi.Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *NewRoleRelationships_Users) Reset()                    { *m = NewRoleRelationships_Users{} }
func (m *NewRoleRelationships_Users) String() string            { return proto.CompactTextString(m) }
func (*NewRoleRelationships_Users) ProtoMessage()               {}
func (*NewRoleRelationships_Users) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7, 1} }

func (m *NewRoleRelationships_Users) GetData() *dictybase_api_jsonapi.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateRoleRequest)(nil), "dictybase.user.UpdateRoleRequest")
	proto.RegisterType((*UpdateRoleRequest_Data)(nil), "dictybase.user.UpdateRoleRequest.Data")
	proto.RegisterType((*CreateRoleRequest)(nil), "dictybase.user.CreateRoleRequest")
	proto.RegisterType((*CreateRoleRequest_Data)(nil), "dictybase.user.CreateRoleRequest.Data")
	proto.RegisterType((*Role)(nil), "dictybase.user.Role")
	proto.RegisterType((*RoleCollection)(nil), "dictybase.user.RoleCollection")
	proto.RegisterType((*RoleData)(nil), "dictybase.user.RoleData")
	proto.RegisterType((*RoleAttributes)(nil), "dictybase.user.RoleAttributes")
	proto.RegisterType((*ExistingRoleRelationships)(nil), "dictybase.user.ExistingRoleRelationships")
	proto.RegisterType((*ExistingRoleRelationships_Permissions)(nil), "dictybase.user.ExistingRoleRelationships.Permissions")
	proto.RegisterType((*ExistingRoleRelationships_Users)(nil), "dictybase.user.ExistingRoleRelationships.Users")
	proto.RegisterType((*NewRoleRelationships)(nil), "dictybase.user.NewRoleRelationships")
	proto.RegisterType((*NewRoleRelationships_Permissions)(nil), "dictybase.user.NewRoleRelationships.Permissions")
	proto.RegisterType((*NewRoleRelationships_Users)(nil), "dictybase.user.NewRoleRelationships.Users")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoleService service

type RoleServiceClient interface {
	// Gets the specified role
	GetRole(ctx context.Context, in *dictybase_api_jsonapi1.GetRequest, opts ...grpc.CallOption) (*Role, error)
	// List all roles
	ListRoles(ctx context.Context, in *dictybase_api_jsonapi1.ListRequest, opts ...grpc.CallOption) (*RoleCollection, error)
	// Create an role
	CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...grpc.CallOption) (*Role, error)
	// Update an role
	UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...grpc.CallOption) (*Role, error)
	// Delete an role
	DeleteRole(ctx context.Context, in *dictybase_api_jsonapi1.DeleteRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type roleServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoleServiceClient(cc *grpc.ClientConn) RoleServiceClient {
	return &roleServiceClient{cc}
}

func (c *roleServiceClient) GetRole(ctx context.Context, in *dictybase_api_jsonapi1.GetRequest, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/GetRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) ListRoles(ctx context.Context, in *dictybase_api_jsonapi1.ListRequest, opts ...grpc.CallOption) (*RoleCollection, error) {
	out := new(RoleCollection)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/ListRoles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/CreateRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/UpdateRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRole(ctx context.Context, in *dictybase_api_jsonapi1.DeleteRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/dictybase.user.RoleService/DeleteRole", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoleService service

type RoleServiceServer interface {
	// Gets the specified role
	GetRole(context.Context, *dictybase_api_jsonapi1.GetRequest) (*Role, error)
	// List all roles
	ListRoles(context.Context, *dictybase_api_jsonapi1.ListRequest) (*RoleCollection, error)
	// Create an role
	CreateRole(context.Context, *CreateRoleRequest) (*Role, error)
	// Update an role
	UpdateRole(context.Context, *UpdateRoleRequest) (*Role, error)
	// Delete an role
	DeleteRole(context.Context, *dictybase_api_jsonapi1.DeleteRequest) (*google_protobuf2.Empty, error)
}

func RegisterRoleServiceServer(s *grpc.Server, srv RoleServiceServer) {
	s.RegisterService(&_RoleService_serviceDesc, srv)
}

func _RoleService_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dictybase_api_jsonapi1.GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetRole(ctx, req.(*dictybase_api_jsonapi1.GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_ListRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dictybase_api_jsonapi1.ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).ListRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/ListRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).ListRoles(ctx, req.(*dictybase_api_jsonapi1.ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).CreateRole(ctx, req.(*CreateRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdateRole(ctx, req.(*UpdateRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dictybase_api_jsonapi1.DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.user.RoleService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteRole(ctx, req.(*dictybase_api_jsonapi1.DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.user.RoleService",
	HandlerType: (*RoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRole",
			Handler:    _RoleService_GetRole_Handler,
		},
		{
			MethodName: "ListRoles",
			Handler:    _RoleService_ListRoles_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _RoleService_CreateRole_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _RoleService_UpdateRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _RoleService_DeleteRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "role.proto",
}

func init() { proto.RegisterFile("role.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 881 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0x97, 0x9d, 0xa4, 0x24, 0xcf, 0x6a, 0x50, 0x87, 0x0a, 0xa5, 0x69, 0x05, 0xc1, 0x54, 0xa8,
	0x54, 0x60, 0x57, 0x41, 0x48, 0xa5, 0x95, 0x2a, 0xd2, 0x3f, 0xa0, 0xa2, 0x02, 0x91, 0x69, 0x55,
	0xe0, 0x12, 0x4d, 0xe2, 0x69, 0x3a, 0xd4, 0xb1, 0x8d, 0x67, 0x02, 0x44, 0x88, 0x0b, 0x5f, 0x81,
	0x1b, 0x12, 0x17, 0xb4, 0xea, 0x97, 0xd8, 0xfd, 0x04, 0x7b, 0xdd, 0xeb, 0x1e, 0xf7, 0x1b, 0xec,
	0xa5, 0xc7, 0xd5, 0x8c, 0xed, 0xc4, 0x76, 0xe2, 0x36, 0xd5, 0x4a, 0xd5, 0x5e, 0x5a, 0x2b, 0xef,
	0xf7, 0xfb, 0xbd, 0xdf, 0x7b, 0x6f, 0xe6, 0xd9, 0x00, 0x81, 0xe7, 0x10, 0xc3, 0x0f, 0x3c, 0xee,
	0xa1, 0xaa, 0x4d, 0x7b, 0x7c, 0xd4, 0xc5, 0x8c, 0x18, 0x43, 0x46, 0x82, 0xfa, 0xfb, 0x7d, 0xcf,
	0xeb, 0x3b, 0xc4, 0x94, 0xd1, 0xee, 0xf0, 0xc2, 0xe4, 0x74, 0x40, 0x18, 0xc7, 0x03, 0x3f, 0x24,
	0xd4, 0xd7, 0x22, 0x00, 0xf6, 0xa9, 0x89, 0x5d, 0xd7, 0xe3, 0x98, 0x53, 0xcf, 0x65, 0x51, 0xb4,
	0x91, 0xa5, 0x5f, 0x50, 0xe2, 0xd8, 0x9d, 0x01, 0x66, 0x57, 0x11, 0x62, 0x25, 0x8b, 0xc0, 0xee,
	0x28, 0x0a, 0xad, 0x66, 0x43, 0x64, 0xe0, 0xf3, 0x38, 0xf8, 0xe1, 0xd8, 0xa8, 0x4c, 0xfd, 0x0b,
	0xf3, 0x5c, 0xf1, 0xdf, 0xc7, 0x23, 0xc7, 0xc3, 0xf6, 0xed, 0xa0, 0x80, 0xfc, 0x3a, 0x24, 0x8c,
	0x87, 0x20, 0xfd, 0xa9, 0x0a, 0x4b, 0x67, 0xbe, 0x8d, 0x39, 0xb1, 0x3c, 0x87, 0x58, 0x61, 0x0c,
	0xed, 0x40, 0xd1, 0xc6, 0x1c, 0xd7, 0x94, 0x86, 0xb2, 0xa1, 0x35, 0x3f, 0x32, 0xd2, 0x7d, 0x31,
	0xa6, 0x08, 0xc6, 0x21, 0xe6, 0xd8, 0x92, 0x1c, 0xb4, 0x0b, 0xda, 0x50, 0xc6, 0x65, 0xa1, 0x35,
	0x55, 0x4a, 0xd4, 0x8d, 0xb0, 0x1c, 0x23, 0x2e, 0xc7, 0xf8, 0x4a, 0xf4, 0xe2, 0x5b, 0xcc, 0xae,
	0x2c, 0x08, 0xe1, 0xe2, 0xb9, 0xfe, 0x58, 0x81, 0xa2, 0xd0, 0x42, 0x08, 0x8a, 0x7c, 0xe4, 0x13,
	0xe9, 0xa0, 0x62, 0xc9, 0x67, 0x54, 0x05, 0x95, 0xda, 0x52, 0xb0, 0x60, 0xa9, 0xd4, 0x46, 0x7b,
	0x00, 0x98, 0xf3, 0x80, 0x76, 0x87, 0x9c, 0xb0, 0x5a, 0x41, 0x26, 0x7a, 0x2f, 0xeb, 0x55, 0xb8,
	0x6c, 0x8d, 0x51, 0x56, 0x82, 0x81, 0xbe, 0x87, 0xc5, 0x80, 0x38, 0xe1, 0xc8, 0x2e, 0xa9, 0xcf,
	0x6a, 0x45, 0x29, 0xf1, 0x71, 0x56, 0xe2, 0xe8, 0x0f, 0xca, 0x38, 0x75, 0xfb, 0x61, 0xc1, 0x09,
	0x82, 0x95, 0xe6, 0xeb, 0x37, 0x0a, 0x2c, 0x1d, 0x04, 0xe4, 0x7e, 0xcd, 0x9c, 0x22, 0x24, 0x9a,
	0x59, 0xbf, 0xbe, 0xad, 0x1f, 0xe9, 0xfa, 0xd5, 0x7b, 0xd7, 0xff, 0x4d, 0xb6, 0xfe, 0xb0, 0x85,
	0xeb, 0x59, 0x89, 0xef, 0xc8, 0xef, 0x77, 0x96, 0xfe, 0xaf, 0x02, 0x45, 0x01, 0x42, 0x9f, 0xa4,
	0xaa, 0xad, 0xcd, 0xb2, 0x93, 0x38, 0x2c, 0x4d, 0x28, 0x39, 0xd4, 0xbd, 0x8a, 0xdd, 0xaf, 0x25,
	0xe0, 0xd8, 0xa7, 0x46, 0x74, 0x66, 0x8d, 0x13, 0x81, 0xb1, 0x42, 0x28, 0xda, 0x82, 0x32, 0x75,
	0x7b, 0xce, 0xd0, 0x26, 0x76, 0xad, 0xd0, 0x28, 0x6c, 0x68, 0xcd, 0xe5, 0xa9, 0xd3, 0xd5, 0x72,
	0x47, 0xd6, 0x18, 0xa5, 0x3f, 0x52, 0xa0, 0x2a, 0x12, 0x1f, 0x78, 0x8e, 0x43, 0x7a, 0xc2, 0x74,
	0xc2, 0x66, 0xe1, 0x8d, 0xb1, 0xf9, 0x52, 0x81, 0x72, 0x9c, 0xf8, 0x41, 0x2e, 0xc0, 0xb8, 0xac,
	0xe2, 0xfc, 0x65, 0x4d, 0x5d, 0x9a, 0xd2, 0x6b, 0x5e, 0x9a, 0x27, 0xd1, 0x70, 0x26, 0x1e, 0x45,
	0xed, 0x62, 0x2b, 0xc7, 0xb5, 0x8b, 0x67, 0xd4, 0x00, 0xcd, 0x26, 0xac, 0x17, 0x50, 0x5f, 0x50,
	0x65, 0x13, 0x2a, 0x56, 0xf2, 0x27, 0xf4, 0x05, 0x40, 0x4f, 0xde, 0x25, 0xbb, 0x83, 0x79, 0xad,
	0x9a, 0xb3, 0x77, 0x4e, 0xe3, 0x15, 0x6e, 0x55, 0x22, 0x74, 0x8b, 0x0b, 0x6a, 0xb8, 0x84, 0x24,
	0xf5, 0xed, 0xbb, 0xa9, 0x11, 0xba, 0xc5, 0xf5, 0xff, 0x0a, 0xb0, 0x92, 0x5b, 0x2b, 0x3a, 0x07,
	0xcd, 0x27, 0xc1, 0x80, 0x32, 0x26, 0x7e, 0x8a, 0x2e, 0xc5, 0xe7, 0x73, 0xf7, 0xca, 0x68, 0x4f,
	0xc8, 0x56, 0x52, 0x09, 0x1d, 0x41, 0x49, 0x50, 0xe3, 0x13, 0x69, 0xce, 0x2f, 0x79, 0x26, 0x68,
	0x56, 0xc8, 0xae, 0x07, 0xa0, 0x25, 0x52, 0x4c, 0x0e, 0x84, 0x32, 0xff, 0x81, 0x30, 0xa3, 0x9b,
	0x14, 0x1a, 0x59, 0xcd, 0xa1, 0x24, 0x76, 0x9a, 0x03, 0x25, 0xe9, 0xe1, 0x41, 0xb2, 0xe9, 0xd7,
	0x2a, 0x2c, 0xcf, 0x5a, 0x60, 0xc8, 0x9a, 0x35, 0x9a, 0xad, 0x79, 0x76, 0x5f, 0xfe, 0x54, 0xbe,
	0x4c, 0x4f, 0x65, 0x73, 0x2e, 0xb5, 0xd4, 0x40, 0xf6, 0xd2, 0x03, 0x31, 0x53, 0xdb, 0x74, 0x8e,
	0xe6, 0x6e, 0xc7, 0xcd, 0xbd, 0x2f, 0xb3, 0xf9, 0xbc, 0x00, 0x9a, 0x30, 0xf7, 0x03, 0x09, 0x7e,
	0xa3, 0x3d, 0x82, 0xce, 0xe1, 0xad, 0xaf, 0x09, 0x97, 0x3b, 0xfd, 0x83, 0x1c, 0xb6, 0x88, 0x87,
	0xef, 0xac, 0xfa, 0xf2, 0xac, 0xb5, 0xa3, 0xbf, 0xf3, 0xf7, 0xb3, 0x17, 0xff, 0xa8, 0x8b, 0x48,
	0x33, 0xc5, 0x1d, 0x66, 0xe6, 0x9f, 0xd4, 0xfe, 0x0b, 0x75, 0xa0, 0x72, 0x42, 0x99, 0x54, 0x66,
	0x48, 0xcf, 0x1d, 0x3a, 0x1b, 0x6b, 0xcf, 0x5c, 0x69, 0x93, 0x5d, 0xae, 0x57, 0x65, 0x96, 0x32,
	0x5a, 0x08, 0xb3, 0xa0, 0x1f, 0x01, 0x26, 0x2f, 0xd5, 0x94, 0xf9, 0xd9, 0x2f, 0xdc, 0x1c, 0xf3,
	0x4b, 0x52, 0x56, 0xd3, 0x23, 0xd9, 0x1d, 0x65, 0x53, 0x28, 0x4f, 0xbe, 0x7d, 0xa6, 0x95, 0xa7,
	0xbe, 0x8b, 0x6e, 0x57, 0x6e, 0x26, 0x94, 0x3b, 0x00, 0x87, 0xc4, 0x21, 0x91, 0xf2, 0x7a, 0xde,
	0xb8, 0x42, 0x48, 0x24, 0xfe, 0xee, 0xd4, 0x86, 0x3a, 0x12, 0xdf, 0x88, 0x71, 0xd7, 0x37, 0x93,
	0x5d, 0xdf, 0xa7, 0x80, 0xbc, 0xa0, 0x9f, 0xb1, 0xb3, 0x5f, 0x11, 0xe9, 0xda, 0x82, 0xde, 0x56,
	0x7e, 0xde, 0xee, 0x53, 0x7e, 0x39, 0xec, 0x1a, 0x3d, 0x6f, 0x60, 0x4a, 0xdc, 0xbe, 0xf8, 0x76,
	0xec, 0x7b, 0x9f, 0xf6, 0x89, 0x2b, 0x53, 0x98, 0x63, 0x36, 0xf6, 0x29, 0x33, 0x85, 0xc2, 0xae,
	0xf8, 0x73, 0xa3, 0x28, 0xff, 0xab, 0xe5, 0xc3, 0xe3, 0x83, 0xd3, 0x9f, 0x5a, 0xed, 0xe3, 0xee,
	0x82, 0x04, 0x7f, 0xf6, 0x2a, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xc5, 0xa8, 0x3e, 0x5b, 0x0b, 0x00,
	0x00,
}
