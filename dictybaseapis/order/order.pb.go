// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: dictybase/order/order.proto

package order

import (
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The pre-defined labels for order status
type OrderStatus int32

const (
	OrderStatus_IN_PREPARATION OrderStatus = 0
	OrderStatus_GROWING        OrderStatus = 1
	OrderStatus_CANCELLED      OrderStatus = 2
	OrderStatus_SHIPPED        OrderStatus = 3
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "IN_PREPARATION",
		1: "GROWING",
		2: "CANCELLED",
		3: "SHIPPED",
	}
	OrderStatus_value = map[string]int32{
		"IN_PREPARATION": 0,
		"GROWING":        1,
		"CANCELLED":      2,
		"SHIPPED":        3,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_dictybase_order_order_proto_enumTypes[0].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_dictybase_order_order_proto_enumTypes[0]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{0}
}

type OrderId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the order
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OrderId) Reset() {
	*x = OrderId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderId) ProtoMessage() {}

func (x *OrderId) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderId.ProtoReflect.Descriptor instead.
func (*OrderId) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *OrderId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Definition of an individual order
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Order_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetData() *Order_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// Definition of various order attributes
type OrderAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp for creation
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp for update
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Name of courier for delivery
	Courier string `protobuf:"bytes,3,opt,name=courier,proto3" json:"courier,omitempty"`
	// Account identification used for courier service
	CourierAccount string `protobuf:"bytes,4,opt,name=courier_account,json=courierAccount,proto3" json:"courier_account,omitempty"`
	// Any comments about the order
	Comments string `protobuf:"bytes,5,opt,name=comments,proto3" json:"comments,omitempty"`
	// Type of payment being used
	Payment string `protobuf:"bytes,6,opt,name=payment,proto3" json:"payment,omitempty"`
	// Order number for purchase
	PurchaseOrderNum string `protobuf:"bytes,7,opt,name=purchase_order_num,json=purchaseOrderNum,proto3" json:"purchase_order_num,omitempty"`
	// Status of order
	Status OrderStatus `protobuf:"varint,8,opt,name=status,proto3,enum=dictybase.order.OrderStatus" json:"status,omitempty"`
	// Person (user) who is receiving the stocks in mail
	Consumer string `protobuf:"bytes,9,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Person (user) who is paying for the stocks
	Payer string `protobuf:"bytes,10,opt,name=payer,proto3" json:"payer,omitempty"`
	// Person who is ordering (logged in user)
	Purchaser string `protobuf:"bytes,11,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items []string `protobuf:"bytes,12,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OrderAttributes) Reset() {
	*x = OrderAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAttributes) ProtoMessage() {}

func (x *OrderAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAttributes.ProtoReflect.Descriptor instead.
func (*OrderAttributes) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *OrderAttributes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrderAttributes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OrderAttributes) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *OrderAttributes) GetCourierAccount() string {
	if x != nil {
		return x.CourierAccount
	}
	return ""
}

func (x *OrderAttributes) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *OrderAttributes) GetPayment() string {
	if x != nil {
		return x.Payment
	}
	return ""
}

func (x *OrderAttributes) GetPurchaseOrderNum() string {
	if x != nil {
		return x.PurchaseOrderNum
	}
	return ""
}

func (x *OrderAttributes) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_IN_PREPARATION
}

func (x *OrderAttributes) GetConsumer() string {
	if x != nil {
		return x.Consumer
	}
	return ""
}

func (x *OrderAttributes) GetPayer() string {
	if x != nil {
		return x.Payer
	}
	return ""
}

func (x *OrderAttributes) GetPurchaser() string {
	if x != nil {
		return x.Purchaser
	}
	return ""
}

func (x *OrderAttributes) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

// Definition for creating a new order
type NewOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *NewOrder_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NewOrder) Reset() {
	*x = NewOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrder) ProtoMessage() {}

func (x *NewOrder) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrder.ProtoReflect.Descriptor instead.
func (*NewOrder) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{3}
}

func (x *NewOrder) GetData() *NewOrder_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// Defines attributes for creating a new order
type NewOrderAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of courier for delivery
	Courier string `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
	// Account identification used for courier service
	CourierAccount string `protobuf:"bytes,2,opt,name=courier_account,json=courierAccount,proto3" json:"courier_account,omitempty"`
	// Any comments about the order
	Comments string `protobuf:"bytes,3,opt,name=comments,proto3" json:"comments,omitempty"`
	// Type of payment being used
	Payment string `protobuf:"bytes,4,opt,name=payment,proto3" json:"payment,omitempty"`
	// Order number for purchase
	PurchaseOrderNum string `protobuf:"bytes,5,opt,name=purchase_order_num,json=purchaseOrderNum,proto3" json:"purchase_order_num,omitempty"`
	// Status of order
	Status OrderStatus `protobuf:"varint,6,opt,name=status,proto3,enum=dictybase.order.OrderStatus" json:"status,omitempty"`
	// Person (user) who is receiving the stocks in mail
	Consumer string `protobuf:"bytes,7,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Person (user) who is paying for the stocks
	Payer string `protobuf:"bytes,8,opt,name=payer,proto3" json:"payer,omitempty"`
	// Person who is ordering (logged in user)
	Purchaser string `protobuf:"bytes,9,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items []string `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NewOrderAttributes) Reset() {
	*x = NewOrderAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderAttributes) ProtoMessage() {}

func (x *NewOrderAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderAttributes.ProtoReflect.Descriptor instead.
func (*NewOrderAttributes) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{4}
}

func (x *NewOrderAttributes) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *NewOrderAttributes) GetCourierAccount() string {
	if x != nil {
		return x.CourierAccount
	}
	return ""
}

func (x *NewOrderAttributes) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *NewOrderAttributes) GetPayment() string {
	if x != nil {
		return x.Payment
	}
	return ""
}

func (x *NewOrderAttributes) GetPurchaseOrderNum() string {
	if x != nil {
		return x.PurchaseOrderNum
	}
	return ""
}

func (x *NewOrderAttributes) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_IN_PREPARATION
}

func (x *NewOrderAttributes) GetConsumer() string {
	if x != nil {
		return x.Consumer
	}
	return ""
}

func (x *NewOrderAttributes) GetPayer() string {
	if x != nil {
		return x.Payer
	}
	return ""
}

func (x *NewOrderAttributes) GetPurchaser() string {
	if x != nil {
		return x.Purchaser
	}
	return ""
}

func (x *NewOrderAttributes) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

// Definition for loading an existing order
type ExistingOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ExistingOrder_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExistingOrder) Reset() {
	*x = ExistingOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistingOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistingOrder) ProtoMessage() {}

func (x *ExistingOrder) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistingOrder.ProtoReflect.Descriptor instead.
func (*ExistingOrder) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{5}
}

func (x *ExistingOrder) GetData() *ExistingOrder_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// Defines attributes for loading an existing order
type ExistingOrderAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time order was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Time order was updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Person who is ordering (logged in user)
	Purchaser string `protobuf:"bytes,3,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items []string `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ExistingOrderAttributes) Reset() {
	*x = ExistingOrderAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistingOrderAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistingOrderAttributes) ProtoMessage() {}

func (x *ExistingOrderAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistingOrderAttributes.ProtoReflect.Descriptor instead.
func (*ExistingOrderAttributes) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{6}
}

func (x *ExistingOrderAttributes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExistingOrderAttributes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ExistingOrderAttributes) GetPurchaser() string {
	if x != nil {
		return x.Purchaser
	}
	return ""
}

func (x *ExistingOrderAttributes) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

// Definition for updating an existing order
type OrderUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *OrderUpdate_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderUpdate) Reset() {
	*x = OrderUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdate) ProtoMessage() {}

func (x *OrderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdate.ProtoReflect.Descriptor instead.
func (*OrderUpdate) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{7}
}

func (x *OrderUpdate) GetData() *OrderUpdate_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// Defines attributes for updating an existing order
type OrderUpdateAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of courier for delivery
	Courier string `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
	// Account identification used for courier service
	CourierAccount string `protobuf:"bytes,2,opt,name=courier_account,json=courierAccount,proto3" json:"courier_account,omitempty"`
	// Any comments about the order
	Comments string `protobuf:"bytes,3,opt,name=comments,proto3" json:"comments,omitempty"`
	// Type of payment being used
	Payment string `protobuf:"bytes,4,opt,name=payment,proto3" json:"payment,omitempty"`
	// Order number for purchase
	PurchaseOrderNum string `protobuf:"bytes,5,opt,name=purchase_order_num,json=purchaseOrderNum,proto3" json:"purchase_order_num,omitempty"`
	// Status of order
	Status OrderStatus `protobuf:"varint,6,opt,name=status,proto3,enum=dictybase.order.OrderStatus" json:"status,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items []string `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OrderUpdateAttributes) Reset() {
	*x = OrderUpdateAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdateAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdateAttributes) ProtoMessage() {}

func (x *OrderUpdateAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdateAttributes.ProtoReflect.Descriptor instead.
func (*OrderUpdateAttributes) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{8}
}

func (x *OrderUpdateAttributes) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *OrderUpdateAttributes) GetCourierAccount() string {
	if x != nil {
		return x.CourierAccount
	}
	return ""
}

func (x *OrderUpdateAttributes) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *OrderUpdateAttributes) GetPayment() string {
	if x != nil {
		return x.Payment
	}
	return ""
}

func (x *OrderUpdateAttributes) GetPurchaseOrderNum() string {
	if x != nil {
		return x.PurchaseOrderNum
	}
	return ""
}

func (x *OrderUpdateAttributes) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_IN_PREPARATION
}

func (x *OrderUpdateAttributes) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

// List of orders
type OrderCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*OrderCollection_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta *Meta                   `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *OrderCollection) Reset() {
	*x = OrderCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCollection) ProtoMessage() {}

func (x *OrderCollection) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCollection.ProtoReflect.Descriptor instead.
func (*OrderCollection) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{9}
}

func (x *OrderCollection) GetData() []*OrderCollection_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OrderCollection) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ListParameters defines fields for manipulating output of Order collection
type ListParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique pointer to the next set of result in the list
	Cursor int64 `protobuf:"varint,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// The `filter` field restricts the data return by the collection. To use
	// it, supply one or multiple allowed fields to filter followed
	// by a filter expression. It uses the following syntax...
	//
	//	field_name operator expression
	//
	// The following fields of `OrderAttributes` definition are allowed to
	// be used for filtering
	//   - item               - Items that are part of order (string).
	//   - courier            - The courier used for delivery (string)
	//   - payment            - Type of payment being used (string)
	//   - status             - The status of the order (string)
	//   - created_at         - Date the items are ordered (number), can be in the
	//     following formats:
	//     YYYY-MM-DD, YYYY-MM, YYYY
	//
	// field_name - Any one of the allowed field_name of the `OrderAttributes` definition.
	// operator - Defines the type of filter match to use. It could be any of
	// the following four and all of them should be URL-encoded for http request.
	//
	//	Operators for strings
	//	      =~   Contains substring
	//	      !~   Not contains substring
	//	      ===  Equals
	//	      !==  Not equals
	//
	//	Operators for number
	//	      ==  Equals
	//	      >   Greater than
	//	      <   Less than
	//	      <=  Less than equal to
	//	      >=  Greater than equal to
	//
	//	Operators for dates
	//	      $==  Equals
	//	      $>   Greater than
	//	      $<   Less than
	//	      $<=  Less than equal to
	//	      $>=  Greater than equal to
	//
	// expression - The value that will be included or excluded from the
	// result. URL-reserved characters must be URL-encoded for http request.
	//
	//	filter: "status===Shipped"
	//	filter: "courier===FedEx"
	//
	// Filter can be combined using OR or AND boolean logic.
	//
	//   - The OR is represented using a comma(,).
	//
	//   - The AND is represented using a semi-colon(;).
	//
	//   - AND and OR operators can be combined and AND takes precedence over OR.
	//
	//     filter: "courier===FedEx;payment===Credit"
	//     filter: "created_at$>=20181201"
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListParameters) Reset() {
	*x = ListParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParameters) ProtoMessage() {}

func (x *ListParameters) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParameters.ProtoReflect.Descriptor instead.
func (*ListParameters) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{10}
}

func (x *ListParameters) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListParameters) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListParameters) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Metadata definition for traversing the collection
type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A unique pointer to the next set of result in the collection. Set the
	// cursor value parameter to the value of next_cursor to retrieve the next
	// set of collection using the same method
	NextCursor int64 `protobuf:"varint,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Total number of records in the collection.
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{11}
}

func (x *Meta) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *Meta) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Meta) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Order_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name, by default should be order
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the order
	Id         string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes *OrderAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Order_Data) Reset() {
	*x = Order_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order_Data) ProtoMessage() {}

func (x *Order_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order_Data.ProtoReflect.Descriptor instead.
func (*Order_Data) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Order_Data) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order_Data) GetAttributes() *OrderAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type NewOrder_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name, by default should be order
	Type       string              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Attributes *NewOrderAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *NewOrder_Data) Reset() {
	*x = NewOrder_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrder_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrder_Data) ProtoMessage() {}

func (x *NewOrder_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrder_Data.ProtoReflect.Descriptor instead.
func (*NewOrder_Data) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{3, 0}
}

func (x *NewOrder_Data) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NewOrder_Data) GetAttributes() *NewOrderAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ExistingOrder_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name, by default should be order
	Type       string                   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Attributes *ExistingOrderAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *ExistingOrder_Data) Reset() {
	*x = ExistingOrder_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistingOrder_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistingOrder_Data) ProtoMessage() {}

func (x *ExistingOrder_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistingOrder_Data.ProtoReflect.Descriptor instead.
func (*ExistingOrder_Data) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ExistingOrder_Data) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExistingOrder_Data) GetAttributes() *ExistingOrderAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type OrderUpdate_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name, by default should be order
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the order
	Id         string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes *OrderUpdateAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *OrderUpdate_Data) Reset() {
	*x = OrderUpdate_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdate_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdate_Data) ProtoMessage() {}

func (x *OrderUpdate_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdate_Data.ProtoReflect.Descriptor instead.
func (*OrderUpdate_Data) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{7, 0}
}

func (x *OrderUpdate_Data) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderUpdate_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderUpdate_Data) GetAttributes() *OrderUpdateAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type OrderCollection_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name, by default should be order
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the order
	Id         string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes *OrderAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *OrderCollection_Data) Reset() {
	*x = OrderCollection_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_order_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCollection_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCollection_Data) ProtoMessage() {}

func (x *OrderCollection_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_order_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCollection_Data.ProtoReflect.Descriptor instead.
func (*OrderCollection_Data) Descriptor() ([]byte, []int) {
	return file_dictybase_order_order_proto_rawDescGZIP(), []int{9, 0}
}

func (x *OrderCollection_Data) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderCollection_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderCollection_Data) GetAttributes() *OrderAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

var File_dictybase_order_order_proto protoreflect.FileDescriptor

var file_dictybase_order_order_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64,
	0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b,
	0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x58, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6c, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69, 0x63,
	0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xda, 0x03, 0x0a, 0x0f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x20, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x41, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x63, 0x74,
	0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x5f,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22,
	0x9f, 0x03, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x10, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x3c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x20, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x09, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x64, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x48, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x17, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20,
	0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x09,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xc8, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x7a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x15,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64,
	0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x69, 0x63,
	0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x31, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x1a, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x22, 0x56, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2a, 0x4a, 0x0a,
	0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52, 0x4f, 0x57, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x48, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x03, 0x32, 0xb8, 0x03, 0x0a, 0x0c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x1a, 0x16, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x64, 0x69, 0x63, 0x74,
	0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x77, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e,
	0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x64, 0x69,
	0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x4c, 0x6f, 0x61, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x6d, 0x0a, 0x13, 0x6f, 0x72, 0x67, 0x2e, 0x64, 0x69, 0x63, 0x74,
	0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x79, 0x42, 0x61, 0x73, 0x65, 0x2f,
	0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x63, 0x74,
	0x79, 0x62, 0x61, 0x73, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x08, 0x44, 0x49, 0x43, 0x54, 0x59,
	0x41, 0x50, 0x49, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dictybase_order_order_proto_rawDescOnce sync.Once
	file_dictybase_order_order_proto_rawDescData = file_dictybase_order_order_proto_rawDesc
)

func file_dictybase_order_order_proto_rawDescGZIP() []byte {
	file_dictybase_order_order_proto_rawDescOnce.Do(func() {
		file_dictybase_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_dictybase_order_order_proto_rawDescData)
	})
	return file_dictybase_order_order_proto_rawDescData
}

var file_dictybase_order_order_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dictybase_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_dictybase_order_order_proto_goTypes = []interface{}{
	(OrderStatus)(0),                // 0: dictybase.order.OrderStatus
	(*OrderId)(nil),                 // 1: dictybase.order.OrderId
	(*Order)(nil),                   // 2: dictybase.order.Order
	(*OrderAttributes)(nil),         // 3: dictybase.order.OrderAttributes
	(*NewOrder)(nil),                // 4: dictybase.order.NewOrder
	(*NewOrderAttributes)(nil),      // 5: dictybase.order.NewOrderAttributes
	(*ExistingOrder)(nil),           // 6: dictybase.order.ExistingOrder
	(*ExistingOrderAttributes)(nil), // 7: dictybase.order.ExistingOrderAttributes
	(*OrderUpdate)(nil),             // 8: dictybase.order.OrderUpdate
	(*OrderUpdateAttributes)(nil),   // 9: dictybase.order.OrderUpdateAttributes
	(*OrderCollection)(nil),         // 10: dictybase.order.OrderCollection
	(*ListParameters)(nil),          // 11: dictybase.order.ListParameters
	(*Meta)(nil),                    // 12: dictybase.order.Meta
	(*Order_Data)(nil),              // 13: dictybase.order.Order.Data
	(*NewOrder_Data)(nil),           // 14: dictybase.order.NewOrder.Data
	(*ExistingOrder_Data)(nil),      // 15: dictybase.order.ExistingOrder.Data
	(*OrderUpdate_Data)(nil),        // 16: dictybase.order.OrderUpdate.Data
	(*OrderCollection_Data)(nil),    // 17: dictybase.order.OrderCollection.Data
	(*timestamppb.Timestamp)(nil),   // 18: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),           // 19: google.protobuf.Empty
}
var file_dictybase_order_order_proto_depIdxs = []int32{
	13, // 0: dictybase.order.Order.data:type_name -> dictybase.order.Order.Data
	18, // 1: dictybase.order.OrderAttributes.created_at:type_name -> google.protobuf.Timestamp
	18, // 2: dictybase.order.OrderAttributes.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: dictybase.order.OrderAttributes.status:type_name -> dictybase.order.OrderStatus
	14, // 4: dictybase.order.NewOrder.data:type_name -> dictybase.order.NewOrder.Data
	0,  // 5: dictybase.order.NewOrderAttributes.status:type_name -> dictybase.order.OrderStatus
	15, // 6: dictybase.order.ExistingOrder.data:type_name -> dictybase.order.ExistingOrder.Data
	18, // 7: dictybase.order.ExistingOrderAttributes.created_at:type_name -> google.protobuf.Timestamp
	18, // 8: dictybase.order.ExistingOrderAttributes.updated_at:type_name -> google.protobuf.Timestamp
	16, // 9: dictybase.order.OrderUpdate.data:type_name -> dictybase.order.OrderUpdate.Data
	0,  // 10: dictybase.order.OrderUpdateAttributes.status:type_name -> dictybase.order.OrderStatus
	17, // 11: dictybase.order.OrderCollection.data:type_name -> dictybase.order.OrderCollection.Data
	12, // 12: dictybase.order.OrderCollection.meta:type_name -> dictybase.order.Meta
	3,  // 13: dictybase.order.Order.Data.attributes:type_name -> dictybase.order.OrderAttributes
	5,  // 14: dictybase.order.NewOrder.Data.attributes:type_name -> dictybase.order.NewOrderAttributes
	7,  // 15: dictybase.order.ExistingOrder.Data.attributes:type_name -> dictybase.order.ExistingOrderAttributes
	9,  // 16: dictybase.order.OrderUpdate.Data.attributes:type_name -> dictybase.order.OrderUpdateAttributes
	3,  // 17: dictybase.order.OrderCollection.Data.attributes:type_name -> dictybase.order.OrderAttributes
	1,  // 18: dictybase.order.OrderService.GetOrder:input_type -> dictybase.order.OrderId
	4,  // 19: dictybase.order.OrderService.CreateOrder:input_type -> dictybase.order.NewOrder
	8,  // 20: dictybase.order.OrderService.UpdateOrder:input_type -> dictybase.order.OrderUpdate
	11, // 21: dictybase.order.OrderService.ListOrders:input_type -> dictybase.order.ListParameters
	6,  // 22: dictybase.order.OrderService.LoadOrder:input_type -> dictybase.order.ExistingOrder
	19, // 23: dictybase.order.OrderService.PrepareForOrder:input_type -> google.protobuf.Empty
	2,  // 24: dictybase.order.OrderService.GetOrder:output_type -> dictybase.order.Order
	2,  // 25: dictybase.order.OrderService.CreateOrder:output_type -> dictybase.order.Order
	2,  // 26: dictybase.order.OrderService.UpdateOrder:output_type -> dictybase.order.Order
	10, // 27: dictybase.order.OrderService.ListOrders:output_type -> dictybase.order.OrderCollection
	2,  // 28: dictybase.order.OrderService.LoadOrder:output_type -> dictybase.order.Order
	19, // 29: dictybase.order.OrderService.PrepareForOrder:output_type -> google.protobuf.Empty
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_dictybase_order_order_proto_init() }
func file_dictybase_order_order_proto_init() {
	if File_dictybase_order_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dictybase_order_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistingOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistingOrderAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdateAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrder_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistingOrder_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdate_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_order_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCollection_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dictybase_order_order_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dictybase_order_order_proto_goTypes,
		DependencyIndexes: file_dictybase_order_order_proto_depIdxs,
		EnumInfos:         file_dictybase_order_order_proto_enumTypes,
		MessageInfos:      file_dictybase_order_order_proto_msgTypes,
	}.Build()
	File_dictybase_order_order_proto = out.File
	file_dictybase_order_order_proto_rawDesc = nil
	file_dictybase_order_order_proto_goTypes = nil
	file_dictybase_order_order_proto_depIdxs = nil
}
