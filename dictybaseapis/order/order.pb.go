// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package order

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The pre-defined labels for order status
type OrderStatus int32

const (
	OrderStatus_In_preparation OrderStatus = 0
	OrderStatus_Growing        OrderStatus = 1
	OrderStatus_Cancelled      OrderStatus = 2
	OrderStatus_Shipped        OrderStatus = 3
)

var OrderStatus_name = map[int32]string{
	0: "In_preparation",
	1: "Growing",
	2: "Cancelled",
	3: "Shipped",
}

var OrderStatus_value = map[string]int32{
	"In_preparation": 0,
	"Growing":        1,
	"Cancelled":      2,
	"Shipped":        3,
}

func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}

func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

type OrderId struct {
	// Unique identifier for the order
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderId) Reset()         { *m = OrderId{} }
func (m *OrderId) String() string { return proto.CompactTextString(m) }
func (*OrderId) ProtoMessage()    {}
func (*OrderId) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *OrderId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderId.Unmarshal(m, b)
}
func (m *OrderId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderId.Marshal(b, m, deterministic)
}
func (m *OrderId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderId.Merge(m, src)
}
func (m *OrderId) XXX_Size() int {
	return xxx_messageInfo_OrderId.Size(m)
}
func (m *OrderId) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderId.DiscardUnknown(m)
}

var xxx_messageInfo_OrderId proto.InternalMessageInfo

func (m *OrderId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Definition of an individual order
type Order struct {
	Data                 *Order_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetData() *Order_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Order_Data struct {
	// Resource name, by default should be order
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the order
	Id                   string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *OrderAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Order_Data) Reset()         { *m = Order_Data{} }
func (m *Order_Data) String() string { return proto.CompactTextString(m) }
func (*Order_Data) ProtoMessage()    {}
func (*Order_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1, 0}
}

func (m *Order_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order_Data.Unmarshal(m, b)
}
func (m *Order_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order_Data.Marshal(b, m, deterministic)
}
func (m *Order_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order_Data.Merge(m, src)
}
func (m *Order_Data) XXX_Size() int {
	return xxx_messageInfo_Order_Data.Size(m)
}
func (m *Order_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Order_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Order_Data proto.InternalMessageInfo

func (m *Order_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Order_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order_Data) GetAttributes() *OrderAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Definition of various order attributes
type OrderAttributes struct {
	// Timestamp for creation
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp for update
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Name of courier for delivery
	Courier string `protobuf:"bytes,3,opt,name=courier,proto3" json:"courier,omitempty"`
	// Account identification used for courier service
	CourierAccount string `protobuf:"bytes,4,opt,name=courier_account,json=courierAccount,proto3" json:"courier_account,omitempty"`
	// Any comments about the order
	Comments string `protobuf:"bytes,5,opt,name=comments,proto3" json:"comments,omitempty"`
	// Type of payment being used
	Payment string `protobuf:"bytes,6,opt,name=payment,proto3" json:"payment,omitempty"`
	// Order number for purchase
	PurchaseOrderNum string `protobuf:"bytes,7,opt,name=purchase_order_num,json=purchaseOrderNum,proto3" json:"purchase_order_num,omitempty"`
	// Status of order
	Status OrderStatus `protobuf:"varint,8,opt,name=status,proto3,enum=dictybase.order.OrderStatus" json:"status,omitempty"`
	// Person (user) who is receiving the stocks in mail
	Consumer string `protobuf:"bytes,9,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Person (user) who is paying for the stocks
	Payer string `protobuf:"bytes,10,opt,name=payer,proto3" json:"payer,omitempty"`
	// Person who is ordering (logged in user)
	Purchaser string `protobuf:"bytes,11,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items                []string `protobuf:"bytes,12,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderAttributes) Reset()         { *m = OrderAttributes{} }
func (m *OrderAttributes) String() string { return proto.CompactTextString(m) }
func (*OrderAttributes) ProtoMessage()    {}
func (*OrderAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *OrderAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderAttributes.Unmarshal(m, b)
}
func (m *OrderAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderAttributes.Marshal(b, m, deterministic)
}
func (m *OrderAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderAttributes.Merge(m, src)
}
func (m *OrderAttributes) XXX_Size() int {
	return xxx_messageInfo_OrderAttributes.Size(m)
}
func (m *OrderAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_OrderAttributes proto.InternalMessageInfo

func (m *OrderAttributes) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrderAttributes) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *OrderAttributes) GetCourier() string {
	if m != nil {
		return m.Courier
	}
	return ""
}

func (m *OrderAttributes) GetCourierAccount() string {
	if m != nil {
		return m.CourierAccount
	}
	return ""
}

func (m *OrderAttributes) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *OrderAttributes) GetPayment() string {
	if m != nil {
		return m.Payment
	}
	return ""
}

func (m *OrderAttributes) GetPurchaseOrderNum() string {
	if m != nil {
		return m.PurchaseOrderNum
	}
	return ""
}

func (m *OrderAttributes) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return OrderStatus_In_preparation
}

func (m *OrderAttributes) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *OrderAttributes) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *OrderAttributes) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

func (m *OrderAttributes) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// Definition for creating a new order
type NewOrder struct {
	Data                 *NewOrder_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NewOrder) Reset()         { *m = NewOrder{} }
func (m *NewOrder) String() string { return proto.CompactTextString(m) }
func (*NewOrder) ProtoMessage()    {}
func (*NewOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *NewOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrder.Unmarshal(m, b)
}
func (m *NewOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrder.Marshal(b, m, deterministic)
}
func (m *NewOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrder.Merge(m, src)
}
func (m *NewOrder) XXX_Size() int {
	return xxx_messageInfo_NewOrder.Size(m)
}
func (m *NewOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrder.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrder proto.InternalMessageInfo

func (m *NewOrder) GetData() *NewOrder_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type NewOrder_Data struct {
	// Resource name, by default should be order
	Type                 string              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Attributes           *NewOrderAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NewOrder_Data) Reset()         { *m = NewOrder_Data{} }
func (m *NewOrder_Data) String() string { return proto.CompactTextString(m) }
func (*NewOrder_Data) ProtoMessage()    {}
func (*NewOrder_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3, 0}
}

func (m *NewOrder_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrder_Data.Unmarshal(m, b)
}
func (m *NewOrder_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrder_Data.Marshal(b, m, deterministic)
}
func (m *NewOrder_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrder_Data.Merge(m, src)
}
func (m *NewOrder_Data) XXX_Size() int {
	return xxx_messageInfo_NewOrder_Data.Size(m)
}
func (m *NewOrder_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrder_Data.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrder_Data proto.InternalMessageInfo

func (m *NewOrder_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NewOrder_Data) GetAttributes() *NewOrderAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Defines attributes for creating a new order
type NewOrderAttributes struct {
	// Name of courier for delivery
	Courier string `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
	// Account identification used for courier service
	CourierAccount string `protobuf:"bytes,2,opt,name=courier_account,json=courierAccount,proto3" json:"courier_account,omitempty"`
	// Any comments about the order
	Comments string `protobuf:"bytes,3,opt,name=comments,proto3" json:"comments,omitempty"`
	// Type of payment being used
	Payment string `protobuf:"bytes,4,opt,name=payment,proto3" json:"payment,omitempty"`
	// Order number for purchase
	PurchaseOrderNum string `protobuf:"bytes,5,opt,name=purchase_order_num,json=purchaseOrderNum,proto3" json:"purchase_order_num,omitempty"`
	// Status of order
	Status OrderStatus `protobuf:"varint,6,opt,name=status,proto3,enum=dictybase.order.OrderStatus" json:"status,omitempty"`
	// Person (user) who is receiving the stocks in mail
	Consumer string `protobuf:"bytes,7,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Person (user) who is paying for the stocks
	Payer string `protobuf:"bytes,8,opt,name=payer,proto3" json:"payer,omitempty"`
	// Person who is ordering (logged in user)
	Purchaser string `protobuf:"bytes,9,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items                []string `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewOrderAttributes) Reset()         { *m = NewOrderAttributes{} }
func (m *NewOrderAttributes) String() string { return proto.CompactTextString(m) }
func (*NewOrderAttributes) ProtoMessage()    {}
func (*NewOrderAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{4}
}

func (m *NewOrderAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrderAttributes.Unmarshal(m, b)
}
func (m *NewOrderAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrderAttributes.Marshal(b, m, deterministic)
}
func (m *NewOrderAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrderAttributes.Merge(m, src)
}
func (m *NewOrderAttributes) XXX_Size() int {
	return xxx_messageInfo_NewOrderAttributes.Size(m)
}
func (m *NewOrderAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrderAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrderAttributes proto.InternalMessageInfo

func (m *NewOrderAttributes) GetCourier() string {
	if m != nil {
		return m.Courier
	}
	return ""
}

func (m *NewOrderAttributes) GetCourierAccount() string {
	if m != nil {
		return m.CourierAccount
	}
	return ""
}

func (m *NewOrderAttributes) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *NewOrderAttributes) GetPayment() string {
	if m != nil {
		return m.Payment
	}
	return ""
}

func (m *NewOrderAttributes) GetPurchaseOrderNum() string {
	if m != nil {
		return m.PurchaseOrderNum
	}
	return ""
}

func (m *NewOrderAttributes) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return OrderStatus_In_preparation
}

func (m *NewOrderAttributes) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *NewOrderAttributes) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *NewOrderAttributes) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

func (m *NewOrderAttributes) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// Definition for loading an existing order
type ExistingOrder struct {
	Data                 *ExistingOrder_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ExistingOrder) Reset()         { *m = ExistingOrder{} }
func (m *ExistingOrder) String() string { return proto.CompactTextString(m) }
func (*ExistingOrder) ProtoMessage()    {}
func (*ExistingOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{5}
}

func (m *ExistingOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingOrder.Unmarshal(m, b)
}
func (m *ExistingOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingOrder.Marshal(b, m, deterministic)
}
func (m *ExistingOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingOrder.Merge(m, src)
}
func (m *ExistingOrder) XXX_Size() int {
	return xxx_messageInfo_ExistingOrder.Size(m)
}
func (m *ExistingOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingOrder proto.InternalMessageInfo

func (m *ExistingOrder) GetData() *ExistingOrder_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExistingOrder_Data struct {
	// Resource name, by default should be order
	Type                 string                   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Attributes           *ExistingOrderAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ExistingOrder_Data) Reset()         { *m = ExistingOrder_Data{} }
func (m *ExistingOrder_Data) String() string { return proto.CompactTextString(m) }
func (*ExistingOrder_Data) ProtoMessage()    {}
func (*ExistingOrder_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{5, 0}
}

func (m *ExistingOrder_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingOrder_Data.Unmarshal(m, b)
}
func (m *ExistingOrder_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingOrder_Data.Marshal(b, m, deterministic)
}
func (m *ExistingOrder_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingOrder_Data.Merge(m, src)
}
func (m *ExistingOrder_Data) XXX_Size() int {
	return xxx_messageInfo_ExistingOrder_Data.Size(m)
}
func (m *ExistingOrder_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingOrder_Data.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingOrder_Data proto.InternalMessageInfo

func (m *ExistingOrder_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ExistingOrder_Data) GetAttributes() *ExistingOrderAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Defines attributes for loading an existing order
type ExistingOrderAttributes struct {
	// Time order was created
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Time order was updated
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Name of courier for delivery
	Courier string `protobuf:"bytes,3,opt,name=courier,proto3" json:"courier,omitempty"`
	// Account identification used for courier service
	CourierAccount string `protobuf:"bytes,4,opt,name=courier_account,json=courierAccount,proto3" json:"courier_account,omitempty"`
	// Any comments about the order
	Comments string `protobuf:"bytes,5,opt,name=comments,proto3" json:"comments,omitempty"`
	// Type of payment being used
	Payment string `protobuf:"bytes,6,opt,name=payment,proto3" json:"payment,omitempty"`
	// Order number for purchase
	PurchaseOrderNum string `protobuf:"bytes,7,opt,name=purchase_order_num,json=purchaseOrderNum,proto3" json:"purchase_order_num,omitempty"`
	// Status of order
	Status OrderStatus `protobuf:"varint,8,opt,name=status,proto3,enum=dictybase.order.OrderStatus" json:"status,omitempty"`
	// Person (user) who is receiving the stocks in mail
	Consumer string `protobuf:"bytes,9,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Person (user) who is paying for the stocks
	Payer string `protobuf:"bytes,10,opt,name=payer,proto3" json:"payer,omitempty"`
	// Person who is ordering (logged in user)
	Purchaser string `protobuf:"bytes,11,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items                []string `protobuf:"bytes,12,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistingOrderAttributes) Reset()         { *m = ExistingOrderAttributes{} }
func (m *ExistingOrderAttributes) String() string { return proto.CompactTextString(m) }
func (*ExistingOrderAttributes) ProtoMessage()    {}
func (*ExistingOrderAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{6}
}

func (m *ExistingOrderAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistingOrderAttributes.Unmarshal(m, b)
}
func (m *ExistingOrderAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistingOrderAttributes.Marshal(b, m, deterministic)
}
func (m *ExistingOrderAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistingOrderAttributes.Merge(m, src)
}
func (m *ExistingOrderAttributes) XXX_Size() int {
	return xxx_messageInfo_ExistingOrderAttributes.Size(m)
}
func (m *ExistingOrderAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistingOrderAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_ExistingOrderAttributes proto.InternalMessageInfo

func (m *ExistingOrderAttributes) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ExistingOrderAttributes) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *ExistingOrderAttributes) GetCourier() string {
	if m != nil {
		return m.Courier
	}
	return ""
}

func (m *ExistingOrderAttributes) GetCourierAccount() string {
	if m != nil {
		return m.CourierAccount
	}
	return ""
}

func (m *ExistingOrderAttributes) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *ExistingOrderAttributes) GetPayment() string {
	if m != nil {
		return m.Payment
	}
	return ""
}

func (m *ExistingOrderAttributes) GetPurchaseOrderNum() string {
	if m != nil {
		return m.PurchaseOrderNum
	}
	return ""
}

func (m *ExistingOrderAttributes) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return OrderStatus_In_preparation
}

func (m *ExistingOrderAttributes) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *ExistingOrderAttributes) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *ExistingOrderAttributes) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

func (m *ExistingOrderAttributes) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// Definition for updating an existing order
type OrderUpdate struct {
	Data                 *OrderUpdate_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderUpdate) Reset()         { *m = OrderUpdate{} }
func (m *OrderUpdate) String() string { return proto.CompactTextString(m) }
func (*OrderUpdate) ProtoMessage()    {}
func (*OrderUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{7}
}

func (m *OrderUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderUpdate.Unmarshal(m, b)
}
func (m *OrderUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderUpdate.Marshal(b, m, deterministic)
}
func (m *OrderUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderUpdate.Merge(m, src)
}
func (m *OrderUpdate) XXX_Size() int {
	return xxx_messageInfo_OrderUpdate.Size(m)
}
func (m *OrderUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_OrderUpdate proto.InternalMessageInfo

func (m *OrderUpdate) GetData() *OrderUpdate_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type OrderUpdate_Data struct {
	// Resource name, by default should be order
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the order
	Id                   string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *OrderUpdateAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *OrderUpdate_Data) Reset()         { *m = OrderUpdate_Data{} }
func (m *OrderUpdate_Data) String() string { return proto.CompactTextString(m) }
func (*OrderUpdate_Data) ProtoMessage()    {}
func (*OrderUpdate_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{7, 0}
}

func (m *OrderUpdate_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderUpdate_Data.Unmarshal(m, b)
}
func (m *OrderUpdate_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderUpdate_Data.Marshal(b, m, deterministic)
}
func (m *OrderUpdate_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderUpdate_Data.Merge(m, src)
}
func (m *OrderUpdate_Data) XXX_Size() int {
	return xxx_messageInfo_OrderUpdate_Data.Size(m)
}
func (m *OrderUpdate_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderUpdate_Data.DiscardUnknown(m)
}

var xxx_messageInfo_OrderUpdate_Data proto.InternalMessageInfo

func (m *OrderUpdate_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderUpdate_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderUpdate_Data) GetAttributes() *OrderUpdateAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Defines attributes for updating an existing order
type OrderUpdateAttributes struct {
	// Name of courier for delivery
	Courier string `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
	// Account identification used for courier service
	CourierAccount string `protobuf:"bytes,2,opt,name=courier_account,json=courierAccount,proto3" json:"courier_account,omitempty"`
	// Any comments about the order
	Comments string `protobuf:"bytes,3,opt,name=comments,proto3" json:"comments,omitempty"`
	// Type of payment being used
	Payment string `protobuf:"bytes,4,opt,name=payment,proto3" json:"payment,omitempty"`
	// Order number for purchase
	PurchaseOrderNum string `protobuf:"bytes,5,opt,name=purchase_order_num,json=purchaseOrderNum,proto3" json:"purchase_order_num,omitempty"`
	// Status of order
	Status OrderStatus `protobuf:"varint,6,opt,name=status,proto3,enum=dictybase.order.OrderStatus" json:"status,omitempty"`
	// List of items in the order, in this case it will be mostly biological
	// stocks such as plasmids and strains
	Items                []string `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderUpdateAttributes) Reset()         { *m = OrderUpdateAttributes{} }
func (m *OrderUpdateAttributes) String() string { return proto.CompactTextString(m) }
func (*OrderUpdateAttributes) ProtoMessage()    {}
func (*OrderUpdateAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{8}
}

func (m *OrderUpdateAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderUpdateAttributes.Unmarshal(m, b)
}
func (m *OrderUpdateAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderUpdateAttributes.Marshal(b, m, deterministic)
}
func (m *OrderUpdateAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderUpdateAttributes.Merge(m, src)
}
func (m *OrderUpdateAttributes) XXX_Size() int {
	return xxx_messageInfo_OrderUpdateAttributes.Size(m)
}
func (m *OrderUpdateAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderUpdateAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_OrderUpdateAttributes proto.InternalMessageInfo

func (m *OrderUpdateAttributes) GetCourier() string {
	if m != nil {
		return m.Courier
	}
	return ""
}

func (m *OrderUpdateAttributes) GetCourierAccount() string {
	if m != nil {
		return m.CourierAccount
	}
	return ""
}

func (m *OrderUpdateAttributes) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *OrderUpdateAttributes) GetPayment() string {
	if m != nil {
		return m.Payment
	}
	return ""
}

func (m *OrderUpdateAttributes) GetPurchaseOrderNum() string {
	if m != nil {
		return m.PurchaseOrderNum
	}
	return ""
}

func (m *OrderUpdateAttributes) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return OrderStatus_In_preparation
}

func (m *OrderUpdateAttributes) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// List of orders
type OrderCollection struct {
	Data                 []*OrderCollection_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta                 *Meta                   `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *OrderCollection) Reset()         { *m = OrderCollection{} }
func (m *OrderCollection) String() string { return proto.CompactTextString(m) }
func (*OrderCollection) ProtoMessage()    {}
func (*OrderCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{9}
}

func (m *OrderCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCollection.Unmarshal(m, b)
}
func (m *OrderCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCollection.Marshal(b, m, deterministic)
}
func (m *OrderCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCollection.Merge(m, src)
}
func (m *OrderCollection) XXX_Size() int {
	return xxx_messageInfo_OrderCollection.Size(m)
}
func (m *OrderCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCollection.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCollection proto.InternalMessageInfo

func (m *OrderCollection) GetData() []*OrderCollection_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *OrderCollection) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type OrderCollection_Data struct {
	// Resource name, by default should be order
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Unique identifier for the order
	Id                   string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *OrderAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OrderCollection_Data) Reset()         { *m = OrderCollection_Data{} }
func (m *OrderCollection_Data) String() string { return proto.CompactTextString(m) }
func (*OrderCollection_Data) ProtoMessage()    {}
func (*OrderCollection_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{9, 0}
}

func (m *OrderCollection_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCollection_Data.Unmarshal(m, b)
}
func (m *OrderCollection_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCollection_Data.Marshal(b, m, deterministic)
}
func (m *OrderCollection_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCollection_Data.Merge(m, src)
}
func (m *OrderCollection_Data) XXX_Size() int {
	return xxx_messageInfo_OrderCollection_Data.Size(m)
}
func (m *OrderCollection_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCollection_Data.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCollection_Data proto.InternalMessageInfo

func (m *OrderCollection_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderCollection_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderCollection_Data) GetAttributes() *OrderAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// ListParameters defines fields for manipulating output of Order collection
type ListParameters struct {
	// A unique pointer to the next set of result in the list
	Cursor int64 `protobuf:"varint,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// The `filter` field restricts the data return by the collection. To use
	// it, supply one or multiple allowed fields to filter followed
	// by a filter expression. It uses the following syntax...
	//        field_name operator expression
	//
	// The following fields of `OrderAttributes` definition are allowed to
	// be used for filtering
	//   * item               - Items that are part of order (string).
	//   * courier            - The courier used for delivery (string)
	//   * payment            - Type of payment being used (string)
	//   * status             - The status of the order (string)
	//   * created_at         - Date the items are ordered (number), can be in the
	//                          following formats:
	//                          YYYY-MM-DD, YYYY-MM, YYYY
	//
	// field_name - Any one of the allowed field_name of the `OrderAttributes` definition.
	// operator - Defines the type of filter match to use. It could be any of
	// the following four and all of them should be URL-encoded for http request.
	//
	//        Operators for strings
	//              =~   Contains substring
	//              !~   Not contains substring
	//              ===  Equals
	//              !==  Not equals
	//
	//        Operators for number
	//              ==  Equals
	//              >   Greater than
	//              <   Less than
	//              <=  Less than equal to
	//              >=  Greater than equal to
	//
	//        Operators for dates
	//              $==  Equals
	//              $>   Greater than
	//              $<   Less than
	//              $<=  Less than equal to
	//              $>=  Greater than equal to
	//
	// expression - The value that will be included or excluded from the
	// result. URL-reserved characters must be URL-encoded for http request.
	//
	//           filter: "status===Shipped"
	//           filter: "courier===FedEx"
	//
	// Filter can be combined using OR or AND boolean logic.
	//   * The OR is represented using a comma(,).
	//   * The AND is represented using a semi-colon(;).
	//   * AND and OR operators can be combined and AND takes precedence over OR.
	//
	//           filter: "courier===FedEx;payment===Credit"
	//           filter: "created_at$>=20181201"
	//
	Filter               string   `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListParameters) Reset()         { *m = ListParameters{} }
func (m *ListParameters) String() string { return proto.CompactTextString(m) }
func (*ListParameters) ProtoMessage()    {}
func (*ListParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{10}
}

func (m *ListParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListParameters.Unmarshal(m, b)
}
func (m *ListParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListParameters.Marshal(b, m, deterministic)
}
func (m *ListParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListParameters.Merge(m, src)
}
func (m *ListParameters) XXX_Size() int {
	return xxx_messageInfo_ListParameters.Size(m)
}
func (m *ListParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_ListParameters.DiscardUnknown(m)
}

var xxx_messageInfo_ListParameters proto.InternalMessageInfo

func (m *ListParameters) GetCursor() int64 {
	if m != nil {
		return m.Cursor
	}
	return 0
}

func (m *ListParameters) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListParameters) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// Metadata definition for traversing the collection
type Meta struct {
	// A unique pointer to the next set of result in the collection. Set the
	// cursor value parameter to the value of next_cursor to retrieve the next
	// set of collection using the same method
	NextCursor int64 `protobuf:"varint,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Total number of records in the collection.
	Total                int64    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{11}
}

func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetNextCursor() int64 {
	if m != nil {
		return m.NextCursor
	}
	return 0
}

func (m *Meta) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Meta) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterEnum("dictybase.order.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterType((*OrderId)(nil), "dictybase.order.OrderId")
	proto.RegisterType((*Order)(nil), "dictybase.order.Order")
	proto.RegisterType((*Order_Data)(nil), "dictybase.order.Order.Data")
	proto.RegisterType((*OrderAttributes)(nil), "dictybase.order.OrderAttributes")
	proto.RegisterType((*NewOrder)(nil), "dictybase.order.NewOrder")
	proto.RegisterType((*NewOrder_Data)(nil), "dictybase.order.NewOrder.Data")
	proto.RegisterType((*NewOrderAttributes)(nil), "dictybase.order.NewOrderAttributes")
	proto.RegisterType((*ExistingOrder)(nil), "dictybase.order.ExistingOrder")
	proto.RegisterType((*ExistingOrder_Data)(nil), "dictybase.order.ExistingOrder.Data")
	proto.RegisterType((*ExistingOrderAttributes)(nil), "dictybase.order.ExistingOrderAttributes")
	proto.RegisterType((*OrderUpdate)(nil), "dictybase.order.OrderUpdate")
	proto.RegisterType((*OrderUpdate_Data)(nil), "dictybase.order.OrderUpdate.Data")
	proto.RegisterType((*OrderUpdateAttributes)(nil), "dictybase.order.OrderUpdateAttributes")
	proto.RegisterType((*OrderCollection)(nil), "dictybase.order.OrderCollection")
	proto.RegisterType((*OrderCollection_Data)(nil), "dictybase.order.OrderCollection.Data")
	proto.RegisterType((*ListParameters)(nil), "dictybase.order.ListParameters")
	proto.RegisterType((*Meta)(nil), "dictybase.order.Meta")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 1069 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x97, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0xc7, 0x6b, 0x3b, 0x9f, 0x27, 0xdb, 0xdd, 0x68, 0x68, 0x17, 0x13, 0xa2, 0x6e, 0x1a, 0x0a,
	0xac, 0x10, 0x4d, 0xc4, 0x52, 0x81, 0x54, 0x3e, 0x93, 0xb4, 0x94, 0xa0, 0x52, 0x96, 0x6c, 0x41,
	0xc0, 0x4d, 0x34, 0xb1, 0xa7, 0xd9, 0x11, 0xb6, 0xc7, 0x1a, 0x8f, 0xbb, 0x5d, 0x1e, 0x81, 0x97,
	0x40, 0xe2, 0x86, 0x3b, 0x2e, 0x79, 0x06, 0x9e, 0x81, 0x1b, 0x24, 0x1e, 0x01, 0x84, 0xc4, 0x25,
	0xf2, 0x8c, 0xed, 0xd8, 0x1b, 0xc7, 0x29, 0x37, 0x88, 0x0b, 0x6e, 0x22, 0x9f, 0x39, 0xff, 0x39,
	0x67, 0x7c, 0xce, 0xcf, 0x33, 0x13, 0x68, 0x31, 0x6e, 0x13, 0x3e, 0xf0, 0x39, 0x13, 0x0c, 0xed,
	0xd9, 0xd4, 0x12, 0xe7, 0x0b, 0x1c, 0x90, 0x81, 0x1c, 0xee, 0x74, 0x97, 0x8c, 0x2d, 0x1d, 0x32,
	0xc4, 0x3e, 0x1d, 0x62, 0xcf, 0x63, 0x02, 0x0b, 0xca, 0xbc, 0x40, 0xc9, 0x3b, 0x07, 0xb1, 0x57,
	0x5a, 0x8b, 0xf0, 0xd1, 0x50, 0x50, 0x97, 0x04, 0x02, 0xbb, 0x7e, 0x2c, 0x78, 0x63, 0x49, 0xc5,
	0x69, 0xb8, 0x18, 0x58, 0xcc, 0x1d, 0xba, 0x67, 0x54, 0x7c, 0xcd, 0xce, 0x86, 0x4b, 0x76, 0x53,
	0x3a, 0x6f, 0x3e, 0xc6, 0x0e, 0xb5, 0xb1, 0x60, 0x3c, 0x18, 0xa6, 0x8f, 0x6a, 0x5e, 0xff, 0x3a,
	0xd4, 0x3f, 0x89, 0xf2, 0x4f, 0x6d, 0xb4, 0x0f, 0x3a, 0xb5, 0x4d, 0xad, 0xa7, 0x1d, 0x36, 0xc7,
	0xb5, 0xdf, 0x7e, 0x3d, 0xd0, 0xbf, 0xd0, 0x66, 0x3a, 0xb5, 0xfb, 0x3f, 0x6a, 0x50, 0x95, 0x1a,
	0xf4, 0x26, 0x54, 0x6c, 0x2c, 0xb0, 0xd4, 0xb4, 0x8e, 0x9e, 0x1f, 0x5c, 0x78, 0x87, 0x81, 0x54,
	0x0d, 0xee, 0x60, 0x81, 0x55, 0x80, 0x9e, 0x36, 0x93, 0x13, 0x3a, 0x0e, 0x54, 0xa2, 0x51, 0x84,
	0xa0, 0x22, 0xce, 0x7d, 0xa2, 0x92, 0xcc, 0xe4, 0x33, 0xda, 0x95, 0x69, 0x75, 0x39, 0xa2, 0x53,
	0x1b, 0xbd, 0x0f, 0x80, 0x85, 0xe0, 0x74, 0x11, 0x0a, 0x12, 0x98, 0x86, 0x4c, 0xd5, 0x2b, 0x4e,
	0x35, 0x4a, 0x75, 0xb3, 0xcc, 0x9c, 0xfe, 0x2f, 0x06, 0xec, 0x5d, 0xf0, 0xa3, 0x11, 0x80, 0xc5,
	0x09, 0x16, 0xc4, 0x9e, 0x63, 0x11, 0xbf, 0x40, 0x67, 0xa0, 0xaa, 0x3a, 0x48, 0xaa, 0x3a, 0x78,
	0x98, 0x54, 0x35, 0x5d, 0x7f, 0x33, 0x9e, 0x35, 0x12, 0x51, 0x88, 0xd0, 0xb7, 0x93, 0x10, 0xfa,
	0xd3, 0x87, 0x88, 0x67, 0x8d, 0x04, 0x32, 0xa1, 0x6e, 0xb1, 0x90, 0x53, 0xc2, 0xe5, 0x8b, 0x35,
	0x67, 0x89, 0x89, 0x5e, 0x86, 0xbd, 0xf8, 0x71, 0x8e, 0x2d, 0x8b, 0x85, 0x9e, 0x30, 0x2b, 0x52,
	0xb1, 0x1b, 0x0f, 0x8f, 0xd4, 0x28, 0xea, 0x40, 0xc3, 0x62, 0xae, 0x4b, 0x3c, 0x11, 0x98, 0x55,
	0xa9, 0x48, 0xed, 0x28, 0xbc, 0x8f, 0xcf, 0xa3, 0x67, 0xb3, 0xa6, 0xc2, 0xc7, 0x26, 0x7a, 0x15,
	0x90, 0x1f, 0x72, 0xeb, 0x14, 0x07, 0x64, 0x2e, 0x0b, 0x38, 0xf7, 0x42, 0xd7, 0xac, 0x4b, 0x51,
	0x3b, 0xf1, 0xc8, 0x9a, 0x3d, 0x08, 0x5d, 0x74, 0x0b, 0x6a, 0x81, 0xc0, 0x22, 0x0c, 0xcc, 0x46,
	0x4f, 0x3b, 0xdc, 0x3d, 0xea, 0x16, 0x97, 0xff, 0x44, 0x6a, 0x66, 0xb1, 0x56, 0xad, 0xcc, 0x0b,
	0x42, 0x97, 0x70, 0xb3, 0x99, 0xac, 0x4c, 0xd9, 0xe8, 0x0a, 0x54, 0x7d, 0x7c, 0x4e, 0xb8, 0x09,
	0xd2, 0xa1, 0x0c, 0xd4, 0x85, 0x66, 0x92, 0x9b, 0x9b, 0x2d, 0xe9, 0x59, 0x0d, 0x44, 0x73, 0xa8,
	0x20, 0x6e, 0x60, 0xee, 0xf4, 0x8c, 0x68, 0x8e, 0x34, 0xfa, 0x3f, 0x68, 0xd0, 0x78, 0x40, 0xce,
	0x14, 0x90, 0xb7, 0x73, 0x40, 0x5e, 0x5b, 0x5b, 0x66, 0x22, 0x2c, 0x62, 0x72, 0x5e, 0xc2, 0xe4,
	0x24, 0xc7, 0xa0, 0x6a, 0xf5, 0x0b, 0x1b, 0xa3, 0x6f, 0xc0, 0xf0, 0x3b, 0x03, 0xd0, 0xba, 0x04,
	0xf5, 0x56, 0x0c, 0xe4, 0xbf, 0xb5, 0x94, 0x85, 0xe1, 0x3a, 0x0b, 0x7a, 0x4e, 0x59, 0xc6, 0x84,
	0x71, 0x81, 0x89, 0xde, 0x8a, 0x89, 0x4a, 0x3e, 0x5d, 0xc2, 0xc6, 0xad, 0x42, 0x36, 0xaa, 0x39,
	0xf1, 0x3a, 0x23, 0x6f, 0xa7, 0x8c, 0xd4, 0xb6, 0x33, 0x92, 0x96, 0x3e, 0x61, 0xa5, 0x9f, 0x61,
	0xa5, 0x9e, 0xcb, 0xb4, 0x62, 0xa6, 0x9b, 0x30, 0xd3, 0xc8, 0x09, 0x62, 0x76, 0x6e, 0x64, 0xd9,
	0x69, 0xe6, 0x14, 0x19, 0x86, 0xba, 0x09, 0x43, 0x10, 0x31, 0xb4, 0x8a, 0xa1, 0x58, 0xfa, 0x49,
	0x83, 0xcb, 0x77, 0x9f, 0xd0, 0x40, 0x50, 0x6f, 0xa9, 0x80, 0x7a, 0x2f, 0x07, 0xd4, 0x7a, 0xcb,
	0x73, 0xea, 0x22, 0xaa, 0xec, 0x12, 0xaa, 0x3e, 0x2c, 0xa0, 0xea, 0xb0, 0x3c, 0xc5, 0x06, 0xb4,
	0x7e, 0x37, 0xe0, 0xd9, 0x0d, 0xba, 0xff, 0x77, 0xba, 0xff, 0xe2, 0x4e, 0x77, 0x63, 0x6d, 0xa7,
	0x2b, 0xa5, 0x75, 0xa7, 0x88, 0xd6, 0x9f, 0x35, 0x68, 0xc9, 0xd5, 0x7c, 0x26, 0xab, 0x8c, 0xde,
	0xc9, 0xb1, 0x7a, 0xbd, 0x78, 0xe5, 0x4a, 0x5b, 0x44, 0xea, 0x37, 0x25, 0xa4, 0xee, 0xaf, 0xce,
	0xe4, 0xec, 0x55, 0x00, 0x7d, 0x50, 0x70, 0x36, 0xbf, 0x54, 0x96, 0x78, 0x03, 0xbf, 0xdf, 0xea,
	0x70, 0xb5, 0x50, 0x95, 0xe5, 0x46, 0xdb, 0xca, 0x8d, 0xbe, 0x95, 0x1b, 0x63, 0x33, 0x37, 0x95,
	0xa7, 0xe1, 0xa6, 0xba, 0x95, 0x9b, 0xda, 0x3f, 0xe0, 0x26, 0x3d, 0xd1, 0xea, 0xd9, 0x13, 0xed,
	0x4f, 0x2d, 0xbe, 0xae, 0x4c, 0x98, 0xe3, 0x10, 0x2b, 0xba, 0xf6, 0xa1, 0x51, 0xda, 0x5b, 0xe3,
	0xb0, 0x75, 0xf4, 0x62, 0x71, 0xf4, 0x95, 0xbe, 0xa0, 0xbf, 0xe8, 0x35, 0xa8, 0xb8, 0x44, 0xe0,
	0xb8, 0x4b, 0x57, 0xd7, 0x42, 0x7c, 0x4c, 0xb2, 0x53, 0x22, 0xe9, 0xbf, 0x7c, 0x4d, 0xfb, 0x1c,
	0x76, 0xef, 0xd3, 0x40, 0x1c, 0x63, 0x8e, 0x5d, 0x22, 0x08, 0x0f, 0xd0, 0x3e, 0xd4, 0xac, 0x90,
	0x07, 0x4c, 0xf5, 0xde, 0x98, 0xc5, 0x56, 0x54, 0x37, 0x87, 0xba, 0x54, 0x35, 0xdc, 0x98, 0x29,
	0x23, 0x52, 0x3f, 0xa2, 0x8e, 0x48, 0x77, 0x98, 0xd8, 0xea, 0x9f, 0x40, 0x25, 0x7a, 0x37, 0x74,
	0x00, 0x2d, 0x8f, 0x3c, 0x11, 0xf3, 0x5c, 0x48, 0x88, 0x86, 0x26, 0x65, 0x61, 0xaf, 0x40, 0x55,
	0x30, 0x81, 0x1d, 0x19, 0xd5, 0x98, 0x29, 0xe3, 0x95, 0x8f, 0xe2, 0x6f, 0x4f, 0x75, 0x14, 0x21,
	0xd8, 0x9d, 0x7a, 0x73, 0x9f, 0x13, 0x1f, 0x73, 0x79, 0x51, 0x6f, 0x5f, 0x42, 0x2d, 0xa8, 0xdf,
	0xe3, 0xec, 0x8c, 0x7a, 0xcb, 0xb6, 0x86, 0x2e, 0x43, 0x73, 0x82, 0x3d, 0x8b, 0x38, 0x0e, 0xb1,
	0xdb, 0x7a, 0xe4, 0x3b, 0x39, 0xa5, 0xbe, 0x4f, 0xec, 0xb6, 0x71, 0xf4, 0x87, 0x0e, 0x3b, 0x2a,
	0x18, 0xe1, 0x8f, 0xa9, 0x45, 0xd0, 0xbb, 0xd0, 0xb8, 0x47, 0x84, 0x3a, 0x81, 0xcc, 0xe2, 0x1a,
	0x4e, 0xed, 0xce, 0x7e, 0xb1, 0xa7, 0x7f, 0x09, 0x8d, 0xa1, 0x35, 0x91, 0x9b, 0xb7, 0x0a, 0xf1,
	0xdc, 0xc6, 0x9b, 0x4a, 0x49, 0x8c, 0xbb, 0xd0, 0x52, 0x1f, 0xa3, 0x8a, 0xd1, 0x2d, 0xfb, 0xaa,
	0x4b, 0xc2, 0x7c, 0x0a, 0x10, 0x35, 0x55, 0x9a, 0x01, 0x3a, 0x58, 0xd3, 0xe5, 0x3b, 0xde, 0xe9,
	0x6d, 0x23, 0x5b, 0xae, 0xac, 0x79, 0x9f, 0x61, 0x5b, 0xad, 0xeb, 0x5a, 0xf9, 0x79, 0xb9, 0x79,
	0x65, 0x63, 0x17, 0x9e, 0x61, 0x7c, 0x79, 0xd1, 0x3d, 0x06, 0xe9, 0x3f, 0x8e, 0x0e, 0xb5, 0x63,
	0xed, 0xab, 0xdb, 0x99, 0xbf, 0x51, 0x52, 0x39, 0xc6, 0x01, 0x89, 0xfe, 0x48, 0x2d, 0x89, 0x27,
	0x0f, 0xbe, 0x61, 0x3a, 0x1f, 0xfb, 0x34, 0x18, 0xca, 0x18, 0x6f, 0xc9, 0xdf, 0xbf, 0x34, 0xed,
	0x7b, 0xbd, 0x71, 0x67, 0x3a, 0x79, 0xf8, 0xe5, 0xe8, 0x78, 0xba, 0xa8, 0x49, 0xf9, 0xeb, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x05, 0xd7, 0x35, 0x0e, 0xf6, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	// Retrieves order by ID
	GetOrder(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error)
	// Create a new order
	CreateOrder(ctx context.Context, in *NewOrder, opts ...grpc.CallOption) (*Order, error)
	// Update an existing order
	UpdateOrder(ctx context.Context, in *OrderUpdate, opts ...grpc.CallOption) (*Order, error)
	// List all orders
	ListOrders(ctx context.Context, in *ListParameters, opts ...grpc.CallOption) (*OrderCollection, error)
	// Load existing order
	LoadOrder(ctx context.Context, in *ExistingOrder, opts ...grpc.CallOption) (*Order, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetOrder(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/dictybase.order.OrderService/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *NewOrder, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/dictybase.order.OrderService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrder(ctx context.Context, in *OrderUpdate, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/dictybase.order.OrderService/UpdateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) ListOrders(ctx context.Context, in *ListParameters, opts ...grpc.CallOption) (*OrderCollection, error) {
	out := new(OrderCollection)
	err := c.cc.Invoke(ctx, "/dictybase.order.OrderService/ListOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) LoadOrder(ctx context.Context, in *ExistingOrder, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/dictybase.order.OrderService/LoadOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	// Retrieves order by ID
	GetOrder(context.Context, *OrderId) (*Order, error)
	// Create a new order
	CreateOrder(context.Context, *NewOrder) (*Order, error)
	// Update an existing order
	UpdateOrder(context.Context, *OrderUpdate) (*Order, error)
	// List all orders
	ListOrders(context.Context, *ListParameters) (*OrderCollection, error)
	// Load existing order
	LoadOrder(context.Context, *ExistingOrder) (*Order, error)
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.order.OrderService/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrder(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.order.OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*NewOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.order.OrderService/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateOrder(ctx, req.(*OrderUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_ListOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).ListOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.order.OrderService/ListOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).ListOrders(ctx, req.(*ListParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_LoadOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistingOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).LoadOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.order.OrderService/LoadOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).LoadOrder(ctx, req.(*ExistingOrder))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.order.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrder",
			Handler:    _OrderService_GetOrder_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
		{
			MethodName: "UpdateOrder",
			Handler:    _OrderService_UpdateOrder_Handler,
		},
		{
			MethodName: "ListOrders",
			Handler:    _OrderService_ListOrders_Handler,
		},
		{
			MethodName: "LoadOrder",
			Handler:    _OrderService_LoadOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}
