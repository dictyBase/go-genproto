// Code generated by protoc-gen-go. DO NOT EDIT.
// source: annotation.proto

package annotation

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AnnotationId struct {
	// unique identifier for the annotation
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnotationId) Reset()         { *m = AnnotationId{} }
func (m *AnnotationId) String() string { return proto.CompactTextString(m) }
func (*AnnotationId) ProtoMessage()    {}
func (*AnnotationId) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{0}
}

func (m *AnnotationId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnotationId.Unmarshal(m, b)
}
func (m *AnnotationId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnotationId.Marshal(b, m, deterministic)
}
func (m *AnnotationId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnotationId.Merge(m, src)
}
func (m *AnnotationId) XXX_Size() int {
	return xxx_messageInfo_AnnotationId.Size(m)
}
func (m *AnnotationId) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnotationId.DiscardUnknown(m)
}

var xxx_messageInfo_AnnotationId proto.InternalMessageInfo

func (m *AnnotationId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Definition for various fields that are needed for fetching annotation for an
// entry. The tag, ontology and entry_id must be provided, version and rank are
// optional and their default values are used.
type EntryAnnotationRequest struct {
	// Unique identifier(generally email) of the user who created the annotation
	CreatedBy string `protobuf:"bytes,1,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// An identifiable tagname for the annotation, primarily
	// a structured tag, generally an ontology term.
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// Version no. of the annotation, current version no. is assumed by default
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// unique identifier of a biological entity that is being annotated
	EntryId string `protobuf:"bytes,4,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// Name of ontology in which the tag name is taken
	Ontology string `protobuf:"bytes,5,opt,name=ontology,proto3" json:"ontology,omitempty"`
	// Ordering of annotation when an entry has multiple annotations with
	// identical tag from the same ontology. By default, rank 0 is assumed.
	Rank int64 `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	// Status for active or retired annotation. Active annotation is chosen by default.
	IsObsolete           bool     `protobuf:"varint,7,opt,name=is_obsolete,json=isObsolete,proto3" json:"is_obsolete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryAnnotationRequest) Reset()         { *m = EntryAnnotationRequest{} }
func (m *EntryAnnotationRequest) String() string { return proto.CompactTextString(m) }
func (*EntryAnnotationRequest) ProtoMessage()    {}
func (*EntryAnnotationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{1}
}

func (m *EntryAnnotationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryAnnotationRequest.Unmarshal(m, b)
}
func (m *EntryAnnotationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryAnnotationRequest.Marshal(b, m, deterministic)
}
func (m *EntryAnnotationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryAnnotationRequest.Merge(m, src)
}
func (m *EntryAnnotationRequest) XXX_Size() int {
	return xxx_messageInfo_EntryAnnotationRequest.Size(m)
}
func (m *EntryAnnotationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryAnnotationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryAnnotationRequest proto.InternalMessageInfo

func (m *EntryAnnotationRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *EntryAnnotationRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *EntryAnnotationRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *EntryAnnotationRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *EntryAnnotationRequest) GetOntology() string {
	if m != nil {
		return m.Ontology
	}
	return ""
}

func (m *EntryAnnotationRequest) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *EntryAnnotationRequest) GetIsObsolete() bool {
	if m != nil {
		return m.IsObsolete
	}
	return false
}

// List of paginated tagged annotations
type TaggedAnnotationCollection struct {
	Data                 []*TaggedAnnotationCollection_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Meta                 *Meta                              `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *TaggedAnnotationCollection) Reset()         { *m = TaggedAnnotationCollection{} }
func (m *TaggedAnnotationCollection) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotationCollection) ProtoMessage()    {}
func (*TaggedAnnotationCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{2}
}

func (m *TaggedAnnotationCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotationCollection.Unmarshal(m, b)
}
func (m *TaggedAnnotationCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotationCollection.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotationCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotationCollection.Merge(m, src)
}
func (m *TaggedAnnotationCollection) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotationCollection.Size(m)
}
func (m *TaggedAnnotationCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotationCollection.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotationCollection proto.InternalMessageInfo

func (m *TaggedAnnotationCollection) GetData() []*TaggedAnnotationCollection_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TaggedAnnotationCollection) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type TaggedAnnotationCollection_Data struct {
	// resource name, by default should be annotation
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// unique identifier for the annotation
	Id                   string                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *TaggedAnnotationAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TaggedAnnotationCollection_Data) Reset()         { *m = TaggedAnnotationCollection_Data{} }
func (m *TaggedAnnotationCollection_Data) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotationCollection_Data) ProtoMessage()    {}
func (*TaggedAnnotationCollection_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{2, 0}
}

func (m *TaggedAnnotationCollection_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotationCollection_Data.Unmarshal(m, b)
}
func (m *TaggedAnnotationCollection_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotationCollection_Data.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotationCollection_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotationCollection_Data.Merge(m, src)
}
func (m *TaggedAnnotationCollection_Data) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotationCollection_Data.Size(m)
}
func (m *TaggedAnnotationCollection_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotationCollection_Data.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotationCollection_Data proto.InternalMessageInfo

func (m *TaggedAnnotationCollection_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaggedAnnotationCollection_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaggedAnnotationCollection_Data) GetAttributes() *TaggedAnnotationAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Definition of an tag value based biological annotation where the tag always
// represents a term from ontology.
type TaggedAnnotation struct {
	Data                 *TaggedAnnotation_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TaggedAnnotation) Reset()         { *m = TaggedAnnotation{} }
func (m *TaggedAnnotation) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotation) ProtoMessage()    {}
func (*TaggedAnnotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{3}
}

func (m *TaggedAnnotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotation.Unmarshal(m, b)
}
func (m *TaggedAnnotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotation.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotation.Merge(m, src)
}
func (m *TaggedAnnotation) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotation.Size(m)
}
func (m *TaggedAnnotation) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotation.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotation proto.InternalMessageInfo

func (m *TaggedAnnotation) GetData() *TaggedAnnotation_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type TaggedAnnotation_Data struct {
	// resource name, by default should be annotation
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// unique identifier for the annotation
	Id                   string                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *TaggedAnnotationAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TaggedAnnotation_Data) Reset()         { *m = TaggedAnnotation_Data{} }
func (m *TaggedAnnotation_Data) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotation_Data) ProtoMessage()    {}
func (*TaggedAnnotation_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{3, 0}
}

func (m *TaggedAnnotation_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotation_Data.Unmarshal(m, b)
}
func (m *TaggedAnnotation_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotation_Data.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotation_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotation_Data.Merge(m, src)
}
func (m *TaggedAnnotation_Data) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotation_Data.Size(m)
}
func (m *TaggedAnnotation_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotation_Data.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotation_Data proto.InternalMessageInfo

func (m *TaggedAnnotation_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaggedAnnotation_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaggedAnnotation_Data) GetAttributes() *TaggedAnnotationAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// Definition of various tagged annotation attributes
type TaggedAnnotationAttributes struct {
	// annotation in plain text format
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// serialized text content in a format recognized by frontend rich text
	// editor
	EditableValue string `protobuf:"bytes,2,opt,name=editable_value,json=editableValue,proto3" json:"editable_value,omitempty"`
	// Unique identifier(generally email) of the user who created the annotation
	CreatedBy string `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// Timestamp for creation
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// An identifiable tagname for the annotation, primarily
	// a structured tag, generally an ontology term.
	Tag string `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	// version refers to the current version no
	Version int64 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// previous refers to unique identifier of parent annotation
	Previous int64 `protobuf:"varint,7,opt,name=previous,proto3" json:"previous,omitempty"`
	// next refers to unique identifier child annotation
	Next int64 `protobuf:"varint,8,opt,name=next,proto3" json:"next,omitempty"`
	// unique identifier of a biological entity that is being annotated
	EntryId string `protobuf:"bytes,9,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// Name of ontology in which the tag name is taken
	Ontology string `protobuf:"bytes,10,opt,name=ontology,proto3" json:"ontology,omitempty"`
	// Ordering of annotation when an entry has multiple annotations with
	// identical tag from the same ontology.
	Rank int64 `protobuf:"varint,11,opt,name=rank,proto3" json:"rank,omitempty"`
	// Status for active or retired annotation
	IsObsolete           bool     `protobuf:"varint,12,opt,name=is_obsolete,json=isObsolete,proto3" json:"is_obsolete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaggedAnnotationAttributes) Reset()         { *m = TaggedAnnotationAttributes{} }
func (m *TaggedAnnotationAttributes) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotationAttributes) ProtoMessage()    {}
func (*TaggedAnnotationAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{4}
}

func (m *TaggedAnnotationAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotationAttributes.Unmarshal(m, b)
}
func (m *TaggedAnnotationAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotationAttributes.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotationAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotationAttributes.Merge(m, src)
}
func (m *TaggedAnnotationAttributes) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotationAttributes.Size(m)
}
func (m *TaggedAnnotationAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotationAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotationAttributes proto.InternalMessageInfo

func (m *TaggedAnnotationAttributes) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TaggedAnnotationAttributes) GetEditableValue() string {
	if m != nil {
		return m.EditableValue
	}
	return ""
}

func (m *TaggedAnnotationAttributes) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *TaggedAnnotationAttributes) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TaggedAnnotationAttributes) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *TaggedAnnotationAttributes) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TaggedAnnotationAttributes) GetPrevious() int64 {
	if m != nil {
		return m.Previous
	}
	return 0
}

func (m *TaggedAnnotationAttributes) GetNext() int64 {
	if m != nil {
		return m.Next
	}
	return 0
}

func (m *TaggedAnnotationAttributes) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *TaggedAnnotationAttributes) GetOntology() string {
	if m != nil {
		return m.Ontology
	}
	return ""
}

func (m *TaggedAnnotationAttributes) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *TaggedAnnotationAttributes) GetIsObsolete() bool {
	if m != nil {
		return m.IsObsolete
	}
	return false
}

// Definition for creating a new tagged annotation
type NewTaggedAnnotation struct {
	Data                 *NewTaggedAnnotation_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *NewTaggedAnnotation) Reset()         { *m = NewTaggedAnnotation{} }
func (m *NewTaggedAnnotation) String() string { return proto.CompactTextString(m) }
func (*NewTaggedAnnotation) ProtoMessage()    {}
func (*NewTaggedAnnotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{5}
}

func (m *NewTaggedAnnotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTaggedAnnotation.Unmarshal(m, b)
}
func (m *NewTaggedAnnotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTaggedAnnotation.Marshal(b, m, deterministic)
}
func (m *NewTaggedAnnotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTaggedAnnotation.Merge(m, src)
}
func (m *NewTaggedAnnotation) XXX_Size() int {
	return xxx_messageInfo_NewTaggedAnnotation.Size(m)
}
func (m *NewTaggedAnnotation) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTaggedAnnotation.DiscardUnknown(m)
}

var xxx_messageInfo_NewTaggedAnnotation proto.InternalMessageInfo

func (m *NewTaggedAnnotation) GetData() *NewTaggedAnnotation_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type NewTaggedAnnotation_Data struct {
	// resource name, by default should be annotation
	Type                 string                         `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Attributes           *NewTaggedAnnotationAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *NewTaggedAnnotation_Data) Reset()         { *m = NewTaggedAnnotation_Data{} }
func (m *NewTaggedAnnotation_Data) String() string { return proto.CompactTextString(m) }
func (*NewTaggedAnnotation_Data) ProtoMessage()    {}
func (*NewTaggedAnnotation_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{5, 0}
}

func (m *NewTaggedAnnotation_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTaggedAnnotation_Data.Unmarshal(m, b)
}
func (m *NewTaggedAnnotation_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTaggedAnnotation_Data.Marshal(b, m, deterministic)
}
func (m *NewTaggedAnnotation_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTaggedAnnotation_Data.Merge(m, src)
}
func (m *NewTaggedAnnotation_Data) XXX_Size() int {
	return xxx_messageInfo_NewTaggedAnnotation_Data.Size(m)
}
func (m *NewTaggedAnnotation_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTaggedAnnotation_Data.DiscardUnknown(m)
}

var xxx_messageInfo_NewTaggedAnnotation_Data proto.InternalMessageInfo

func (m *NewTaggedAnnotation_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NewTaggedAnnotation_Data) GetAttributes() *NewTaggedAnnotationAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// NewTaggedAnnotation defines attributes for creating a new annotation
type NewTaggedAnnotationAttributes struct {
	// annotation in plain text format
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// serialized text content in a format recognized by frontend rich text
	// editor
	EditableValue string `protobuf:"bytes,2,opt,name=editable_value,json=editableValue,proto3" json:"editable_value,omitempty"`
	// Unique identifier(generally email) of the user who created the annotation
	CreatedBy string `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// An identifiable tagname for the annotation, primarily
	// a structured tag, generally an ontology term.
	Tag string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	// unique identifier of a biological entity that is being annotated
	EntryId string `protobuf:"bytes,5,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// Name of ontology from which the tag name is taken
	Ontology string `protobuf:"bytes,6,opt,name=ontology,proto3" json:"ontology,omitempty"`
	// Ordering of annotation when an entry has multiple annotations with
	// identical tag from the same ontology. By default, rank 0 is used.
	Rank                 int64    `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTaggedAnnotationAttributes) Reset()         { *m = NewTaggedAnnotationAttributes{} }
func (m *NewTaggedAnnotationAttributes) String() string { return proto.CompactTextString(m) }
func (*NewTaggedAnnotationAttributes) ProtoMessage()    {}
func (*NewTaggedAnnotationAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{6}
}

func (m *NewTaggedAnnotationAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTaggedAnnotationAttributes.Unmarshal(m, b)
}
func (m *NewTaggedAnnotationAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTaggedAnnotationAttributes.Marshal(b, m, deterministic)
}
func (m *NewTaggedAnnotationAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTaggedAnnotationAttributes.Merge(m, src)
}
func (m *NewTaggedAnnotationAttributes) XXX_Size() int {
	return xxx_messageInfo_NewTaggedAnnotationAttributes.Size(m)
}
func (m *NewTaggedAnnotationAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTaggedAnnotationAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_NewTaggedAnnotationAttributes proto.InternalMessageInfo

func (m *NewTaggedAnnotationAttributes) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *NewTaggedAnnotationAttributes) GetEditableValue() string {
	if m != nil {
		return m.EditableValue
	}
	return ""
}

func (m *NewTaggedAnnotationAttributes) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *NewTaggedAnnotationAttributes) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *NewTaggedAnnotationAttributes) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *NewTaggedAnnotationAttributes) GetOntology() string {
	if m != nil {
		return m.Ontology
	}
	return ""
}

func (m *NewTaggedAnnotationAttributes) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

// Definition for updating an existing annotation
type TaggedAnnotationUpdate struct {
	Data                 *TaggedAnnotationUpdate_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TaggedAnnotationUpdate) Reset()         { *m = TaggedAnnotationUpdate{} }
func (m *TaggedAnnotationUpdate) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotationUpdate) ProtoMessage()    {}
func (*TaggedAnnotationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{7}
}

func (m *TaggedAnnotationUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotationUpdate.Unmarshal(m, b)
}
func (m *TaggedAnnotationUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotationUpdate.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotationUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotationUpdate.Merge(m, src)
}
func (m *TaggedAnnotationUpdate) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotationUpdate.Size(m)
}
func (m *TaggedAnnotationUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotationUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotationUpdate proto.InternalMessageInfo

func (m *TaggedAnnotationUpdate) GetData() *TaggedAnnotationUpdate_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type TaggedAnnotationUpdate_Data struct {
	// resource name, by default should be annotation
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// unique identifier for the annotation
	Id                   string                            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *TaggedAnnotationUpdateAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *TaggedAnnotationUpdate_Data) Reset()         { *m = TaggedAnnotationUpdate_Data{} }
func (m *TaggedAnnotationUpdate_Data) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotationUpdate_Data) ProtoMessage()    {}
func (*TaggedAnnotationUpdate_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{7, 0}
}

func (m *TaggedAnnotationUpdate_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotationUpdate_Data.Unmarshal(m, b)
}
func (m *TaggedAnnotationUpdate_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotationUpdate_Data.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotationUpdate_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotationUpdate_Data.Merge(m, src)
}
func (m *TaggedAnnotationUpdate_Data) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotationUpdate_Data.Size(m)
}
func (m *TaggedAnnotationUpdate_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotationUpdate_Data.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotationUpdate_Data proto.InternalMessageInfo

func (m *TaggedAnnotationUpdate_Data) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaggedAnnotationUpdate_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaggedAnnotationUpdate_Data) GetAttributes() *TaggedAnnotationUpdateAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// TaggedUpdateAnnotation defines attributes for updating an existing annotation
type TaggedAnnotationUpdateAttributes struct {
	// annotation in plain text format
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// serialized text content in a format recognized by frontend rich text
	// editor
	EditableValue string `protobuf:"bytes,2,opt,name=editable_value,json=editableValue,proto3" json:"editable_value,omitempty"`
	// Unique identifier(generally email) of the user who created the annotation
	CreatedBy            string   `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaggedAnnotationUpdateAttributes) Reset()         { *m = TaggedAnnotationUpdateAttributes{} }
func (m *TaggedAnnotationUpdateAttributes) String() string { return proto.CompactTextString(m) }
func (*TaggedAnnotationUpdateAttributes) ProtoMessage()    {}
func (*TaggedAnnotationUpdateAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{8}
}

func (m *TaggedAnnotationUpdateAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedAnnotationUpdateAttributes.Unmarshal(m, b)
}
func (m *TaggedAnnotationUpdateAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedAnnotationUpdateAttributes.Marshal(b, m, deterministic)
}
func (m *TaggedAnnotationUpdateAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedAnnotationUpdateAttributes.Merge(m, src)
}
func (m *TaggedAnnotationUpdateAttributes) XXX_Size() int {
	return xxx_messageInfo_TaggedAnnotationUpdateAttributes.Size(m)
}
func (m *TaggedAnnotationUpdateAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedAnnotationUpdateAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedAnnotationUpdateAttributes proto.InternalMessageInfo

func (m *TaggedAnnotationUpdateAttributes) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TaggedAnnotationUpdateAttributes) GetEditableValue() string {
	if m != nil {
		return m.EditableValue
	}
	return ""
}

func (m *TaggedAnnotationUpdateAttributes) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

// ListParameters defines fields for manipulating output of TaggedAnnotation collection
type ListParameters struct {
	// A unique pointer to the next set of result in the list
	NextCursor int64 `protobuf:"varint,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// The `filter` field restricts the data return by the collection. To use
	// it, supply one or multiple allowed fields to filter followed
	// by a filter expression. It uses the following syntax...
	//        field_name operator expression
	//
	// The following fields of `AnnotationAttributes` definition are allowed to
	// be used for filtering
	//   * entry_id    - The entry that is being annotated (string)
	//   * value       - The annotation in plain text format (string)
	//   * created_by  - Email id of the user (string)
	//   * tag         - Tag name, a term from an ontology (string).
	//   * ontology    - Ontology that provides the tag names (string).
	//   * version     - Version no (number).
	//
	// field_name - Any one of the allowed field_name of the `AnnotationAttributes` definition.
	// operator - Defines the type of filter match to use. It could be any of
	// the following four and all of them should be URL-encoded for http request.
	//
	//              ==  Equals (URL encoding is %3D%3D)
	//              !=  Not equals
	//              ~  Contains substring
	//              !~  Not contains substring
	//              >   Greater than
	//              <   Less than
	//              =<  Less than equal to
	//              >=  Greater than equal to
	//
	// expression - The value that will be included or excluded from the
	// result. URL-reserved characters must be URL-encoded for http request.
	//
	//           filter: "created_by==caboose@abc.com"
	//           filter: "entry_id==DDB_G4839483"
	//           filter: "value~actin"
	//
	// Filter can be combined using OR or AND boolean logic.
	//   * The OR is represented using a comma(,).
	//   * The AND is represented using a semi-colon(;).
	//   * AND and OR operators can be combined and AND takes precedence over OR.
	//
	//           filter: "value~cytoskeletion;tag==cell membrane;ontology==cellular"
	//
	Filter               string   `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListParameters) Reset()         { *m = ListParameters{} }
func (m *ListParameters) String() string { return proto.CompactTextString(m) }
func (*ListParameters) ProtoMessage()    {}
func (*ListParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{9}
}

func (m *ListParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListParameters.Unmarshal(m, b)
}
func (m *ListParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListParameters.Marshal(b, m, deterministic)
}
func (m *ListParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListParameters.Merge(m, src)
}
func (m *ListParameters) XXX_Size() int {
	return xxx_messageInfo_ListParameters.Size(m)
}
func (m *ListParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_ListParameters.DiscardUnknown(m)
}

var xxx_messageInfo_ListParameters proto.InternalMessageInfo

func (m *ListParameters) GetNextCursor() int64 {
	if m != nil {
		return m.NextCursor
	}
	return 0
}

func (m *ListParameters) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListParameters) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// Metadata definition for traversing the collection
type Meta struct {
	// A unique pointer to the next set of result in the collection
	NextCursor int64 `protobuf:"varint,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Maximum number of records that can be fetch per request
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Total number of records in the collection.
	Total                int64    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_26610d0577ad2d1a, []int{10}
}

func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetNextCursor() int64 {
	if m != nil {
		return m.NextCursor
	}
	return 0
}

func (m *Meta) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Meta) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*AnnotationId)(nil), "dictybase.annotation.AnnotationId")
	proto.RegisterType((*EntryAnnotationRequest)(nil), "dictybase.annotation.EntryAnnotationRequest")
	proto.RegisterType((*TaggedAnnotationCollection)(nil), "dictybase.annotation.TaggedAnnotationCollection")
	proto.RegisterType((*TaggedAnnotationCollection_Data)(nil), "dictybase.annotation.TaggedAnnotationCollection.Data")
	proto.RegisterType((*TaggedAnnotation)(nil), "dictybase.annotation.TaggedAnnotation")
	proto.RegisterType((*TaggedAnnotation_Data)(nil), "dictybase.annotation.TaggedAnnotation.Data")
	proto.RegisterType((*TaggedAnnotationAttributes)(nil), "dictybase.annotation.TaggedAnnotationAttributes")
	proto.RegisterType((*NewTaggedAnnotation)(nil), "dictybase.annotation.NewTaggedAnnotation")
	proto.RegisterType((*NewTaggedAnnotation_Data)(nil), "dictybase.annotation.NewTaggedAnnotation.Data")
	proto.RegisterType((*NewTaggedAnnotationAttributes)(nil), "dictybase.annotation.NewTaggedAnnotationAttributes")
	proto.RegisterType((*TaggedAnnotationUpdate)(nil), "dictybase.annotation.TaggedAnnotationUpdate")
	proto.RegisterType((*TaggedAnnotationUpdate_Data)(nil), "dictybase.annotation.TaggedAnnotationUpdate.Data")
	proto.RegisterType((*TaggedAnnotationUpdateAttributes)(nil), "dictybase.annotation.TaggedAnnotationUpdateAttributes")
	proto.RegisterType((*ListParameters)(nil), "dictybase.annotation.ListParameters")
	proto.RegisterType((*Meta)(nil), "dictybase.annotation.Meta")
}

func init() { proto.RegisterFile("annotation.proto", fileDescriptor_26610d0577ad2d1a) }

var fileDescriptor_26610d0577ad2d1a = []byte{
	// 969 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xaf, 0xe3, 0x24, 0x4d, 0x5f, 0x77, 0xbb, 0xd1, 0x50, 0x05, 0x2b, 0xec, 0xaa, 0xc1, 0x82,
	0x55, 0x11, 0xd4, 0x59, 0xba, 0xa2, 0x17, 0x4e, 0x49, 0xbb, 0xaa, 0x8a, 0x58, 0x08, 0x6e, 0x59,
	0x01, 0x12, 0x8a, 0x26, 0xf1, 0xac, 0x19, 0xea, 0x78, 0x82, 0xfd, 0x92, 0x12, 0x89, 0x0b, 0x37,
	0xc4, 0x07, 0xe0, 0x03, 0x20, 0xf1, 0x29, 0xf8, 0x16, 0xdc, 0x38, 0x21, 0x71, 0xe1, 0x0b, 0x70,
	0x40, 0x9c, 0xd0, 0x8c, 0x9d, 0xd8, 0x4e, 0x9c, 0x26, 0xe1, 0xd2, 0xdb, 0xcc, 0x9b, 0xf7, 0x67,
	0xe6, 0xbd, 0xdf, 0xef, 0xf9, 0x19, 0xaa, 0xd4, 0xf7, 0x05, 0x52, 0xe4, 0xc2, 0xb7, 0x86, 0x81,
	0x40, 0x41, 0xf6, 0x1d, 0xde, 0xc7, 0x49, 0x8f, 0x86, 0xcc, 0x4a, 0xce, 0xea, 0x0f, 0x5d, 0x21,
	0x5c, 0x8f, 0x35, 0xe9, 0x90, 0x37, 0x13, 0x71, 0x18, 0xd9, 0xd4, 0x0f, 0xe2, 0x53, 0xb5, 0xeb,
	0x8d, 0x5e, 0x36, 0x91, 0x0f, 0x58, 0x88, 0x74, 0x30, 0x8c, 0x15, 0x5e, 0x9b, 0x57, 0x60, 0x83,
	0x21, 0x4e, 0xe2, 0xc3, 0x13, 0x97, 0xe3, 0x57, 0xa3, 0x9e, 0xd5, 0x17, 0x83, 0xe6, 0xe0, 0x86,
	0xe3, 0xb5, 0xb8, 0x69, 0xba, 0xe2, 0x48, 0x1d, 0x1e, 0x8d, 0xa9, 0xc7, 0x1d, 0x8a, 0x22, 0x08,
	0x9b, 0xb3, 0x65, 0x64, 0x67, 0x3e, 0x86, 0x7b, 0xad, 0xd9, 0x55, 0x2e, 0x1c, 0x52, 0x83, 0x02,
	0x77, 0x0c, 0xad, 0xa1, 0x1d, 0xee, 0xb4, 0xcb, 0x7f, 0xfe, 0x71, 0x50, 0xf8, 0x4c, 0xb3, 0x0b,
	0xdc, 0x31, 0xff, 0xd2, 0xa0, 0xf6, 0xcc, 0xc7, 0x60, 0x92, 0x68, 0xdb, 0xec, 0x9b, 0x11, 0x0b,
	0x91, 0x3c, 0x02, 0xe8, 0x07, 0x8c, 0x22, 0x73, 0xba, 0xbd, 0x49, 0x64, 0x6a, 0xef, 0xc4, 0x92,
	0xf6, 0x84, 0x18, 0xa0, 0x23, 0x75, 0x8d, 0x42, 0xc6, 0xa5, 0x14, 0x11, 0x03, 0xb6, 0xc7, 0x2c,
	0x08, 0xb9, 0xf0, 0x0d, 0xbd, 0xa1, 0x1d, 0xea, 0xf6, 0x74, 0x4b, 0x5e, 0x87, 0x0a, 0x93, 0xc1,
	0xba, 0xdc, 0x31, 0x8a, 0x19, 0xc3, 0x6d, 0x25, 0xbf, 0x70, 0x88, 0x09, 0x15, 0xe1, 0xa3, 0xf0,
	0x84, 0x3b, 0x31, 0x4a, 0x19, 0x95, 0x99, 0x9c, 0x10, 0x28, 0x06, 0xd4, 0xbf, 0x36, 0xca, 0xca,
	0xbb, 0x5a, 0x93, 0x03, 0xd8, 0xe5, 0x61, 0x57, 0xf4, 0x42, 0xe1, 0x31, 0x64, 0xc6, 0x76, 0x43,
	0x3b, 0xac, 0xd8, 0xc0, 0xc3, 0x8f, 0x63, 0x89, 0xf9, 0x4b, 0x01, 0xea, 0x57, 0xd4, 0x75, 0x99,
	0x93, 0x3c, 0xf5, 0x54, 0x78, 0x1e, 0xeb, 0xcb, 0x15, 0xf9, 0x04, 0x8a, 0x0e, 0x45, 0x6a, 0x68,
	0x0d, 0xfd, 0x70, 0xf7, 0xf8, 0x3d, 0x2b, 0xaf, 0xd2, 0xd6, 0x72, 0x7b, 0xeb, 0x8c, 0x22, 0x8d,
	0xae, 0xda, 0xd0, 0x6c, 0xe5, 0x8a, 0x9c, 0x40, 0x71, 0xc0, 0x90, 0xaa, 0x24, 0xec, 0x1e, 0xd7,
	0xf3, 0x5d, 0x3e, 0x67, 0x69, 0x3b, 0xa9, 0x5f, 0xff, 0x0e, 0x8a, 0xd2, 0x9b, 0x7c, 0x26, 0x4e,
	0x86, 0x2c, 0x4e, 0xbd, 0x5a, 0x93, 0x3d, 0x55, 0x47, 0x95, 0x74, 0x59, 0x3f, 0xd2, 0x01, 0xa0,
	0x88, 0x01, 0xef, 0x8d, 0x90, 0x85, 0x71, 0xa4, 0x27, 0xeb, 0x5d, 0xbe, 0x35, 0xb3, 0xb3, 0x53,
	0x3e, 0xcc, 0xdf, 0x35, 0xa8, 0xce, 0xab, 0x92, 0xf3, 0x59, 0x76, 0x64, 0x80, 0xb7, 0xd7, 0x0b,
	0x90, 0x93, 0x93, 0x3b, 0x7e, 0xdb, 0xaf, 0xfa, 0x22, 0x06, 0x12, 0x55, 0xf2, 0x10, 0x4a, 0x63,
	0xea, 0x8d, 0xd8, 0x1c, 0x4f, 0x22, 0x21, 0x39, 0x82, 0x3d, 0xe6, 0x70, 0xa4, 0x3d, 0x8f, 0x75,
	0x23, 0xb5, 0x2c, 0xf6, 0xef, 0x4f, 0x4f, 0x5f, 0x28, 0xf5, 0x37, 0x33, 0xf4, 0xd1, 0x33, 0xaa,
	0x29, 0x1a, 0xb5, 0x12, 0x35, 0x8a, 0x8a, 0x14, 0x12, 0x2a, 0x51, 0x4b, 0xb0, 0xa6, 0x2d, 0xc1,
	0xba, 0x9a, 0xf6, 0x8c, 0x59, 0x3a, 0xa7, 0x2e, 0x5a, 0x38, 0x65, 0x62, 0x69, 0x91, 0x89, 0x8d,
	0x84, 0x89, 0x8a, 0x2b, 0xd1, 0x69, 0x75, 0x2b, 0x61, 0x64, 0x1d, 0x2a, 0xc3, 0x80, 0x8d, 0xb9,
	0x18, 0x85, 0x8a, 0x33, 0xba, 0x3d, 0xdb, 0xcb, 0x1a, 0xf9, 0xec, 0x5b, 0x34, 0x2a, 0x11, 0xcd,
	0xe4, 0x3a, 0xc3, 0xe0, 0x9d, 0xd5, 0x0c, 0x86, 0x15, 0x0c, 0xde, 0x5d, 0xce, 0xe0, 0x7b, 0x0b,
	0x0c, 0xfe, 0x4d, 0x83, 0x57, 0x3e, 0x62, 0x37, 0x0b, 0xe0, 0xfc, 0x20, 0x03, 0x4e, 0x2b, 0x1f,
	0x21, 0x39, 0x86, 0x79, 0xf8, 0x14, 0xb7, 0xe0, 0xf3, 0x32, 0x83, 0xc7, 0x82, 0x8a, 0xf6, 0x74,
	0xed, 0x68, 0x4b, 0x20, 0xf9, 0x43, 0x01, 0x1e, 0xdd, 0xaa, 0x7d, 0x27, 0xa8, 0x8c, 0x21, 0x55,
	0x5c, 0x84, 0x54, 0x1a, 0x00, 0xa5, 0xd5, 0x00, 0x28, 0xaf, 0x00, 0xc0, 0x76, 0x02, 0x00, 0xf3,
	0x6f, 0x0d, 0x6a, 0xf3, 0x79, 0xf8, 0x74, 0xe8, 0x50, 0x64, 0xe4, 0x79, 0xa6, 0xc4, 0xef, 0xae,
	0xd7, 0x04, 0x22, 0xdb, 0xbc, 0x2a, 0xff, 0xa8, 0xdd, 0x52, 0xe6, 0x5a, 0xd2, 0x86, 0xd2, 0x9f,
	0x4a, 0xf2, 0x22, 0xa7, 0x1d, 0x9d, 0x6c, 0x72, 0x93, 0x25, 0x08, 0xf8, 0x49, 0x83, 0xc6, 0x2a,
	0x83, 0xbb, 0x00, 0x81, 0xd9, 0x85, 0xbd, 0x0f, 0x79, 0x88, 0x1d, 0x1a, 0xd0, 0x01, 0x43, 0x16,
	0x84, 0x92, 0xa2, 0xb2, 0x0b, 0x74, 0xfb, 0xa3, 0x20, 0x14, 0x81, 0xba, 0x8b, 0x6e, 0x83, 0x14,
	0x9d, 0x2a, 0x09, 0xd9, 0x87, 0x92, 0xc7, 0x07, 0x1c, 0x55, 0x7c, 0xdd, 0x8e, 0x36, 0xa4, 0x06,
	0xe5, 0x97, 0xdc, 0x43, 0x16, 0x44, 0xb1, 0xec, 0x78, 0x67, 0x5e, 0x42, 0x51, 0x7e, 0xfe, 0xfe,
	0xaf, 0xdb, 0x7d, 0x28, 0xa1, 0x40, 0xea, 0xc5, 0x53, 0x46, 0xb4, 0x39, 0xfe, 0xb7, 0x08, 0xaf,
	0xce, 0xa7, 0xf3, 0x92, 0x05, 0x63, 0xde, 0x67, 0xe4, 0x4b, 0xb8, 0x7f, 0xce, 0x30, 0xd5, 0x3a,
	0xcc, 0xfc, 0xfa, 0xa5, 0x47, 0xa7, 0xfa, 0xe3, 0xf5, 0x6a, 0x6c, 0x6e, 0x11, 0x0f, 0xc8, 0x39,
	0xc3, 0xb9, 0x71, 0x8a, 0xbc, 0x93, 0x6f, 0x9f, 0x3f, 0x75, 0x6d, 0x10, 0xed, 0x1a, 0x1e, 0xc8,
	0xf2, 0x24, 0xb2, 0x90, 0xbc, 0x91, 0x6f, 0x9c, 0xad, 0x62, 0xfd, 0xc9, 0xa6, 0xc3, 0x8d, 0xb9,
	0x45, 0x5c, 0xa8, 0x9e, 0x2a, 0x60, 0xa4, 0x1e, 0xf6, 0xd6, 0xda, 0xbd, 0x6f, 0x83, 0x57, 0x7d,
	0x0d, 0xd5, 0x18, 0xfc, 0x2b, 0x33, 0x98, 0x4f, 0x9a, 0x0d, 0x62, 0x75, 0xa0, 0x7a, 0xc6, 0xe4,
	0xa7, 0x65, 0x43, 0x44, 0xd4, 0x16, 0xbe, 0xcf, 0xcf, 0xe4, 0xc8, 0x6e, 0x6e, 0xb5, 0xbf, 0xd7,
	0xc0, 0x10, 0x81, 0x9b, 0xeb, 0xa3, 0xfd, 0x20, 0x71, 0xd2, 0x91, 0x86, 0x1d, 0xed, 0x8b, 0xb3,
	0xd4, 0x78, 0xaf, 0x6c, 0xda, 0x34, 0x64, 0x72, 0xc0, 0x77, 0x99, 0xaf, 0x9c, 0x37, 0x67, 0x9e,
	0xe8, 0x90, 0x87, 0xa9, 0xdf, 0x8b, 0xf7, 0x93, 0xe5, 0x3f, 0x9a, 0xf6, 0x73, 0xa1, 0x72, 0x76,
	0x71, 0x7a, 0xf5, 0x79, 0xab, 0x73, 0xd1, 0x2b, 0x2b, 0xc3, 0xa7, 0xff, 0x05, 0x00, 0x00, 0xff,
	0xff, 0xe0, 0x95, 0xad, 0x22, 0xbf, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaggedAnnotationServiceClient is the client API for TaggedAnnotationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaggedAnnotationServiceClient interface {
	// Retrieves the specified tagged annotation
	GetAnnotation(ctx context.Context, in *AnnotationId, opts ...grpc.CallOption) (*TaggedAnnotation, error)
	// Retrieves a single tagged annotation associated with an entry
	GetEntryAnnotation(ctx context.Context, in *EntryAnnotationRequest, opts ...grpc.CallOption) (*TaggedAnnotation, error)
	// Retrieves all tagged annotations
	ListAnnotations(ctx context.Context, in *ListParameters, opts ...grpc.CallOption) (*TaggedAnnotationCollection, error)
	// Create a tagged annotation
	CreateAnnotation(ctx context.Context, in *NewTaggedAnnotation, opts ...grpc.CallOption) (*TaggedAnnotation, error)
	// Update an existing annotation
	UpdateAnnotation(ctx context.Context, in *TaggedAnnotationUpdate, opts ...grpc.CallOption) (*TaggedAnnotation, error)
	// Delete an existing annotation
	DeleteAnnotation(ctx context.Context, in *AnnotationId, opts ...grpc.CallOption) (*empty.Empty, error)
}

type taggedAnnotationServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaggedAnnotationServiceClient(cc *grpc.ClientConn) TaggedAnnotationServiceClient {
	return &taggedAnnotationServiceClient{cc}
}

func (c *taggedAnnotationServiceClient) GetAnnotation(ctx context.Context, in *AnnotationId, opts ...grpc.CallOption) (*TaggedAnnotation, error) {
	out := new(TaggedAnnotation)
	err := c.cc.Invoke(ctx, "/dictybase.annotation.TaggedAnnotationService/GetAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taggedAnnotationServiceClient) GetEntryAnnotation(ctx context.Context, in *EntryAnnotationRequest, opts ...grpc.CallOption) (*TaggedAnnotation, error) {
	out := new(TaggedAnnotation)
	err := c.cc.Invoke(ctx, "/dictybase.annotation.TaggedAnnotationService/GetEntryAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taggedAnnotationServiceClient) ListAnnotations(ctx context.Context, in *ListParameters, opts ...grpc.CallOption) (*TaggedAnnotationCollection, error) {
	out := new(TaggedAnnotationCollection)
	err := c.cc.Invoke(ctx, "/dictybase.annotation.TaggedAnnotationService/ListAnnotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taggedAnnotationServiceClient) CreateAnnotation(ctx context.Context, in *NewTaggedAnnotation, opts ...grpc.CallOption) (*TaggedAnnotation, error) {
	out := new(TaggedAnnotation)
	err := c.cc.Invoke(ctx, "/dictybase.annotation.TaggedAnnotationService/CreateAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taggedAnnotationServiceClient) UpdateAnnotation(ctx context.Context, in *TaggedAnnotationUpdate, opts ...grpc.CallOption) (*TaggedAnnotation, error) {
	out := new(TaggedAnnotation)
	err := c.cc.Invoke(ctx, "/dictybase.annotation.TaggedAnnotationService/UpdateAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taggedAnnotationServiceClient) DeleteAnnotation(ctx context.Context, in *AnnotationId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/dictybase.annotation.TaggedAnnotationService/DeleteAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaggedAnnotationServiceServer is the server API for TaggedAnnotationService service.
type TaggedAnnotationServiceServer interface {
	// Retrieves the specified tagged annotation
	GetAnnotation(context.Context, *AnnotationId) (*TaggedAnnotation, error)
	// Retrieves a single tagged annotation associated with an entry
	GetEntryAnnotation(context.Context, *EntryAnnotationRequest) (*TaggedAnnotation, error)
	// Retrieves all tagged annotations
	ListAnnotations(context.Context, *ListParameters) (*TaggedAnnotationCollection, error)
	// Create a tagged annotation
	CreateAnnotation(context.Context, *NewTaggedAnnotation) (*TaggedAnnotation, error)
	// Update an existing annotation
	UpdateAnnotation(context.Context, *TaggedAnnotationUpdate) (*TaggedAnnotation, error)
	// Delete an existing annotation
	DeleteAnnotation(context.Context, *AnnotationId) (*empty.Empty, error)
}

func RegisterTaggedAnnotationServiceServer(s *grpc.Server, srv TaggedAnnotationServiceServer) {
	s.RegisterService(&_TaggedAnnotationService_serviceDesc, srv)
}

func _TaggedAnnotationService_GetAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnotationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaggedAnnotationServiceServer).GetAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.annotation.TaggedAnnotationService/GetAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaggedAnnotationServiceServer).GetAnnotation(ctx, req.(*AnnotationId))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaggedAnnotationService_GetEntryAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryAnnotationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaggedAnnotationServiceServer).GetEntryAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.annotation.TaggedAnnotationService/GetEntryAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaggedAnnotationServiceServer).GetEntryAnnotation(ctx, req.(*EntryAnnotationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaggedAnnotationService_ListAnnotations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaggedAnnotationServiceServer).ListAnnotations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.annotation.TaggedAnnotationService/ListAnnotations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaggedAnnotationServiceServer).ListAnnotations(ctx, req.(*ListParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaggedAnnotationService_CreateAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTaggedAnnotation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaggedAnnotationServiceServer).CreateAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.annotation.TaggedAnnotationService/CreateAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaggedAnnotationServiceServer).CreateAnnotation(ctx, req.(*NewTaggedAnnotation))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaggedAnnotationService_UpdateAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaggedAnnotationUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaggedAnnotationServiceServer).UpdateAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.annotation.TaggedAnnotationService/UpdateAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaggedAnnotationServiceServer).UpdateAnnotation(ctx, req.(*TaggedAnnotationUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaggedAnnotationService_DeleteAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnotationId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaggedAnnotationServiceServer).DeleteAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.annotation.TaggedAnnotationService/DeleteAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaggedAnnotationServiceServer).DeleteAnnotation(ctx, req.(*AnnotationId))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaggedAnnotationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.annotation.TaggedAnnotationService",
	HandlerType: (*TaggedAnnotationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAnnotation",
			Handler:    _TaggedAnnotationService_GetAnnotation_Handler,
		},
		{
			MethodName: "GetEntryAnnotation",
			Handler:    _TaggedAnnotationService_GetEntryAnnotation_Handler,
		},
		{
			MethodName: "ListAnnotations",
			Handler:    _TaggedAnnotationService_ListAnnotations_Handler,
		},
		{
			MethodName: "CreateAnnotation",
			Handler:    _TaggedAnnotationService_CreateAnnotation_Handler,
		},
		{
			MethodName: "UpdateAnnotation",
			Handler:    _TaggedAnnotationService_UpdateAnnotation_Handler,
		},
		{
			MethodName: "DeleteAnnotation",
			Handler:    _TaggedAnnotationService_DeleteAnnotation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "annotation.proto",
}
