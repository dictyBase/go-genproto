// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: dictybase/feature_annotation/feature_annotation_organism.proto

package feature_annotation

import (
	organism "github.com/dictyBase/go-genproto/dictybaseapis/organism"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message for linking feature to organism
type OrganismFeatureLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganismId int64  `protobuf:"varint,1,opt,name=organism_id,json=organismId,proto3" json:"organism_id,omitempty"`
	FeatureId  string `protobuf:"bytes,2,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
}

func (x *OrganismFeatureLink) Reset() {
	*x = OrganismFeatureLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganismFeatureLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganismFeatureLink) ProtoMessage() {}

func (x *OrganismFeatureLink) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganismFeatureLink.ProtoReflect.Descriptor instead.
func (*OrganismFeatureLink) Descriptor() ([]byte, []int) {
	return file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescGZIP(), []int{0}
}

func (x *OrganismFeatureLink) GetOrganismId() int64 {
	if x != nil {
		return x.OrganismId
	}
	return 0
}

func (x *OrganismFeatureLink) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

// Message for updating organism-feature relationship
type OrganismFeatureUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureId     string `protobuf:"bytes,1,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	NewOrganismId int64  `protobuf:"varint,2,opt,name=new_organism_id,json=newOrganismId,proto3" json:"new_organism_id,omitempty"`
}

func (x *OrganismFeatureUpdate) Reset() {
	*x = OrganismFeatureUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganismFeatureUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganismFeatureUpdate) ProtoMessage() {}

func (x *OrganismFeatureUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganismFeatureUpdate.ProtoReflect.Descriptor instead.
func (*OrganismFeatureUpdate) Descriptor() ([]byte, []int) {
	return file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescGZIP(), []int{1}
}

func (x *OrganismFeatureUpdate) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

func (x *OrganismFeatureUpdate) GetNewOrganismId() int64 {
	if x != nil {
		return x.NewOrganismId
	}
	return 0
}

var File_dictybase_feature_annotation_feature_annotation_organism_proto protoreflect.FileDescriptor

var file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1c, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b,
	0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a,
	0x13, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x27, 0x0a, 0x0b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10,
	0x00, 0x52, 0x0a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x15, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x73, 0x6d, 0x49, 0x64, 0x32, 0xb5, 0x03, 0x0a, 0x16, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x64, 0x0a, 0x15, 0x4c, 0x69, 0x6e, 0x6b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x6f,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x31, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x31, 0x2e, 0x64, 0x69,
	0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x1c,
	0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x22, 0x00, 0x12, 0x66,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x33, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12,
	0x31, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x93, 0x01, 0x0a,
	0x15, 0x6f, 0x72, 0x67, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x14, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x54,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x79,
	0x42, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x64, 0x69, 0x63, 0x74, 0x79, 0x62, 0x61, 0x73, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x3b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x08, 0x44, 0x49, 0x43, 0x54, 0x59, 0x41,
	0x50, 0x49, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescOnce sync.Once
	file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescData = file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDesc
)

func file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescGZIP() []byte {
	file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescOnce.Do(func() {
		file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescData = protoimpl.X.CompressGZIP(file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescData)
	})
	return file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDescData
}

var file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dictybase_feature_annotation_feature_annotation_organism_proto_goTypes = []interface{}{
	(*OrganismFeatureLink)(nil),   // 0: dictybase.feature_annotation.OrganismFeatureLink
	(*OrganismFeatureUpdate)(nil), // 1: dictybase.feature_annotation.OrganismFeatureUpdate
	(*FeatureAnnotationId)(nil),   // 2: dictybase.feature_annotation.FeatureAnnotationId
	(*emptypb.Empty)(nil),         // 3: google.protobuf.Empty
	(*organism.Organism)(nil),     // 4: dictybase.organism.Organism
}
var file_dictybase_feature_annotation_feature_annotation_organism_proto_depIdxs = []int32{
	0, // 0: dictybase.feature_annotation.OrganismFeatureService.LinkFeatureToOrganism:input_type -> dictybase.feature_annotation.OrganismFeatureLink
	2, // 1: dictybase.feature_annotation.OrganismFeatureService.GetFeatureOrganism:input_type -> dictybase.feature_annotation.FeatureAnnotationId
	1, // 2: dictybase.feature_annotation.OrganismFeatureService.UpdateFeatureOrganism:input_type -> dictybase.feature_annotation.OrganismFeatureUpdate
	2, // 3: dictybase.feature_annotation.OrganismFeatureService.RemoveFeatureOrganism:input_type -> dictybase.feature_annotation.FeatureAnnotationId
	3, // 4: dictybase.feature_annotation.OrganismFeatureService.LinkFeatureToOrganism:output_type -> google.protobuf.Empty
	4, // 5: dictybase.feature_annotation.OrganismFeatureService.GetFeatureOrganism:output_type -> dictybase.organism.Organism
	3, // 6: dictybase.feature_annotation.OrganismFeatureService.UpdateFeatureOrganism:output_type -> google.protobuf.Empty
	3, // 7: dictybase.feature_annotation.OrganismFeatureService.RemoveFeatureOrganism:output_type -> google.protobuf.Empty
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dictybase_feature_annotation_feature_annotation_organism_proto_init() }
func file_dictybase_feature_annotation_feature_annotation_organism_proto_init() {
	if File_dictybase_feature_annotation_feature_annotation_organism_proto != nil {
		return
	}
	file_dictybase_feature_annotation_feature_annotation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganismFeatureLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganismFeatureUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dictybase_feature_annotation_feature_annotation_organism_proto_goTypes,
		DependencyIndexes: file_dictybase_feature_annotation_feature_annotation_organism_proto_depIdxs,
		MessageInfos:      file_dictybase_feature_annotation_feature_annotation_organism_proto_msgTypes,
	}.Build()
	File_dictybase_feature_annotation_feature_annotation_organism_proto = out.File
	file_dictybase_feature_annotation_feature_annotation_organism_proto_rawDesc = nil
	file_dictybase_feature_annotation_feature_annotation_organism_proto_goTypes = nil
	file_dictybase_feature_annotation_feature_annotation_organism_proto_depIdxs = nil
}
