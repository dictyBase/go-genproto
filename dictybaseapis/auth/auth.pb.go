// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	identity "github.com/dictyBase/go-genproto/dictybaseapis/identity"
	user "github.com/dictyBase/go-genproto/dictybaseapis/user"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Definition of an individual auth response
type Auth struct {
	// JSON Web Token (JWT)
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Refresh token
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// Identity of user
	Identity *identity.Identity `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
	// User API data
	User                 *user.User `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Auth) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *Auth) GetIdentity() *identity.Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Auth) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

type NewLogin struct {
	// Client ID received during application registration from every provider
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Scope of the application
	Scopes string `protobuf:"bytes,2,opt,name=scopes,proto3" json:"scopes,omitempty"`
	// An unguessable random string. It is used to protect against cross-site request
	// forgery attacks. It is passed to the provider during first login.
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// The URL in the application where users will be sent after authorization,
	// generally provided during the registration of the application.
	RedirectUrl string `protobuf:"bytes,4,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	// The code that is received as response from the first login
	Code string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// Third party oAuth provider
	Provider             string   `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewLogin) Reset()         { *m = NewLogin{} }
func (m *NewLogin) String() string { return proto.CompactTextString(m) }
func (*NewLogin) ProtoMessage()    {}
func (*NewLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *NewLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewLogin.Unmarshal(m, b)
}
func (m *NewLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewLogin.Marshal(b, m, deterministic)
}
func (m *NewLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewLogin.Merge(m, src)
}
func (m *NewLogin) XXX_Size() int {
	return xxx_messageInfo_NewLogin.Size(m)
}
func (m *NewLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_NewLogin.DiscardUnknown(m)
}

var xxx_messageInfo_NewLogin proto.InternalMessageInfo

func (m *NewLogin) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *NewLogin) GetScopes() string {
	if m != nil {
		return m.Scopes
	}
	return ""
}

func (m *NewLogin) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *NewLogin) GetRedirectUrl() string {
	if m != nil {
		return m.RedirectUrl
	}
	return ""
}

func (m *NewLogin) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *NewLogin) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type NewRelogin struct {
	// Refresh token
	RefreshToken         string   `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRelogin) Reset()         { *m = NewRelogin{} }
func (m *NewRelogin) String() string { return proto.CompactTextString(m) }
func (*NewRelogin) ProtoMessage()    {}
func (*NewRelogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *NewRelogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRelogin.Unmarshal(m, b)
}
func (m *NewRelogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRelogin.Marshal(b, m, deterministic)
}
func (m *NewRelogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRelogin.Merge(m, src)
}
func (m *NewRelogin) XXX_Size() int {
	return xxx_messageInfo_NewRelogin.Size(m)
}
func (m *NewRelogin) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRelogin.DiscardUnknown(m)
}

var xxx_messageInfo_NewRelogin proto.InternalMessageInfo

func (m *NewRelogin) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type NewToken struct {
	// JSON Web Token (JWT)
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Refresh token (unique ID)
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewToken) Reset()         { *m = NewToken{} }
func (m *NewToken) String() string { return proto.CompactTextString(m) }
func (*NewToken) ProtoMessage()    {}
func (*NewToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{3}
}

func (m *NewToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewToken.Unmarshal(m, b)
}
func (m *NewToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewToken.Marshal(b, m, deterministic)
}
func (m *NewToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewToken.Merge(m, src)
}
func (m *NewToken) XXX_Size() int {
	return xxx_messageInfo_NewToken.Size(m)
}
func (m *NewToken) XXX_DiscardUnknown() {
	xxx_messageInfo_NewToken.DiscardUnknown(m)
}

var xxx_messageInfo_NewToken proto.InternalMessageInfo

func (m *NewToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *NewToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type NewRefreshToken struct {
	// Refresh token (unique ID)
	RefreshToken         string   `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRefreshToken) Reset()         { *m = NewRefreshToken{} }
func (m *NewRefreshToken) String() string { return proto.CompactTextString(m) }
func (*NewRefreshToken) ProtoMessage()    {}
func (*NewRefreshToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{4}
}

func (m *NewRefreshToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRefreshToken.Unmarshal(m, b)
}
func (m *NewRefreshToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRefreshToken.Marshal(b, m, deterministic)
}
func (m *NewRefreshToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRefreshToken.Merge(m, src)
}
func (m *NewRefreshToken) XXX_Size() int {
	return xxx_messageInfo_NewRefreshToken.Size(m)
}
func (m *NewRefreshToken) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRefreshToken.DiscardUnknown(m)
}

var xxx_messageInfo_NewRefreshToken proto.InternalMessageInfo

func (m *NewRefreshToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type Token struct {
	// JSON Web Token (JWT)
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Refresh token (unique ID)
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{5}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func init() {
	proto.RegisterType((*Auth)(nil), "dictybase.auth.Auth")
	proto.RegisterType((*NewLogin)(nil), "dictybase.auth.NewLogin")
	proto.RegisterType((*NewRelogin)(nil), "dictybase.auth.NewRelogin")
	proto.RegisterType((*NewToken)(nil), "dictybase.auth.NewToken")
	proto.RegisterType((*NewRefreshToken)(nil), "dictybase.auth.NewRefreshToken")
	proto.RegisterType((*Token)(nil), "dictybase.auth.Token")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0xb5, 0x5c, 0xdb, 0xb5, 0xc7, 0x69, 0x03, 0x8b, 0x5b, 0x54, 0x35, 0x34, 0xa9, 0x72, 0x71,
	0x29, 0x96, 0x20, 0x85, 0x90, 0x50, 0x7a, 0x88, 0x93, 0x50, 0x0c, 0x21, 0x18, 0x37, 0x81, 0xb6,
	0x17, 0x23, 0x4b, 0x13, 0x79, 0x89, 0xec, 0x35, 0xab, 0x95, 0x8d, 0x7f, 0xa3, 0x9f, 0x50, 0xe8,
	0x3f, 0xf5, 0x56, 0xe8, 0x57, 0xf4, 0x58, 0x76, 0x57, 0x92, 0x2d, 0xe3, 0x5e, 0x9a, 0xcb, 0xb2,
	0x9a, 0xf7, 0xde, 0xee, 0x9b, 0x19, 0xed, 0x00, 0x78, 0x89, 0x18, 0x3b, 0x33, 0xce, 0x04, 0x23,
	0x4f, 0x03, 0xea, 0x8b, 0xe5, 0xc8, 0x8b, 0xd1, 0x91, 0x51, 0xeb, 0x65, 0xc8, 0x58, 0x18, 0xa1,
	0xab, 0xd0, 0x51, 0x72, 0xe7, 0xe2, 0x64, 0x26, 0x96, 0x9a, 0x6c, 0x1d, 0x87, 0x54, 0x8c, 0x93,
	0x91, 0xe3, 0xb3, 0x89, 0x3b, 0x59, 0x50, 0x71, 0xcf, 0x16, 0x6e, 0xc8, 0x3a, 0x0a, 0xec, 0xcc,
	0xbd, 0x88, 0x06, 0x9e, 0x60, 0x3c, 0x76, 0xf3, 0x6d, 0xaa, 0x7b, 0x9d, 0x5f, 0xe2, 0xd2, 0x00,
	0xa7, 0x82, 0x8a, 0x65, 0xbe, 0x49, 0x29, 0x2f, 0x56, 0x94, 0x24, 0x46, 0xae, 0x16, 0x0d, 0xd9,
	0x3f, 0x0c, 0xa8, 0x9c, 0x25, 0x62, 0x4c, 0x5a, 0x50, 0x15, 0xec, 0x1e, 0xa7, 0xa6, 0x71, 0x60,
	0xb4, 0x1b, 0x03, 0xfd, 0x41, 0x0e, 0xe1, 0x09, 0xc7, 0x3b, 0x8e, 0xf1, 0x78, 0xa8, 0xd1, 0xb2,
	0x42, 0x77, 0xd2, 0xe0, 0x8d, 0x22, 0x9d, 0x40, 0x3d, 0xbb, 0xd0, 0x7c, 0x74, 0x60, 0xb4, 0x9b,
	0x47, 0x7b, 0xce, 0x2a, 0xf3, 0xdc, 0x4b, 0x2f, 0xdd, 0x0c, 0x72, 0x36, 0x69, 0x43, 0x45, 0x7a,
	0x31, 0x2b, 0x4a, 0xd5, 0x5a, 0x53, 0x29, 0x8b, 0xb7, 0x31, 0xf2, 0x81, 0x62, 0xd8, 0x3f, 0x0d,
	0xa8, 0x5f, 0xe3, 0xe2, 0x8a, 0x85, 0x54, 0xba, 0x6a, 0xf8, 0x11, 0xc5, 0xa9, 0x18, 0xd2, 0x40,
	0xfb, 0xed, 0xd6, 0x7e, 0xff, 0xda, 0x2f, 0x7f, 0x36, 0x06, 0x75, 0x0d, 0xf4, 0x02, 0xf2, 0x0a,
	0x6a, 0xb1, 0xcf, 0x66, 0x18, 0x6b, 0xcf, 0x39, 0x23, 0x8d, 0x92, 0x3d, 0xa8, 0xc6, 0xc2, 0x13,
	0xa8, 0x2c, 0xaf, 0x60, 0x1d, 0x24, 0x6f, 0x60, 0x87, 0x63, 0x40, 0x39, 0xfa, 0x62, 0x98, 0xf0,
	0x48, 0x39, 0x5c, 0x91, 0x9a, 0x19, 0x76, 0xcb, 0x23, 0x62, 0x41, 0xc5, 0x67, 0x01, 0x9a, 0xd5,
	0x02, 0x45, 0xc5, 0x88, 0x0d, 0xf5, 0x19, 0x67, 0x73, 0x1a, 0x20, 0x37, 0x6b, 0x45, 0xa3, 0x59,
	0xdc, 0x3e, 0x05, 0xb8, 0xc6, 0xc5, 0x00, 0x23, 0x95, 0xdb, 0xdb, 0xcd, 0x8a, 0x17, 0xf3, 0x2b,
	0x54, 0xde, 0xbe, 0x54, 0x45, 0xd1, 0x5d, 0xf8, 0xff, 0x06, 0xda, 0xc7, 0xb0, 0xab, 0x1c, 0xac,
	0xf5, 0xf4, 0x70, 0xab, 0x8d, 0x0d, 0x5d, 0x17, 0xaa, 0x0f, 0xbd, 0xfb, 0xe8, 0x5b, 0x19, 0x9a,
	0xf2, 0x07, 0xfc, 0x84, 0x7c, 0x4e, 0x7d, 0x24, 0xa7, 0x50, 0xd5, 0x4d, 0x36, 0x9d, 0xe2, 0xeb,
	0x71, 0xb2, 0xf6, 0x5b, 0xad, 0x4d, 0x44, 0xea, 0xed, 0x12, 0xf9, 0x00, 0x8f, 0xb3, 0x2a, 0x5a,
	0x5b, 0xc4, 0x29, 0xf6, 0x4f, 0xf9, 0x05, 0xec, 0x7e, 0x44, 0x51, 0xa8, 0xc2, 0x36, 0x0f, 0x0a,
	0xb1, 0x9e, 0x6d, 0x22, 0xba, 0x22, 0x25, 0x72, 0x0e, 0xb5, 0x2b, 0x16, 0xb2, 0x44, 0x90, 0xfd,
	0xad, 0x1e, 0x56, 0xa7, 0x5b, 0xcf, 0x1d, 0x3d, 0x0f, 0x9c, 0x6c, 0x1e, 0x38, 0x97, 0x72, 0x1e,
	0xd8, 0xa5, 0x2e, 0x05, 0xc2, 0x78, 0xb8, 0xa1, 0xef, 0x36, 0xa4, 0xd1, 0xbe, 0xe4, 0xf6, 0x8d,
	0xaf, 0x27, 0x6b, 0xe3, 0x42, 0xf1, 0xba, 0xf2, 0x79, 0x87, 0xac, 0x13, 0xe2, 0x54, 0x9d, 0xe7,
	0xe6, 0x6a, 0x6f, 0x46, 0x63, 0x57, 0x9e, 0xf0, 0x5e, 0x2e, 0x7f, 0x0c, 0xe3, 0x7b, 0xb9, 0x7e,
	0xd1, 0x3b, 0xbf, 0xf9, 0x72, 0xd6, 0xef, 0x8d, 0x6a, 0x8a, 0xfc, 0xee, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x06, 0x93, 0xaf, 0x6c, 0xb8, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	// Logs user into authserver
	Login(ctx context.Context, in *NewLogin, opts ...grpc.CallOption) (*Auth, error)
	// Logs user into authserver
	Relogin(ctx context.Context, in *NewRelogin, opts ...grpc.CallOption) (*Auth, error)
	// Retrieves new refresh token and JWT
	GetRefreshToken(ctx context.Context, in *NewToken, opts ...grpc.CallOption) (*Token, error)
	// Logs user out of authserver
	Logout(ctx context.Context, in *NewRefreshToken, opts ...grpc.CallOption) (*empty.Empty, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Login(ctx context.Context, in *NewLogin, opts ...grpc.CallOption) (*Auth, error) {
	out := new(Auth)
	err := c.cc.Invoke(ctx, "/dictybase.auth.AuthService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Relogin(ctx context.Context, in *NewRelogin, opts ...grpc.CallOption) (*Auth, error) {
	out := new(Auth)
	err := c.cc.Invoke(ctx, "/dictybase.auth.AuthService/Relogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetRefreshToken(ctx context.Context, in *NewToken, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/dictybase.auth.AuthService/GetRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Logout(ctx context.Context, in *NewRefreshToken, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/dictybase.auth.AuthService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	// Logs user into authserver
	Login(context.Context, *NewLogin) (*Auth, error)
	// Logs user into authserver
	Relogin(context.Context, *NewRelogin) (*Auth, error)
	// Retrieves new refresh token and JWT
	GetRefreshToken(context.Context, *NewToken) (*Token, error)
	// Logs user out of authserver
	Logout(context.Context, *NewRefreshToken) (*empty.Empty, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Login(ctx context.Context, req *NewLogin) (*Auth, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthServiceServer) Relogin(ctx context.Context, req *NewRelogin) (*Auth, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Relogin not implemented")
}
func (*UnimplementedAuthServiceServer) GetRefreshToken(ctx context.Context, req *NewToken) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRefreshToken not implemented")
}
func (*UnimplementedAuthServiceServer) Logout(ctx context.Context, req *NewRefreshToken) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.auth.AuthService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*NewLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Relogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRelogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Relogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.auth.AuthService/Relogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Relogin(ctx, req.(*NewRelogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.auth.AuthService/GetRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetRefreshToken(ctx, req.(*NewToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRefreshToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dictybase.auth.AuthService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Logout(ctx, req.(*NewRefreshToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dictybase.auth.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
		{
			MethodName: "Relogin",
			Handler:    _AuthService_Relogin_Handler,
		},
		{
			MethodName: "GetRefreshToken",
			Handler:    _AuthService_GetRefreshToken_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _AuthService_Logout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
